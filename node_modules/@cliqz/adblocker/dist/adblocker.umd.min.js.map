{"version":3,"file":"adblocker.umd.min.js","sources":["../../../node_modules/@remusao/trie/index.ts","../../../node_modules/@remusao/smaz-compress/index.ts","../../../node_modules/@remusao/smaz-decompress/index.ts","../../../node_modules/@remusao/smaz/index.ts","../src/codebooks/cosmetic-selector.ts","../src/codebooks/network-csp.ts","../src/codebooks/network-filter.ts","../src/codebooks/network-hostname.ts","../src/codebooks/network-redirect.ts","../src/codebooks/raw-network.ts","../src/codebooks/raw-cosmetic.ts","../src/compression.ts","../src/crc32.ts","../src/punycode.ts","../src/data-view.ts","../src/queue-microtask.ts","../src/config.ts","../src/events.ts","../src/fetch.ts","../src/filters/dsl.ts","../../adblocker-extended-selectors/src/parse.ts","../../adblocker-extended-selectors/src/types.ts","../../adblocker-extended-selectors/src/extended.ts","../../../node_modules/@remusao/guess-url-type/src/extensions/documents.ts","../../../node_modules/@remusao/guess-url-type/src/extensions/fonts.ts","../../../node_modules/@remusao/guess-url-type/src/extensions/images.ts","../../../node_modules/@remusao/guess-url-type/src/extensions/medias.ts","../../../node_modules/@remusao/guess-url-type/src/extensions/scripts.ts","../../../node_modules/@remusao/guess-url-type/src/extensions/stylesheets.ts","../../../node_modules/tldts-core/src/extract-hostname.ts","../../../node_modules/tldts-core/src/is-valid.ts","../../../node_modules/tldts-core/src/options.ts","../../../node_modules/tldts-core/src/factory.ts","../../../node_modules/tldts-core/src/is-ip.ts","../../../node_modules/tldts-core/src/domain.ts","../../../node_modules/tldts-core/src/subdomain.ts","../../../node_modules/tldts-core/src/domain-without-suffix.ts","../../../node_modules/tldts-experimental/src/data/hashes.ts","../../../node_modules/tldts-experimental/src/packed-hashes.ts","../../../node_modules/tldts-core/src/lookup/fast-path.ts","../../../node_modules/tldts-experimental/index.ts","../src/tokens-buffer.ts","../src/utils.ts","../src/request.ts","../../../node_modules/@remusao/guess-url-type/index.ts","../../../node_modules/@remusao/guess-url-type/src/extname.ts","../src/engine/domains.ts","../src/html-filtering.ts","../src/filters/cosmetic.ts","../src/filters/network.ts","../src/lists.ts","../../../node_modules/@remusao/small/src/flv.ts","../../../node_modules/@remusao/small/src/gif.ts","../../../node_modules/@remusao/small/src/html.ts","../../../node_modules/@remusao/small/src/ico.ts","../../../node_modules/@remusao/small/src/jpeg.ts","../../../node_modules/@remusao/small/src/javascript.ts","../../../node_modules/@remusao/small/src/json.ts","../../../node_modules/@remusao/small/src/mp3.ts","../../../node_modules/@remusao/small/src/mp4.ts","../../../node_modules/@remusao/small/src/pdf.ts","../../../node_modules/@remusao/small/src/png.ts","../../../node_modules/@remusao/small/src/svg.ts","../../../node_modules/@remusao/small/src/txt.ts","../../../node_modules/@remusao/small/src/wav.ts","../../../node_modules/@remusao/small/src/webm.ts","../../../node_modules/@remusao/small/src/webp.ts","../../../node_modules/@remusao/small/src/wmv.ts","../../../node_modules/@remusao/small/index.ts","../src/resources.ts","../src/compact-set.ts","../src/engine/optimizer.ts","../src/engine/reverse-index.ts","../src/engine/bucket/filters.ts","../src/engine/bucket/cosmetic.ts","../src/engine/bucket/network.ts","../src/engine/engine.ts","../src/encoding.ts"],"sourcesContent":[null,null,null,null,"/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* tslint:disable quotemark */\nexport default [\n  \"div[style=\\\"position: fixed; display: block; width: 100%; height: 100%; inset: 0px; background-color: rgba(0, 0, 0, 0); z-index: 300000;\\\"]\",\n  \":not([style^=\\\"position: absolute; left: -5000px\\\"])\",\n  \"acis, document.querySelectorAll, popMagic\",\n  \"aost, String.prototype.charCodeAt, ai_\",\n  \"aopr, app_vars.force_disable_adblock\",\n  \"aost, Math.random, /\\\\st\\\\.[a-zA-Z]*\\\\s\",\n  \"addEventListener, google_ad_client\",\n  \"paid.outbrain.com/network/redir?\\\"]\",\n  \"acis, document.addEventListener, \",\n  \"^script:has-text(break;case $.)\",\n  \"acis, document.getElementById, \",\n  \"acis, JSON.parse, break;case $.\",\n  \"acis, document.createElement, \",\n  \"acis, parseInt, break;case $.\",\n  \"aopr, document.dispatchEvent\",\n  \"acis, String.fromCharCode, \",\n  \"acis, Math, break;case $.\",\n  \"nosiif, visibility, 1000\",\n  \"document.onselectstart\",\n  \"aeld, , break;case $.\",\n  \"set, blurred, false\",\n  \"aeld, DOMContentLo\",\n  \"decodeURIComponent\",\n  \"[target=\\\"_blank\\\"]\",\n  \"[href^=\\\"https://\",\n  \"disableSelection\",\n  \"[href^=\\\"http://\",\n  \"#custom_html-\",\n  \"BlockDetected\",\n  \"no-fetch-if, \",\n  \"dvertisement\",\n  \"nextFunction\",\n  \"notification\",\n  \"contextmenu\",\n  \", noopFunc\",\n  \":has-text(\",\n  \"AaDetector\",\n  \"aopw, _pop\",\n  \"background\",\n  \"container\",\n  \"Container\",\n  \"decodeURI\",\n  \"div[id^=\\\"\",\n  \"div[style\",\n  \"no-xhr-if\",\n  \"placehold\",\n  \"rectangle\",\n  \"[href*=\\\"\",\n  \"disclaim\",\n  \"https://\",\n  \"nano-sib\",\n  \"nostif, \",\n  \"Notifica\",\n  \"nowebrtc\",\n  \"skyscrap\",\n  \".com/\\\"]\",\n  \"300x250\",\n  \"article\",\n  \"consent\",\n  \"content\",\n  \"message\",\n  \"privacy\",\n  \"sidebar\",\n  \"sponsor\",\n  \"wpsafe-\",\n  \"wrapper\",\n  \"[class\",\n  \"[data-\",\n  \"728x90\",\n  \"accept\",\n  \"Accept\",\n  \"acis, \",\n  \"aeld, \",\n  \"aopr, \",\n  \"aopw, \",\n  \"banner\",\n  \"bottom\",\n  \"Bottom\",\n  \"cookie\",\n  \"Cookie\",\n  \"google\",\n  \"notice\",\n  \"nowoif\",\n  \"policy\",\n  \"Policy\",\n  \"script\",\n  \"widget\",\n  \":has(\",\n  \":not(\",\n  \"block\",\n  \"Block\",\n  \"board\",\n  \"click\",\n  \"docum\",\n  \"frame\",\n  \"modal\",\n  \"popup\",\n  \"promo\",\n  \"sense\",\n  \"set, \",\n  \"width\",\n  \"Wrapp\",\n  \".com\",\n  \"0px;\",\n  \"body\",\n  \"dfp-\",\n  \"down\",\n  \"foot\",\n  \"gdpr\",\n  \"home\",\n  \"html\",\n  \"icky\",\n  \"ight\",\n  \"show\",\n  \"text\",\n  \"tion\",\n  \"true\",\n  \"view\",\n  \"wrap\",\n  \"www.\",\n  \" > \",\n  \"age\",\n  \"box\",\n  \"Box\",\n  \"div\",\n  \"ent\",\n  \"ide\",\n  \"lay\",\n  \"out\",\n  \"sby\",\n  \"top\",\n  \"__\",\n  \", \",\n  \".a\",\n  \".m\",\n  \".t\",\n  \"\\\"]\",\n  \"=\\\"\",\n  \"00\",\n  \"ab\",\n  \"ac\",\n  \"ad\",\n  \"Ad\",\n  \"al\",\n  \"an\",\n  \"ar\",\n  \"at\",\n  \"ct\",\n  \"de\",\n  \"e-\",\n  \"ed\",\n  \"el\",\n  \"en\",\n  \"er\",\n  \"et\",\n  \"fi\",\n  \"fo\",\n  \"g-\",\n  \"he\",\n  \"ic\",\n  \"id\",\n  \"il\",\n  \"im\",\n  \"in\",\n  \"is\",\n  \"it\",\n  \"la\",\n  \"le\",\n  \"lo\",\n  \"mp\",\n  \"no\",\n  \"od\",\n  \"ol\",\n  \"om\",\n  \"on\",\n  \"op\",\n  \"or\",\n  \"ov\",\n  \"ra\",\n  \"re\",\n  \"ro\",\n  \"s_\",\n  \"s-\",\n  \"se\",\n  \"sp\",\n  \"st\",\n  \"t-\",\n  \"un\",\n  \" \",\n  \"_\",\n  \"-\",\n  \";\",\n  \":\",\n  \".\",\n  \")\",\n  \"[\",\n  \"]\",\n  \"*\",\n  \"/\",\n  \"#\",\n  \"^\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"a\",\n  \"A\",\n  \"b\",\n  \"B\",\n  \"c\",\n  \"C\",\n  \"d\",\n  \"D\",\n  \"e\",\n  \"E\",\n  \"f\",\n  \"F\",\n  \"g\",\n  \"h\",\n  \"H\",\n  \"i\",\n  \"I\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"L\",\n  \"m\",\n  \"M\",\n  \"n\",\n  \"N\",\n  \"o\",\n  \"O\",\n  \"p\",\n  \"P\",\n  \"q\",\n  \"r\",\n  \"R\",\n  \"s\",\n  \"S\",\n  \"t\",\n  \"T\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"W\",\n  \"x\",\n  \"y\",\n  \"z\"\n];","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* tslint:disable quotemark */\nexport default [\n  \"sandbox allow-forms allow-same-origin allow-scripts allow-modals allow-orientation-lock allow-pointer-lock allow-presentation allow-top-navigation\",\n  \"script-src 'self' 'unsafe-inline' 'unsafe-eval' data:\",\n  \" *.google.com *.gstatic.com *.googleapis.com\",\n  \".com *.google.com *.googletagmanager.com *.\",\n  \"script-src 'self' '*' 'unsafe-inline'\",\n  \"default-src 'unsafe-inline' 'self'\",\n  \"script-src 'self' 'unsafe-inline' \",\n  \"script-src 'self' 'unsafe-eval' \",\n  \".com *.google.com *.gstatic.com\",\n  \"script-src * 'unsafe-inline'\",\n  \".com *.googletagmanager.com\",\n  \".com *.googleapis.com *.\",\n  \" *.google-analytics.com\",\n  \" *.gstatic.com *.google\",\n  \" *.cloudflare.com *.\",\n  \" *.bootstrapcdn.com\",\n  \".com *.gstatic.com\",\n  \"default-src 'self'\",\n  \"frame-src 'self' *\",\n  \".googletagmanager\",\n  \"child-src 'none';\",\n  \"worker-src 'none'\",\n  \"'unsafe-inline'\",\n  \"'unsafe-eval' \",\n  \"facebook.net \",\n  \"connect-src \",\n  \"child-src *\",\n  \"script-src \",\n  \"cloudflare\",\n  \"jquery.com\",\n  \"style-src \",\n  \"frame-src\",\n  \"facebook\",\n  \"https://\",\n  \" blob: \",\n  \".com *.\",\n  \".google\",\n  \"addthis\",\n  \"captcha\",\n  \"gstatic\",\n  \" data:\",\n  \"'self'\",\n  \"disqus\",\n  \"google\",\n  \"https:\",\n  \"http:\",\n  \"media\",\n  \"ytimg\",\n  \"-src\",\n  \".com\",\n  \".net\",\n  \"apis\",\n  \" *.\",\n  \".cc\",\n  \"age\",\n  \"cdn\",\n  \"fil\",\n  \"str\",\n  \"tag\",\n  \"vic\",\n  \" *\",\n  \"*.\",\n  \"an\",\n  \"at\",\n  \"ch\",\n  \"de\",\n  \"ea\",\n  \"er\",\n  \"es\",\n  \"fa\",\n  \"ic\",\n  \"im\",\n  \"in\",\n  \"m:\",\n  \"me\",\n  \"on\",\n  \"ra\",\n  \"re\",\n  \"te\",\n  \"tu\",\n  \"wi\",\n  \"wp\",\n  \"ww\",\n  \" \",\n  \"-\",\n  \";\",\n  \":\",\n  \".\",\n  \"'\",\n  \"*\",\n  \"/\",\n  \"5\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\"\n];","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* tslint:disable quotemark */\nexport default [\n  \":style(width:1px!important;height:1px!important;min-width:1px!important;min-height:1px!important;margin:0!important;padding:0!important;overflow:hidden!important;opacity:0!important)\",\n  \"/[ac][-\\\\.\\\\/_A-Za-z][DHW][-\\\\.\\\\/_A-Za-z][59VZ][-\\\\.\\\\/_A-Za-z][6wyz][-\\\\.\\\\/_A-Za-z][-\\\\/_0-9a-zA-Z][-\\\\.\\\\/_A-Za-z][-\\\\/_0-9a-zA-Z]{22,162}$/\",\n  \"/homad-global-configs.schneevonmorgen.com/global_config\",\n  \"[\\\\/][\\\\/a-zA-Z0-9]{3,}\\\\/[a-zA-Z0-9]{6,}\\\\/.*/\",\n  \"\\\\?aHR0c[\\\\/0-9a-zA-Z]{41,}=?=?$/\",\n  \"/pagead/js/adsbygoogle.js\",\n  \"/^\\\\w+://[\\\\w.\\\\-]+\\\\.www\\\\.\",\n  \"/^https?:\\\\/\\\\/(.+?\\\\.)?\",\n  \"/js/sdkloader/ima3.js\",\n  \"/wp-content/uploads/*\",\n  \"/wp-content/plugins/\",\n  \"/wp-content/themes/\",\n  \"/wp-content/uploads\",\n  \"/detroitchicago/\",\n  \"/appmeasurement\",\n  \"/(https?:\\\\/\\\\/)\",\n  \"/cdn-cgi/trace\",\n  \"/^https?:\\\\/\\\\/\",\n  \"[a-zA-Z0-9]{\",\n  \"/^https:\\\\/\\\\\",\n  \"[\\\\/]{1,}.*\",\n  \"impression\",\n  \"[0-9a-f]{\",\n  \"[0-9a-z]{\",\n  \"affiliate\",\n  \"analytics\",\n  \"/assets/\",\n  \"/images/\",\n  \"template\",\n  \"tisement\",\n  \"tracking\",\n  \"300x250\",\n  \"ampaign\",\n  \"collect\",\n  \"consent\",\n  \"content\",\n  \"counter\",\n  \"default\",\n  \"sponsor\",\n  \"visitor\",\n  \".aspx?\",\n  \"[a-z]{\",\n  \"728x90\",\n  \"banner\",\n  \"client\",\n  \"cookie\",\n  \"dn-cgi\",\n  \"google\",\n  \"metric\",\n  \"module\",\n  \"rivacy\",\n  \"script\",\n  \"source\",\n  \"widget\",\n  \".cgi?\",\n  \"/api/\",\n  \"/file\",\n  \"/img/\",\n  \"/stat\",\n  \"/uplo\",\n  \"0x600\",\n  \"block\",\n  \"click\",\n  \"clude\",\n  \"embed\",\n  \"event\",\n  \"frame\",\n  \"image\",\n  \"manag\",\n  \"media\",\n  \"pixel\",\n  \"right\",\n  \"track\",\n  \"type=\",\n  \"video\",\n  \".gif\",\n  \".jpg\",\n  \".php\",\n  \".png\",\n  \"/lib\",\n  \"/web\",\n  \"eoip\",\n  \"gi-b\",\n  \"hird\",\n  \"html\",\n  \"http\",\n  \"nfig\",\n  \"page\",\n  \"stat\",\n  \"tion\",\n  \"view\",\n  \".js\",\n  \"/ad\",\n  \"^*/\",\n  \"=*&\",\n  \"468\",\n  \"728\",\n  \"aff\",\n  \"box\",\n  \"dpr\",\n  \"ext\",\n  \"how\",\n  \"jax\",\n  \"key\",\n  \"lay\",\n  \"log\",\n  \"lug\",\n  \"sdk\",\n  \"tag\",\n  \"web\",\n  \"ync\",\n  \"-p\",\n  \".m\",\n  \"*/\",\n  \"*^\",\n  \"/?\",\n  \"/*\",\n  \"/d\",\n  \"/f\",\n  \"/g\",\n  \"/h\",\n  \"/j\",\n  \"/m\",\n  \"/n\",\n  \"/o\",\n  \"/p\",\n  \"/r\",\n  \"/w\",\n  \"\\\\.\",\n  \"00\",\n  \"a-\",\n  \"ab\",\n  \"ac\",\n  \"ad\",\n  \"ag\",\n  \"al\",\n  \"am\",\n  \"an\",\n  \"ap\",\n  \"ar\",\n  \"at\",\n  \"av\",\n  \"be\",\n  \"ch\",\n  \"co\",\n  \"de\",\n  \"e_\",\n  \"e-\",\n  \"e/\",\n  \"ec\",\n  \"ed\",\n  \"el\",\n  \"em\",\n  \"en\",\n  \"er\",\n  \"et\",\n  \"ew\",\n  \"fo\",\n  \"g/\",\n  \"ic\",\n  \"id\",\n  \"ig\",\n  \"il\",\n  \"im\",\n  \"in\",\n  \"is\",\n  \"it\",\n  \"iv\",\n  \"le\",\n  \"li\",\n  \"lo\",\n  \"m/\",\n  \"mo\",\n  \"mp\",\n  \"ol\",\n  \"om\",\n  \"on\",\n  \"op\",\n  \"or\",\n  \"ot\",\n  \"p-\",\n  \"qu\",\n  \"re\",\n  \"ro\",\n  \"s_\",\n  \"s-\",\n  \"s?\",\n  \"s/\",\n  \"si\",\n  \"sp\",\n  \"ss\",\n  \"st\",\n  \"t_\",\n  \"t/\",\n  \"tm\",\n  \"tn\",\n  \"tr\",\n  \"ub\",\n  \"um\",\n  \"un\",\n  \"up\",\n  \"ur\",\n  \"us\",\n  \"ut\",\n  \"_\",\n  \"-\",\n  \",\",\n  \":\",\n  \"?\",\n  \".\",\n  \"}\",\n  \"*\",\n  \"/\",\n  \"\\\\\",\n  \"&\",\n  \"^\",\n  \"=\",\n  \"|\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\"\n];","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* tslint:disable quotemark */\nexport default [\n  \"securepubads.g.doubleclick.net\",\n  \".carte-gr.total.fr\",\n  \"googlesyndication\",\n  \"imasdk.googleapis\",\n  \"googletagmanager\",\n  \".cloudfront.net\",\n  \".actonservice\",\n  \"marketing.\",\n  \"analytics\",\n  \"smetrics.\",\n  \"tracking.\",\n  \"metrics.\",\n  \".zooplu\",\n  \".co.uk\",\n  \"google\",\n  \"stats.\",\n  \".club\",\n  \"click\",\n  \"media\",\n  \"track\",\n  \"video\",\n  \".com\",\n  \".net\",\n  \".xyz\",\n  \"ight\",\n  \"www.\",\n  \".de\",\n  \".io\",\n  \".jp\",\n  \".ru\",\n  \"aff\",\n  \"cdn\",\n  \"new\",\n  \"pro\",\n  \"web\",\n  \".b\",\n  \".c\",\n  \".d\",\n  \".f\",\n  \".h\",\n  \".k\",\n  \".l\",\n  \".m\",\n  \".n\",\n  \".p\",\n  \".s\",\n  \".t\",\n  \".v\",\n  \".w\",\n  \"24\",\n  \"ab\",\n  \"ac\",\n  \"ad\",\n  \"af\",\n  \"ag\",\n  \"ah\",\n  \"ai\",\n  \"ak\",\n  \"al\",\n  \"am\",\n  \"an\",\n  \"ap\",\n  \"ar\",\n  \"as\",\n  \"at\",\n  \"au\",\n  \"av\",\n  \"aw\",\n  \"ay\",\n  \"az\",\n  \"be\",\n  \"bl\",\n  \"bo\",\n  \"br\",\n  \"bu\",\n  \"ca\",\n  \"ce\",\n  \"ch\",\n  \"ci\",\n  \"ck\",\n  \"cl\",\n  \"cr\",\n  \"ct\",\n  \"cu\",\n  \"de\",\n  \"di\",\n  \"dn\",\n  \"do\",\n  \"dr\",\n  \"ds\",\n  \"du\",\n  \"e-\",\n  \"eb\",\n  \"ec\",\n  \"ed\",\n  \"ef\",\n  \"eg\",\n  \"ek\",\n  \"el\",\n  \"em\",\n  \"en\",\n  \"ep\",\n  \"er\",\n  \"es\",\n  \"et\",\n  \"eu\",\n  \"ev\",\n  \"ew\",\n  \"ex\",\n  \"ey\",\n  \"fa\",\n  \"fe\",\n  \"ff\",\n  \"fi\",\n  \"fl\",\n  \"fo\",\n  \"fr\",\n  \"ge\",\n  \"gh\",\n  \"gl\",\n  \"go\",\n  \"gr\",\n  \"gu\",\n  \"he\",\n  \"ho\",\n  \"ia\",\n  \"ib\",\n  \"ic\",\n  \"id\",\n  \"ie\",\n  \"if\",\n  \"ig\",\n  \"ik\",\n  \"il\",\n  \"im\",\n  \"in\",\n  \"io\",\n  \"ip\",\n  \"ir\",\n  \"is\",\n  \"it\",\n  \"iv\",\n  \"ix\",\n  \"iz\",\n  \"ks\",\n  \"ld\",\n  \"le\",\n  \"li\",\n  \"lo\",\n  \"ly\",\n  \"ma\",\n  \"me\",\n  \"mo\",\n  \"mp\",\n  \"my\",\n  \"ne\",\n  \"no\",\n  \"ob\",\n  \"od\",\n  \"ok\",\n  \"ol\",\n  \"om\",\n  \"on\",\n  \"oo\",\n  \"op\",\n  \"or\",\n  \"ot\",\n  \"ov\",\n  \"ow\",\n  \"ph\",\n  \"pl\",\n  \"po\",\n  \"pr\",\n  \"qu\",\n  \"re\",\n  \"ro\",\n  \"ru\",\n  \"s-\",\n  \"sc\",\n  \"se\",\n  \"sh\",\n  \"si\",\n  \"sk\",\n  \"sl\",\n  \"sm\",\n  \"sn\",\n  \"so\",\n  \"sp\",\n  \"ss\",\n  \"st\",\n  \"su\",\n  \"sy\",\n  \"t-\",\n  \"ta\",\n  \"th\",\n  \"ti\",\n  \"tn\",\n  \"to\",\n  \"tr\",\n  \"ts\",\n  \"tu\",\n  \"tv\",\n  \"tw\",\n  \"ty\",\n  \"ub\",\n  \"ud\",\n  \"ul\",\n  \"um\",\n  \"un\",\n  \"up\",\n  \"ur\",\n  \"us\",\n  \"ut\",\n  \"ve\",\n  \"vi\",\n  \"we\",\n  \"-\",\n  \".\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\"\n];","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* tslint:disable quotemark */\nexport default [\n  \"google-analytics.com/analytics.js\",\n  \"googlesyndication_adsbygoogle.js\",\n  \"googletagmanager.com/gtm.js\",\n  \"googletagservices_gpt.js\",\n  \"googletagmanager_gtm.js\",\n  \"fuckadblock.js-3.2.0\",\n  \"google-analytics\",\n  \"fingerprint2.js\",\n  \"-transparent.\",\n  \"noop-0.1s.mp3\",\n  \"prebid-ads.js\",\n  \"nobab2.js:10\",\n  \"noopmp3-0.1s\",\n  \"noop-1s.mp4\",\n  \"hd-main.js\",\n  \"noopmp4-1s\",\n  \"32x32.png\",\n  \"noopframe\",\n  \"noop.txt\",\n  \"nooptext\",\n  \"1x1.gif\",\n  \"2x2.png\",\n  \"noop.js\",\n  \"amazon\",\n  \"noopjs\",\n  \"tag.js\",\n  \".com/\",\n  \"empty\",\n  \"noop\",\n  \":10\",\n  \".js\",\n  \"ads\",\n  \"_a\",\n  \"/a\",\n  \"ar\",\n  \"et\",\n  \"ga\",\n  \"in\",\n  \"ng\",\n  \"_\",\n  \"-\",\n  \":\",\n  \".\",\n  \"*\",\n  \"/\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\"\n];","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* tslint:disable quotemark */\nexport default [\n  \"||imasdk.googleapis.com/js/sdk\",\n  \",redirect-rule=noopjs,domain=\",\n  \"$media,redirect=noopmp3-0.1s,\",\n  \"googlesyndication.com/pagead/\",\n  \"*$script,3p,denyallow=\",\n  \"/wp-content/uploads/*\",\n  \"/wp-content/plugins/\",\n  \".com^$third-party\",\n  \".cloudfront.net^\",\n  \",redirect-rule=\",\n  \"$script,domain=\",\n  \",redirect=noop\",\n  \"|downdetector.\",\n  \"xmlhttprequest\",\n  \".actonservice\",\n  \"/^https?:\\\\/\\\\/\",\n  \"^$third-party\",\n  \"a-zA-Z0-9]{\",\n  \"doubleclick\",\n  \"subdocument\",\n  \"third-party\",\n  \"cloudflare\",\n  \"marketing.\",\n  \"affiliate\",\n  \"analytics\",\n  \"metrics.\",\n  \"tracking\",\n  \"$script\",\n  \"captcha\",\n  \"domain=\",\n  \".club^\",\n  \".co.uk\",\n  \"$ghide\",\n  \"cookie\",\n  \"Cookie\",\n  \"google\",\n  \"script\",\n  \".com^\",\n  \".xyz^\",\n  \"count\",\n  \"frame\",\n  \"image\",\n  \"media\",\n  \"track\",\n  \"video\",\n  \".com\",\n  \".fr^\",\n  \".gif\",\n  \".net\",\n  \".php\",\n  \"$doc\",\n  \"$xhr\",\n  \"html\",\n  \"ight\",\n  \"stat\",\n  \"www.\",\n  \",1p\",\n  \".de\",\n  \".io\",\n  \".jp\",\n  \".js\",\n  \".ru\",\n  \"$3p\",\n  \"cdn\",\n  \"new\",\n  \"pro\",\n  \"web\",\n  \".b\",\n  \".c\",\n  \".m\",\n  \".n\",\n  \".p\",\n  \".s\",\n  \".t\",\n  \"@@\",\n  \"*/\",\n  \"/*\",\n  \"/b\",\n  \"/j\",\n  \"/p\",\n  \"||\",\n  \"|~\",\n  \"00\",\n  \"ab\",\n  \"ac\",\n  \"ad\",\n  \"af\",\n  \"ag\",\n  \"ak\",\n  \"al\",\n  \"am\",\n  \"an\",\n  \"ap\",\n  \"ar\",\n  \"as\",\n  \"at\",\n  \"au\",\n  \"av\",\n  \"aw\",\n  \"ay\",\n  \"az\",\n  \"be\",\n  \"bo\",\n  \"br\",\n  \"ce\",\n  \"ch\",\n  \"ck\",\n  \"cl\",\n  \"cr\",\n  \"ct\",\n  \"cu\",\n  \"de\",\n  \"di\",\n  \"do\",\n  \"dr\",\n  \"e-\",\n  \"e^\",\n  \"eb\",\n  \"ec\",\n  \"ed\",\n  \"el\",\n  \"em\",\n  \"en\",\n  \"ep\",\n  \"er\",\n  \"es\",\n  \"et\",\n  \"ev\",\n  \"ex\",\n  \"fa\",\n  \"fi\",\n  \"fl\",\n  \"fo\",\n  \"fr\",\n  \"ge\",\n  \"go\",\n  \"gr\",\n  \"he\",\n  \"ho\",\n  \"ib\",\n  \"ic\",\n  \"id\",\n  \"ie\",\n  \"if\",\n  \"ig\",\n  \"ik\",\n  \"il\",\n  \"im\",\n  \"in\",\n  \"ip\",\n  \"ir\",\n  \"is\",\n  \"it\",\n  \"iv\",\n  \"ix\",\n  \"iz\",\n  \"le\",\n  \"lo\",\n  \"ly\",\n  \"ma\",\n  \"mo\",\n  \"mp\",\n  \"no\",\n  \"od\",\n  \"ok\",\n  \"ol\",\n  \"om\",\n  \"on\",\n  \"op\",\n  \"or\",\n  \"ot\",\n  \"ow\",\n  \"pl\",\n  \"po\",\n  \"pr\",\n  \"qu\",\n  \"re\",\n  \"ro\",\n  \"s-\",\n  \"s/\",\n  \"sc\",\n  \"se\",\n  \"sh\",\n  \"so\",\n  \"sp\",\n  \"ss\",\n  \"st\",\n  \"te\",\n  \"th\",\n  \"to\",\n  \"tr\",\n  \"ts\",\n  \"ub\",\n  \"ud\",\n  \"ug\",\n  \"ul\",\n  \"um\",\n  \"un\",\n  \"up\",\n  \"ur\",\n  \"us\",\n  \"ut\",\n  \"yn\",\n  \"yo\",\n  \"_\",\n  \"-\",\n  \",\",\n  \"?\",\n  \".\",\n  \"*\",\n  \"/\",\n  \"\\\\\",\n  \"^\",\n  \"=\",\n  \"|\",\n  \"~\",\n  \"$\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"a\",\n  \"A\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\"\n];","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* tslint:disable quotemark */\nexport default [\n  \", String.prototype.charCodeAt,\",\n  \":not([style^=\\\"position: absolu\",\n  \"^script:has-text(break;case $.\",\n  \"acis, disableSelection, reEnab\",\n  \"acis, document.createElement, \",\n  \"acis, document.getElementById,\",\n  \"acis, document.querySelectorAl\",\n  \"acis, JSON.parse, break;case $\",\n  \"acis, parseInt, break;case $.)\",\n  \"addEventListener, google_ad_cl\",\n  \"app_vars.force_disable_adblock\",\n  \"decodeURI, decodeURIComponent)\",\n  \"jbiltxjqhye3mhbshg7kx5tfyd.oni\",\n  \"acis, String.fromCharCode, \",\n  \"nosiif, visibility, 1000)\",\n  \"set, blurred, false)\",\n  \"te; left: -5000px\\\"])\",\n  \"ra, oncontextmenu\",\n  \", break;case $.)\",\n  \"[href^=\\\"https://\",\n  \"[href^=\\\"http://\",\n  \"+js(aopw, _pop)\",\n  \"BlockDetected)\",\n  \"+js(nostif, \",\n  \"l, popMagic)\",\n  \"notification\",\n  \", noopFunc)\",\n  \":has-text(\",\n  \".com##+js(\",\n  \"+js(aeld, \",\n  \"+js(aopr, \",\n  \"+js(aopw, \",\n  \"=\\\"https://\",\n  \"background\",\n  \".*,xhamst\",\n  \".blogspot\",\n  \"container\",\n  \"div[id^=\\\"\",\n  \"div[style\",\n  \"placehold\",\n  \"disclaim\",\n  \"300x250\",\n  \"consent\",\n  \"content\",\n  \"message\",\n  \"nowoif)\",\n  \"privacy\",\n  \"sidebar\",\n  \"sponsor\",\n  \"wrapper\",\n  \".co.uk\",\n  \"[class\",\n  \"728x90\",\n  \"accept\",\n  \"acis, \",\n  \"aopr, \",\n  \"banner\",\n  \"bottom\",\n  \"cookie\",\n  \"Cookie\",\n  \"google\",\n  \"notice\",\n  \"policy\",\n  \"widget\",\n  \"block\",\n  \"docum\",\n  \"movie\",\n  \"width\",\n  \".com\",\n  \".net\",\n  \".xyz\",\n  \"#@#.\",\n  \"+js(\",\n  \"body\",\n  \"down\",\n  \"gdpr\",\n  \"html\",\n  \"ight\",\n  \"news\",\n  \"text\",\n  \"tube\",\n  \"www.\",\n  \" > \",\n  \"age\",\n  \"box\",\n  \"Box\",\n  \"ent\",\n  \"ive\",\n  \"lay\",\n  \"mod\",\n  \"web\",\n  \"xxx\",\n  \"__\",\n  \"-t\",\n  \", \",\n  \",m\",\n  \",p\",\n  \",t\",\n  \".*\",\n  \".f\",\n  \".m\",\n  \".p\",\n  \".t\",\n  \"\\\"]\",\n  \"##\",\n  \"=\\\"\",\n  \"00\",\n  \"a-\",\n  \"ab\",\n  \"ac\",\n  \"ad\",\n  \"Ad\",\n  \"al\",\n  \"am\",\n  \"an\",\n  \"ap\",\n  \"ar\",\n  \"as\",\n  \"at\",\n  \"av\",\n  \"bo\",\n  \"ch\",\n  \"ck\",\n  \"cl\",\n  \"co\",\n  \"ct\",\n  \"d-\",\n  \"de\",\n  \"di\",\n  \"e-\",\n  \"ed\",\n  \"el\",\n  \"em\",\n  \"en\",\n  \"er\",\n  \"es\",\n  \"et\",\n  \"ew\",\n  \"ex\",\n  \"fo\",\n  \"ft\",\n  \"g-\",\n  \"ga\",\n  \"he\",\n  \"ho\",\n  \"ic\",\n  \"id\",\n  \"if\",\n  \"ig\",\n  \"il\",\n  \"im\",\n  \"in\",\n  \"ir\",\n  \"is\",\n  \"it\",\n  \"le\",\n  \"lo\",\n  \"ma\",\n  \"me\",\n  \"no\",\n  \"o-\",\n  \"ol\",\n  \"om\",\n  \"on\",\n  \"op\",\n  \"or\",\n  \"ot\",\n  \"ov\",\n  \"ra\",\n  \"re\",\n  \"ro\",\n  \"s_\",\n  \"s-\",\n  \"sc\",\n  \"sh\",\n  \"si\",\n  \"sp\",\n  \"st\",\n  \"t-\",\n  \"ta\",\n  \"te\",\n  \"ti\",\n  \"ub\",\n  \"ul\",\n  \"um\",\n  \"un\",\n  \"up\",\n  \"ur\",\n  \"us\",\n  \"ut\",\n  \"vi\",\n  \" \",\n  \"_\",\n  \"-\",\n  \",\",\n  \";\",\n  \":\",\n  \".\",\n  \")\",\n  \"[\",\n  \"*\",\n  \"/\",\n  \"#\",\n  \"^\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"a\",\n  \"A\",\n  \"b\",\n  \"B\",\n  \"c\",\n  \"C\",\n  \"d\",\n  \"D\",\n  \"e\",\n  \"E\",\n  \"f\",\n  \"F\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"I\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"L\",\n  \"m\",\n  \"M\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"P\",\n  \"q\",\n  \"r\",\n  \"R\",\n  \"s\",\n  \"S\",\n  \"t\",\n  \"T\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"W\",\n  \"x\",\n  \"y\",\n  \"z\"\n];","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { Smaz } from '@remusao/smaz';\n\nimport cosmeticSelectorCodebook from './codebooks/cosmetic-selector';\nimport networkCSPCodebook from './codebooks/network-csp';\nimport networkFilterCodebook from './codebooks/network-filter';\nimport networkHostnameCodebook from './codebooks/network-hostname';\nimport networkRedirectCodebook from './codebooks/network-redirect';\nimport networkRawCodebook from './codebooks/raw-network';\nimport cosmeticRawCodebook from './codebooks/raw-cosmetic';\n\nexport default class Compression {\n  public readonly cosmeticSelector: Smaz = new Smaz(cosmeticSelectorCodebook);\n  public readonly networkCSP: Smaz = new Smaz(networkCSPCodebook);\n  public readonly networkRedirect: Smaz = new Smaz(networkRedirectCodebook);\n  public readonly networkHostname: Smaz = new Smaz(networkHostnameCodebook);\n  public readonly networkFilter: Smaz = new Smaz(networkFilterCodebook);\n  public readonly networkRaw: Smaz = new Smaz(networkRawCodebook);\n  public readonly cosmeticRaw: Smaz = new Smaz(cosmeticRawCodebook);\n}\n","/* crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* From: https://github.com/SheetJS/js-crc32/ */\n\nconst T: Int32Array = (() => {\n  let c: number = 0;\n  const table: Int32Array = new Int32Array(256);\n\n  for (let n: number = 0; n !== 256; n += 1) {\n    c = n;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    table[n] = c;\n  }\n\n  return table;\n})();\n\nexport default function crc32(buf: Uint8Array, start: number, end: number): number {\n  let C: number = 0 ^ -1;\n  const L: number = end - 7;\n  let i: number = start;\n  while (i < L) {\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n  }\n\n  while (i < L + 7) {\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n  }\n\n  return (C ^ -1) >>> 0;\n}\n","/*!\n * Copyright Mathias Bynens <https://mathiasbynens.be/>\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\ntype errorNames = 'overflow' | 'invalid-input' | 'not-basic';\nconst errors: {\n  [name: string]: string;\n} = {\n  'invalid-input': 'Invalid input',\n  'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n  'overflow': 'Overflow: input needs wider integers to process',\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type: errorNames): void {\n  throw new RangeError(errors[type]);\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(str: string): number[] {\n  const output = [];\n  let counter = 0;\n  const length = str.length;\n  while (counter < length) {\n    const value = str.charCodeAt(counter++);\n    if (value >= 0xd800 && value <= 0xdbff && counter < length) {\n      // It's a high surrogate, and there is a next character.\n      const extra = str.charCodeAt(counter++);\n      if ((extra & 0xfc00) === 0xdc00) {\n        // Low surrogate.\n        output.push(((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000);\n      } else {\n        // It's an unmatched surrogate; only append this code unit, in case the\n        // next code unit is the high surrogate of a surrogate pair.\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n  return output;\n}\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nfunction basicToDigit(codePoint: number): number {\n  if (codePoint - 0x30 < 0x0a) {\n    return codePoint - 0x16;\n  }\n  if (codePoint - 0x41 < 0x1a) {\n    return codePoint - 0x41;\n  }\n  if (codePoint - 0x61 < 0x1a) {\n    return codePoint - 0x61;\n  }\n  return base;\n}\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nfunction digitToBasic(digit: number, flag: number): number {\n  //  0..25 map to ASCII a..z or A..Z\n  // 26..35 map to ASCII 0..9\n  return digit + 22 + 75 * (digit < 26 ? 1 : 0) - ((flag !== 0 ? 1 : 0) << 5);\n}\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nfunction adapt(delta: number, numPoints: number, firstTime: boolean): number {\n  let k = 0;\n  delta = firstTime ? Math.floor(delta / damp) : delta >> 1;\n  delta += Math.floor(delta / numPoints);\n  for (; /* no initialization */ delta > (baseMinusTMin * tMax) >> 1; k += base) {\n    delta = Math.floor(delta / baseMinusTMin);\n  }\n  return Math.floor(k + ((baseMinusTMin + 1) * delta) / (delta + skew));\n}\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nexport function decode(input: string): string {\n  // Don't use UCS-2.\n  const output = [];\n  const inputLength = input.length;\n  let i = 0;\n  let n = initialN;\n  let bias = initialBias;\n\n  // Handle the basic code points: let `basic` be the number of input code\n  // points before the last delimiter, or `0` if there is none, then copy\n  // the first basic code points to the output.\n\n  let basic = input.lastIndexOf(delimiter);\n  if (basic < 0) {\n    basic = 0;\n  }\n\n  for (let j = 0; j < basic; ++j) {\n    // if it's not a basic code point\n    if (input.charCodeAt(j) >= 0x80) {\n      error('not-basic');\n    }\n    output.push(input.charCodeAt(j));\n  }\n\n  // Main decoding loop: start just after the last delimiter if any basic code\n  // points were copied; start at the beginning otherwise.\n\n  for (let index = basic > 0 ? basic + 1 : 0; index < inputLength /* no final expression */; ) {\n    // `index` is the index of the next character to be consumed.\n    // Decode a generalized variable-length integer into `delta`,\n    // which gets added to `i`. The overflow checking is easier\n    // if we increase `i` as we go, then subtract off its starting\n    // value at the end to obtain `delta`.\n    const oldi = i;\n    for (let w = 1, k = base /* no condition */; ; k += base) {\n      if (index >= inputLength) {\n        error('invalid-input');\n      }\n\n      const digit = basicToDigit(input.charCodeAt(index++));\n\n      if (digit >= base || digit > Math.floor((maxInt - i) / w)) {\n        error('overflow');\n      }\n\n      i += digit * w;\n      const t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n      if (digit < t) {\n        break;\n      }\n\n      const baseMinusT = base - t;\n      if (w > Math.floor(maxInt / baseMinusT)) {\n        error('overflow');\n      }\n\n      w *= baseMinusT;\n    }\n\n    const out = output.length + 1;\n    bias = adapt(i - oldi, out, oldi === 0);\n\n    // `i` was supposed to wrap around from `out` to `0`,\n    // incrementing `n` each time, so we'll fix that now:\n    if (Math.floor(i / out) > maxInt - n) {\n      error('overflow');\n    }\n\n    n += Math.floor(i / out);\n    i %= out;\n\n    // Insert `n` at position `i` of the output.\n    output.splice(i++, 0, n);\n  }\n\n  return String.fromCodePoint.apply(null, output);\n}\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nexport function encode(str: string): string {\n  const output = [];\n\n  // Convert the input in UCS-2 to an array of Unicode code points.\n  const input = ucs2decode(str);\n\n  // Cache the length.\n  const inputLength = input.length;\n\n  // Initialize the state.\n  let n = initialN;\n  let delta = 0;\n  let bias = initialBias;\n\n  // Handle the basic code points.\n  for (let i = 0; i < input.length; i += 1) {\n    const currentValue = input[i];\n    if (currentValue < 0x80) {\n      output.push(String.fromCharCode(currentValue));\n    }\n  }\n\n  const basicLength = output.length;\n  let handledCPCount = basicLength;\n\n  // `handledCPCount` is the number of code points that have been handled;\n  // `basicLength` is the number of basic code points.\n\n  // Finish the basic string with a delimiter unless it's empty.\n  if (basicLength) {\n    output.push(delimiter);\n  }\n\n  // Main encoding loop:\n  while (handledCPCount < inputLength) {\n    // All non-basic code points < n have been handled already. Find the next\n    // larger one:\n    let m = maxInt;\n    for (let i = 0; i < input.length; i += 1) {\n      const currentValue = input[i];\n      if (currentValue >= n && currentValue < m) {\n        m = currentValue;\n      }\n    }\n\n    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n    // but guard against overflow.\n    const handledCPCountPlusOne = handledCPCount + 1;\n    if (m - n > Math.floor((maxInt - delta) / handledCPCountPlusOne)) {\n      error('overflow');\n    }\n\n    delta += (m - n) * handledCPCountPlusOne;\n    n = m;\n\n    for (let i = 0; i < input.length; i += 1) {\n      const currentValue = input[i];\n      if (currentValue < n && ++delta > maxInt) {\n        error('overflow');\n      }\n      if (currentValue === n) {\n        // Represent delta as a generalized variable-length integer.\n        let q = delta;\n        for (let k = base /* no condition */; ; k += base) {\n          const t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n          if (q < t) {\n            break;\n          }\n          const qMinusT = q - t;\n          const baseMinusT = base - t;\n          output.push(String.fromCharCode(digitToBasic(t + (qMinusT % baseMinusT), 0)));\n          q = Math.floor(qMinusT / baseMinusT);\n        }\n\n        output.push(String.fromCharCode(digitToBasic(q, 0)));\n        bias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n        delta = 0;\n        ++handledCPCount;\n      }\n    }\n\n    ++delta;\n    ++n;\n  }\n  return output.join('');\n}\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nexport function toUnicode(input: string): string {\n  const labels = input.replace(regexSeparators, '\\x2E').split('.');\n  const encoded: string[] = [];\n  for (let i = 0; i < labels.length; i += 1) {\n    encoded.push(\n      labels[i].startsWith('xn--') ? decode(labels[i].slice(4).toLowerCase()) : labels[i],\n    );\n  }\n  return encoded.join('.');\n}\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nexport function toASCII(input: string): string {\n  // Avoid `split(regex)` for IE8 compatibility. See #17.\n  const labels = input.replace(regexSeparators, '\\x2E').split('.');\n  const encoded: string[] = [];\n  for (let i = 0; i < labels.length; i += 1) {\n    encoded.push(regexNonASCII.test(labels[i]) ? 'xn--' + encode(labels[i]) : labels[i]);\n  }\n  return encoded.join('.');\n}\n\n/**\n * A string representing the current Punycode.js version number.\n * @memberOf punycode\n * @type String\n */\nexport const version = '2.1.0';\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport Compression from './compression';\nimport crc32 from './crc32';\nimport { decode, encode } from './punycode';\n\ninterface IDataViewOptions {\n  enableCompression: boolean;\n}\n\nexport const EMPTY_UINT8_ARRAY = new Uint8Array(0);\nexport const EMPTY_UINT32_ARRAY = new Uint32Array(0);\n\n// Check if current architecture is little endian\nconst LITTLE_ENDIAN: boolean = new Int8Array(new Int16Array([1]).buffer)[0] === 1;\n\n// Store compression in a lazy, global singleton\nlet getCompressionSingleton: () => Compression = () => {\n  const COMPRESSION = new Compression();\n  getCompressionSingleton = () => COMPRESSION;\n  return COMPRESSION;\n};\n\nfunction align4(pos: number): number {\n  // From: https://stackoverflow.com/a/2022194\n  return (pos + 3) & ~0x03;\n}\n\n/**\n * Return size of of a serialized byte value.\n */\nexport function sizeOfByte(): number {\n  return 1;\n}\n\n/**\n * Return size of of a serialized boolean value.\n */\nexport function sizeOfBool(): number {\n  return 1;\n}\n\n/**\n * Return number of bytes needed to serialize `length`.\n */\nexport function sizeOfLength(length: number): number {\n  return length <= 127 ? 1 : 5;\n}\n\n/**\n * Return number of bytes needed to serialize `array` Uint8Array typed array.\n *\n * WARNING: this only returns the correct size if `align` is `false`.\n */\nexport function sizeOfBytes(array: Uint8Array, align: boolean): number {\n  return sizeOfBytesWithLength(array.length, align);\n}\n\n/**\n * Return number of bytes needed to serialize `array` Uint8Array typed array.\n *\n * WARNING: this only returns the correct size if `align` is `false`.\n */\nexport function sizeOfBytesWithLength(length: number, align: boolean): number {\n  // Alignment is a tricky thing because it depends on the current offset in\n  // the buffer at the time of serialization; which we cannot anticipate\n  // before actually starting serialization. This means that we need to\n  // potentially over-estimate the size (at most by 3 bytes) to make sure the\n  // final size is at least equal or a bit bigger than necessary.\n  return (align ? 3 : 0) + length + sizeOfLength(length);\n}\n\n/**\n * Return number of bytes needed to serialize `str` ASCII string.\n */\nexport function sizeOfASCII(str: string): number {\n  return str.length + sizeOfLength(str.length);\n}\n\n/**\n * Return number of bytes needed to serialize `str` UTF8 string.\n */\nexport function sizeOfUTF8(str: string): number {\n  const encodedLength = encode(str).length;\n  return encodedLength + sizeOfLength(encodedLength);\n}\n\n/**\n * Return number of bytes needed to serialize `array`.\n */\nexport function sizeOfUint32Array(array: Uint32Array): number {\n  return array.byteLength + sizeOfLength(array.length);\n}\n\nexport function sizeOfNetworkRedirect(str: string, compression: boolean): number {\n  return compression === true\n    ? sizeOfBytesWithLength(\n        getCompressionSingleton().networkRedirect.getCompressedSize(str),\n        false, // align\n      )\n    : sizeOfASCII(str);\n}\n\nexport function sizeOfNetworkHostname(str: string, compression: boolean): number {\n  return compression === true\n    ? sizeOfBytesWithLength(\n        getCompressionSingleton().networkHostname.getCompressedSize(str),\n        false, // align\n      )\n    : sizeOfASCII(str);\n}\n\nexport function sizeOfNetworkCSP(str: string, compression: boolean): number {\n  return compression === true\n    ? sizeOfBytesWithLength(\n        getCompressionSingleton().networkCSP.getCompressedSize(str),\n        false, // align\n      )\n    : sizeOfASCII(str);\n}\n\nexport function sizeOfNetworkFilter(str: string, compression: boolean): number {\n  return compression === true\n    ? sizeOfBytesWithLength(\n        getCompressionSingleton().networkFilter.getCompressedSize(str),\n        false, // align\n      )\n    : sizeOfASCII(str);\n}\n\nexport function sizeOfCosmeticSelector(str: string, compression: boolean): number {\n  return compression === true\n    ? sizeOfBytesWithLength(\n        getCompressionSingleton().cosmeticSelector.getCompressedSize(str),\n        false, // align\n      )\n    : sizeOfASCII(str);\n}\n\nexport function sizeOfRawNetwork(str: string, compression: boolean): number {\n  return compression === true\n    ? sizeOfBytesWithLength(\n        getCompressionSingleton().networkRaw.getCompressedSize(encode(str)),\n        false, // align\n      )\n    : sizeOfUTF8(str);\n}\n\nexport function sizeOfRawCosmetic(str: string, compression: boolean): number {\n  return compression === true\n    ? sizeOfBytesWithLength(\n        getCompressionSingleton().cosmeticRaw.getCompressedSize(encode(str)),\n        false, // align\n      )\n    : sizeOfUTF8(str);\n}\n\n/**\n * This abstraction allows to serialize efficiently low-level values of types:\n * string, uint8, uint16, uint32, etc. while hiding the complexity of managing\n * the current offset and growing. It should always be instantiated with a\n * big-enough length because this will not allow for resizing. To allow\n * deciding the required total size, function estimating the size needed to\n * store different primitive values are exposes as static methods.\n *\n * This class is also more efficient than the built-in `DataView`.\n *\n * The way this is used in practice is that you write pairs of function to\n * serialize and deserialize a given structure/class (with code being pretty\n * symetrical). In the serializer you `pushX` values, and in the deserializer\n * you use `getX` functions to get back the values.\n */\nexport class StaticDataView {\n  /**\n   * Create an empty (i.e.: size = 0) StaticDataView.\n   */\n  public static empty(options: IDataViewOptions): StaticDataView {\n    return StaticDataView.fromUint8Array(EMPTY_UINT8_ARRAY, options);\n  }\n\n  /**\n   * Instantiate a StaticDataView instance from `array` of type Uint8Array.\n   */\n  public static fromUint8Array(array: Uint8Array, options: IDataViewOptions): StaticDataView {\n    return new StaticDataView(array, options);\n  }\n\n  /**\n   * Instantiate a StaticDataView with given `capacity` number of bytes.\n   */\n  public static allocate(capacity: number, options: IDataViewOptions): StaticDataView {\n    return new StaticDataView(new Uint8Array(capacity), options);\n  }\n\n  public pos: number;\n  public buffer: Uint8Array;\n  public compression: Compression | undefined;\n\n  constructor(buffer: Uint8Array, { enableCompression }: IDataViewOptions) {\n    if (LITTLE_ENDIAN === false) {\n      // This check makes sure that we will not load the adblocker on a\n      // big-endian system. This would not work since byte ordering is important\n      // at the moment (mainly for performance reasons).\n      throw new Error('Adblocker currently does not support Big-endian systems');\n    }\n\n    if (enableCompression === true) {\n      this.enableCompression();\n    }\n\n    this.buffer = buffer;\n    this.pos = 0;\n  }\n\n  public enableCompression(): void {\n    this.compression = getCompressionSingleton();\n  }\n\n  public checksum(): number {\n    return crc32(this.buffer, 0, this.pos);\n  }\n\n  public dataAvailable(): boolean {\n    return this.pos < this.buffer.byteLength;\n  }\n\n  public setPos(pos: number): void {\n    this.pos = pos;\n  }\n\n  public getPos(): number {\n    return this.pos;\n  }\n\n  public seekZero(): void {\n    this.pos = 0;\n  }\n\n  public slice(): Uint8Array {\n    this.checkSize();\n    return this.buffer.slice(0, this.pos);\n  }\n\n  public subarray(): Uint8Array {\n    if (this.pos === this.buffer.byteLength) {\n      return this.buffer;\n    }\n\n    this.checkSize();\n    return this.buffer.subarray(0, this.pos);\n  }\n\n  /**\n   * Make sure that `this.pos` is aligned on a multiple of 4.\n   */\n  public align4(): void {\n    this.pos = align4(this.pos);\n  }\n\n  public set(buffer: Uint8Array): void {\n    this.buffer = new Uint8Array(buffer);\n    this.seekZero();\n  }\n\n  public pushBool(bool: boolean): void {\n    this.pushByte(Number(bool));\n  }\n\n  public getBool(): boolean {\n    return Boolean(this.getByte());\n  }\n\n  public setByte(pos: number, byte: number): void {\n    this.buffer[pos] = byte;\n  }\n\n  public pushByte(octet: number): void {\n    this.pushUint8(octet);\n  }\n\n  public getByte(): number {\n    return this.getUint8();\n  }\n\n  public pushBytes(bytes: Uint8Array, align: boolean = false): void {\n    this.pushLength(bytes.length);\n\n    if (align === true) {\n      this.align4();\n    }\n\n    this.buffer.set(bytes, this.pos);\n    this.pos += bytes.byteLength;\n  }\n\n  public getBytes(align: boolean = false): Uint8Array {\n    const numberOfBytes = this.getLength();\n\n    if (align === true) {\n      this.align4();\n    }\n\n    const bytes = this.buffer.subarray(this.pos, this.pos + numberOfBytes);\n    this.pos += numberOfBytes;\n\n    return bytes;\n  }\n\n  /**\n   * Allows row access to the internal buffer through a Uint32Array acting like\n   * a view. This is used for super fast writing/reading of large chunks of\n   * Uint32 numbers in the byte array.\n   */\n  public getUint32ArrayView(desiredSize: number): Uint32Array {\n    // Round this.pos to next multiple of 4 for alignement\n    this.align4();\n\n    // Short-cut when empty array\n    if (desiredSize === 0) {\n      return EMPTY_UINT32_ARRAY;\n    }\n\n    // Create non-empty view\n    const view = new Uint32Array(\n      this.buffer.buffer,\n      this.pos + this.buffer.byteOffset,\n      desiredSize,\n    );\n    this.pos += desiredSize * 4;\n    return view;\n  }\n\n  public pushUint8(uint8: number): void {\n    this.buffer[this.pos++] = uint8;\n  }\n\n  public getUint8(): number {\n    return this.buffer[this.pos++];\n  }\n\n  public pushUint16(uint16: number): void {\n    this.buffer[this.pos++] = uint16 >>> 8;\n    this.buffer[this.pos++] = uint16;\n  }\n\n  public getUint16(): number {\n    return ((this.buffer[this.pos++] << 8) | this.buffer[this.pos++]) >>> 0;\n  }\n\n  public pushUint32(uint32: number): void {\n    this.buffer[this.pos++] = uint32 >>> 24;\n    this.buffer[this.pos++] = uint32 >>> 16;\n    this.buffer[this.pos++] = uint32 >>> 8;\n    this.buffer[this.pos++] = uint32;\n  }\n\n  public getUint32(): number {\n    return (\n      (((this.buffer[this.pos++] << 24) >>> 0) +\n        ((this.buffer[this.pos++] << 16) |\n          (this.buffer[this.pos++] << 8) |\n          this.buffer[this.pos++])) >>>\n      0\n    );\n  }\n\n  public pushUint32Array(arr: Uint32Array): void {\n    this.pushLength(arr.length);\n    // TODO - use `set` to push the full buffer at once?\n    for (const n of arr) {\n      this.pushUint32(n);\n    }\n  }\n\n  public getUint32Array(): Uint32Array {\n    const length = this.getLength();\n    const arr = new Uint32Array(length);\n    // TODO - use `subarray`?\n    for (let i = 0; i < length; i += 1) {\n      arr[i] = this.getUint32();\n    }\n    return arr;\n  }\n\n  public pushUTF8(raw: string): void {\n    const str = encode(raw);\n    this.pushLength(str.length);\n\n    for (let i = 0; i < str.length; i += 1) {\n      this.buffer[this.pos++] = str.charCodeAt(i);\n    }\n  }\n\n  public getUTF8(): string {\n    const byteLength = this.getLength();\n    this.pos += byteLength;\n    return decode(\n      String.fromCharCode.apply(\n        null,\n        // @ts-ignore\n        this.buffer.subarray(this.pos - byteLength, this.pos),\n      ),\n    );\n  }\n\n  public pushASCII(str: string): void {\n    this.pushLength(str.length);\n\n    for (let i = 0; i < str.length; i += 1) {\n      this.buffer[this.pos++] = str.charCodeAt(i);\n    }\n  }\n\n  public getASCII(): string {\n    const byteLength = this.getLength();\n    this.pos += byteLength;\n\n    // @ts-ignore\n    return String.fromCharCode.apply(null, this.buffer.subarray(this.pos - byteLength, this.pos));\n  }\n\n  public pushNetworkRedirect(str: string): void {\n    if (this.compression !== undefined) {\n      this.pushBytes(this.compression.networkRedirect.compress(str));\n    } else {\n      this.pushASCII(str);\n    }\n  }\n\n  public getNetworkRedirect(): string {\n    if (this.compression !== undefined) {\n      return this.compression.networkRedirect.decompress(this.getBytes());\n    }\n    return this.getASCII();\n  }\n\n  public pushNetworkHostname(str: string): void {\n    if (this.compression !== undefined) {\n      this.pushBytes(this.compression.networkHostname.compress(str));\n    } else {\n      this.pushASCII(str);\n    }\n  }\n\n  public getNetworkHostname(): string {\n    if (this.compression !== undefined) {\n      return this.compression.networkHostname.decompress(this.getBytes());\n    }\n    return this.getASCII();\n  }\n\n  public pushNetworkCSP(str: string): void {\n    if (this.compression !== undefined) {\n      this.pushBytes(this.compression.networkCSP.compress(str));\n    } else {\n      this.pushASCII(str);\n    }\n  }\n\n  public getNetworkCSP(): string {\n    if (this.compression !== undefined) {\n      return this.compression.networkCSP.decompress(this.getBytes());\n    }\n    return this.getASCII();\n  }\n\n  public pushNetworkFilter(str: string): void {\n    if (this.compression !== undefined) {\n      this.pushBytes(this.compression.networkFilter.compress(str));\n    } else {\n      this.pushASCII(str);\n    }\n  }\n\n  public getNetworkFilter(): string {\n    if (this.compression !== undefined) {\n      return this.compression.networkFilter.decompress(this.getBytes());\n    }\n    return this.getASCII();\n  }\n\n  public pushCosmeticSelector(str: string): void {\n    if (this.compression !== undefined) {\n      this.pushBytes(this.compression.cosmeticSelector.compress(str));\n    } else {\n      this.pushASCII(str);\n    }\n  }\n\n  public getCosmeticSelector(): string {\n    if (this.compression !== undefined) {\n      return this.compression.cosmeticSelector.decompress(this.getBytes());\n    }\n    return this.getASCII();\n  }\n\n  public pushRawCosmetic(str: string): void {\n    if (this.compression !== undefined) {\n      this.pushBytes(this.compression.cosmeticRaw.compress(encode(str)));\n    } else {\n      this.pushUTF8(str);\n    }\n  }\n\n  public getRawCosmetic(): string {\n    if (this.compression !== undefined) {\n      return decode(this.compression.cosmeticRaw.decompress(this.getBytes()));\n    }\n    return this.getUTF8();\n  }\n\n  public pushRawNetwork(str: string): void {\n    if (this.compression !== undefined) {\n      this.pushBytes(this.compression.networkRaw.compress(encode(str)));\n    } else {\n      this.pushUTF8(str);\n    }\n  }\n\n  public getRawNetwork(): string {\n    if (this.compression !== undefined) {\n      return decode(this.compression.networkRaw.decompress(this.getBytes()));\n    }\n    return this.getUTF8();\n  }\n\n  private checkSize() {\n    if (this.pos !== 0 && this.pos > this.buffer.byteLength) {\n      throw new Error(\n        `StaticDataView too small: ${this.buffer.byteLength}, but required ${this.pos} bytes`,\n      );\n    }\n  }\n\n  // Serialiez `length` with variable encoding to save space\n  private pushLength(length: number): void {\n    if (length <= 127) {\n      this.pushUint8(length);\n    } else {\n      this.pushUint8(128);\n      this.pushUint32(length);\n    }\n  }\n\n  private getLength(): number {\n    const lengthShort = this.getUint8();\n    return lengthShort === 128 ? this.getUint32() : lengthShort;\n  }\n}\n","/**\n * The MIT License (MIT)\n *\n * Copyright (c) Feross Aboukhadijeh\n *\n * Originally from: https://github.com/feross/queue-microtask\n */\n\nlet promise: Promise<void> | undefined;\n\ntype Callback = () => void;\n\nexport const queueMicrotask: (cb: Callback) => void =\n  typeof window !== 'undefined' && typeof window.queueMicrotask === 'function'\n    ? (cb: Callback) => window.queueMicrotask(cb)\n    : // reuse resolved promise, and allocate it lazily\n      (cb: Callback) =>\n        (promise || (promise = Promise.resolve())).then(cb).catch((err) =>\n          setTimeout(() => {\n            throw err;\n          }, 0),\n        );\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { StaticDataView, sizeOfBool } from './data-view';\n\nexport default class Config {\n  public static deserialize(buffer: StaticDataView): Config {\n    return new Config({\n      debug: buffer.getBool(),\n      enableCompression: buffer.getBool(),\n      enableHtmlFiltering: buffer.getBool(),\n      enableInMemoryCache: buffer.getBool(),\n      enableMutationObserver: buffer.getBool(),\n      enableOptimizations: buffer.getBool(),\n      guessRequestTypeFromUrl: buffer.getBool(),\n      integrityCheck: buffer.getBool(),\n      loadCSPFilters: buffer.getBool(),\n      loadCosmeticFilters: buffer.getBool(),\n      loadExceptionFilters: buffer.getBool(),\n      loadExtendedSelectors: buffer.getBool(),\n      loadGenericCosmeticsFilters: buffer.getBool(),\n      loadNetworkFilters: buffer.getBool(),\n    });\n  }\n\n  public readonly debug: boolean;\n  public readonly enableCompression: boolean;\n  public readonly enableHtmlFiltering: boolean;\n  public readonly enableInMemoryCache: boolean;\n  public readonly enableMutationObserver: boolean;\n  public readonly enableOptimizations: boolean;\n  public readonly guessRequestTypeFromUrl: boolean;\n  public readonly integrityCheck: boolean;\n  public readonly loadCSPFilters: boolean;\n  public readonly loadCosmeticFilters: boolean;\n  public readonly loadExceptionFilters: boolean;\n  public readonly loadExtendedSelectors: boolean;\n  public readonly loadGenericCosmeticsFilters: boolean;\n  public readonly loadNetworkFilters: boolean;\n\n  constructor({\n    debug = false,\n    enableCompression = false,\n    enableHtmlFiltering = false,\n    enableInMemoryCache = true,\n    enableMutationObserver = true,\n    enableOptimizations = true,\n    guessRequestTypeFromUrl = false,\n    integrityCheck = true,\n    loadCSPFilters = true,\n    loadCosmeticFilters = true,\n    loadExceptionFilters = true,\n    loadExtendedSelectors = false,\n    loadGenericCosmeticsFilters = true,\n    loadNetworkFilters = true,\n  }: Partial<Config> = {}) {\n    this.debug = debug;\n    this.enableCompression = enableCompression;\n    this.enableHtmlFiltering = enableHtmlFiltering;\n    this.enableInMemoryCache = enableInMemoryCache;\n    this.enableMutationObserver = enableMutationObserver;\n    this.enableOptimizations = enableOptimizations;\n    this.guessRequestTypeFromUrl = guessRequestTypeFromUrl;\n    this.integrityCheck = integrityCheck;\n    this.loadCSPFilters = loadCSPFilters;\n    this.loadCosmeticFilters = loadCosmeticFilters;\n    this.loadExceptionFilters = loadExceptionFilters;\n    this.loadExtendedSelectors = loadExtendedSelectors;\n    this.loadGenericCosmeticsFilters = loadGenericCosmeticsFilters;\n    this.loadNetworkFilters = loadNetworkFilters;\n  }\n\n  public getSerializedSize(): number {\n    // NOTE: this should always be the number of attributes and needs to be\n    // updated when `Config` changes.\n    return 14 * sizeOfBool();\n  }\n\n  public serialize(buffer: StaticDataView): void {\n    buffer.pushBool(this.debug);\n    buffer.pushBool(this.enableCompression);\n    buffer.pushBool(this.enableHtmlFiltering);\n    buffer.pushBool(this.enableInMemoryCache);\n    buffer.pushBool(this.enableMutationObserver);\n    buffer.pushBool(this.enableOptimizations);\n    buffer.pushBool(this.guessRequestTypeFromUrl);\n    buffer.pushBool(this.integrityCheck);\n    buffer.pushBool(this.loadCSPFilters);\n    buffer.pushBool(this.loadCosmeticFilters);\n    buffer.pushBool(this.loadExceptionFilters);\n    buffer.pushBool(this.loadExtendedSelectors);\n    buffer.pushBool(this.loadGenericCosmeticsFilters);\n    buffer.pushBool(this.loadNetworkFilters);\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { queueMicrotask } from './queue-microtask';\n\n/**\n * Type of an event listener (i.e.: callback). It accepts arbitrary arguments\n * and is not expected to return any result.\n */\ntype EventListener = (...args: any[]) => void;\n\n/**\n * Type of event listeners for all events. It maps event names (from a set of\n * type-level string literals) to list of event listeners.\n */\ntype EventListeners<EventNames> = Map<EventNames, EventListener[]>;\n\n/**\n * Add `callback` listener for `event` in `listeners` Map.\n */\nfunction registerCallback<EventNames>(\n  event: EventNames,\n  callback: EventListener,\n  listeners: EventListeners<EventNames>,\n): void {\n  let listenersForEvent = listeners.get(event);\n\n  if (listenersForEvent === undefined) {\n    listenersForEvent = [];\n    listeners.set(event, listenersForEvent);\n  }\n\n  listenersForEvent.push(callback);\n}\n\n/**\n * Remove `callback` listener for `event` from `listeners` Map.\n */\nfunction unregisterCallback<EventNames>(\n  event: EventNames,\n  callback: EventListener,\n  listeners: EventListeners<EventNames>,\n): void {\n  const listenersForEvent = listeners.get(event);\n  if (listenersForEvent !== undefined) {\n    const indexOfCallback = listenersForEvent.indexOf(callback);\n    if (indexOfCallback !== -1) {\n      listenersForEvent.splice(indexOfCallback, 1);\n    }\n  }\n}\n\n/**\n * Call all registered listeners for `event` with `args` as arguments. Return\n * `true` if at least one callback was registered and `false` otherwise.\n */\nfunction triggerCallback<EventNames>(\n  event: EventNames,\n  args: any[],\n  listeners: EventListeners<EventNames>,\n): boolean {\n  // Fast-path for cases where no listener is registered\n  if (listeners.size === 0) {\n    return false;\n  }\n\n  const listenersForEvent = listeners.get(event);\n  if (listenersForEvent !== undefined) {\n    queueMicrotask(() => {\n      for (const listener of listenersForEvent) {\n        listener(...args);\n      }\n    });\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Simple and efficient `EventEmitter` abstraction (following conventions from\n * Node.js) allowing partially typed event emitting. The set of event names is\n * specified as a type parameter while instantiating the event emitter.\n */\nexport class EventEmitter<EventNames> {\n  private onceListeners: EventListeners<EventNames> = new Map();\n  private onListeners: EventListeners<EventNames> = new Map();\n\n  /**\n   * Register an event listener for `event`.\n   */\n  public on(event: EventNames, callback: EventListener): void {\n    registerCallback(event, callback, this.onListeners);\n  }\n\n  /**\n   * Register an event listener for `event`; but only listen to first instance\n   * of this event. The listener is automatically deleted afterwards.\n   */\n  public once(event: EventNames, callback: EventListener): void {\n    registerCallback(event, callback, this.onceListeners);\n  }\n\n  /**\n   * Remove `callback` from list of listeners for `event`.\n   */\n  public unsubscribe(event: EventNames, callback: EventListener): void {\n    unregisterCallback(event, callback, this.onListeners);\n    unregisterCallback(event, callback, this.onceListeners);\n  }\n\n  /**\n   * Emit an event. Call all registered listeners to this event.\n   */\n  public emit(event: EventNames, ...args: any[]): void {\n    triggerCallback(event, args, this.onListeners);\n    if (triggerCallback(event, args, this.onceListeners) === true) {\n      this.onceListeners.delete(event);\n    }\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\ninterface FetchResponse {\n  text: () => Promise<string>;\n  arrayBuffer: () => Promise<ArrayBuffer>;\n  json: () => Promise<any>;\n}\n\nexport type Fetch = (url: string) => Promise<FetchResponse>;\n\n/**\n * Built-in fetch helpers can be used to initialize the adblocker from\n * pre-built presets or raw lists (fetched from multiple sources). In case of\n * failure (e.g. timeout), the whole process of initialization fails. Timeouts\n * are not so uncommon, and retrying to fetch usually succeeds.\n */\nexport function fetchWithRetry(fetch: Fetch, url: string): Promise<FetchResponse> {\n  let retry = 3;\n\n  // Wrap `fetch` into a lightweight retry function which makes sure that if\n  // fetching fails, it can be retried up to three times. Failure can happen if\n  // the remote server times-out, but retrying fetching of the same URL will\n  // usually succeed.\n  const fetchWrapper = (): Promise<FetchResponse> => {\n    return fetch(url).catch((ex) => {\n      if (retry > 0) {\n        retry -= 1;\n        return new Promise((resolve, reject) => {\n          setTimeout(() => {\n            fetchWrapper().then(resolve).catch(reject);\n          }, 500);\n        });\n      }\n\n      throw ex;\n    });\n  };\n\n  return fetchWrapper();\n}\n\nfunction fetchResource(fetch: Fetch, url: string): Promise<string> {\n  return fetchWithRetry(fetch, url).then((response) => response.text());\n}\n\nconst PREFIX =\n  'https://raw.githubusercontent.com/cliqz-oss/adblocker/master/packages/adblocker/assets';\n\nexport const adsLists = [\n  `${PREFIX}/easylist/easylist.txt`,\n  `${PREFIX}/easylist/easylistgermany.txt`,\n  `${PREFIX}/peter-lowe/serverlist.txt`,\n  `${PREFIX}/ublock-origin/annoyances.txt`,\n  `${PREFIX}/ublock-origin/badware.txt`,\n  `${PREFIX}/ublock-origin/filters.txt`,\n  `${PREFIX}/ublock-origin/filters-2020.txt`,\n  `${PREFIX}/ublock-origin/filters-2021.txt`,\n  `${PREFIX}/ublock-origin/filters-2022.txt`,\n  `${PREFIX}/ublock-origin/resource-abuse.txt`,\n  `${PREFIX}/ublock-origin/unbreak.txt`,\n];\n\nexport const adsAndTrackingLists = [\n  ...adsLists,\n  `${PREFIX}/easylist/easyprivacy.txt`,\n  `${PREFIX}/ublock-origin/privacy.txt`,\n];\n\nexport const fullLists = [...adsAndTrackingLists, `${PREFIX}/easylist/easylist-cookie.txt`];\n\n/**\n * Fetch latest version of enabledByDefault blocking lists.\n */\nexport function fetchLists(fetch: Fetch, urls: string[]): Promise<string[]> {\n  return Promise.all(urls.map((url) => fetchResource(fetch, url)));\n}\n\n/**\n * Fetch latest version of uBlock Origin's resources, used to inject scripts in\n * the page or redirect request to data URLs.\n */\nexport function fetchResources(fetch: Fetch): Promise<string> {\n  return fetchResource(fetch, `${PREFIX}/ublock-origin/resources.txt`);\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nclass HidingBuilder {}\n\ntype RequestType = 'image' | 'script' | 'font' | 'frame' | 'media' | 'font' | 'css';\n\nclass NetworkBuilder {\n  private options: Set<RequestType> = new Set();\n\n  private prefix: string | undefined = undefined;\n  private infix: string | undefined = undefined;\n  private suffix: string | undefined = undefined;\n\n  private redirect: string | undefined = undefined;\n\n  private blockRequestsWithType(t: RequestType): NetworkBuilder {\n    if (this.options.has(t)) {\n      throw new Error(`Already blocking type ${t}`);\n    }\n\n    this.options.add(t);\n    return this;\n  }\n\n  public images(): NetworkBuilder {\n    return this.blockRequestsWithType('image');\n  }\n\n  public scripts(): NetworkBuilder {\n    return this.blockRequestsWithType('script');\n  }\n\n  public frames(): NetworkBuilder {\n    return this.blockRequestsWithType('frame');\n  }\n\n  public fonts(): NetworkBuilder {\n    return this.blockRequestsWithType('font');\n  }\n\n  public medias(): NetworkBuilder {\n    return this.blockRequestsWithType('media');\n  }\n\n  public styles(): NetworkBuilder {\n    return this.blockRequestsWithType('css');\n  }\n\n  public redirectTo(redirect: string): NetworkBuilder {\n    if (this.redirect !== undefined) {\n      throw new Error(`Already redirecting: ${this.redirect}`);\n    }\n    this.redirect = `redirect=${redirect}`;\n    return this;\n  }\n\n  public urlContains(infix: string): NetworkBuilder {\n    if (this.infix !== undefined) {\n      throw new Error(`Already matching pattern: ${this.infix}`);\n    }\n    this.infix = infix;\n    return this;\n  }\n\n  public urlStartsWith(prefix: string): NetworkBuilder {\n    if (this.prefix !== undefined) {\n      throw new Error(`Already matching prefix: ${this.prefix}`);\n    }\n    this.prefix = `|${prefix}`;\n    return this;\n  }\n\n  public urlEndsWith(suffix: string): NetworkBuilder {\n    if (this.suffix !== undefined) {\n      throw new Error(`Already matching suffix: ${this.suffix}`);\n    }\n    this.suffix = `${suffix}|`;\n    return this;\n  }\n\n  public withHostname(hostname: string): NetworkBuilder {\n    if (this.prefix !== undefined) {\n      throw new Error(`Cannot match hostname if filter already has prefix: ${this.prefix}`);\n    }\n    this.prefix = `||${hostname}^`;\n    return this;\n  }\n\n  public toString(): string {\n    const parts: string[] = [];\n\n    if (this.prefix !== undefined) {\n      parts.push(this.prefix);\n    }\n\n    if (this.infix !== undefined) {\n      parts.push(this.infix);\n    }\n\n    if (this.suffix !== undefined) {\n      parts.push(this.suffix);\n    }\n\n    const options: string[] = ['important'];\n\n    if (this.options.size !== 0) {\n      for (const option of this.options) {\n        options.push(option);\n      }\n    }\n\n    if (this.redirect !== undefined) {\n      options.push(this.redirect);\n    }\n\n    return `${parts.length === 0 ? '*' : parts.join('*')}$${options.join(',')}`;\n  }\n}\n\nexport function block(): NetworkBuilder {\n  return new NetworkBuilder();\n}\n\nexport function hide(): HidingBuilder {\n  return new HidingBuilder();\n}\n","/*!\n * Based on parsel. Extended by Rémi Berson for Ghostery (2021).\n * https://github.com/LeaVerou/parsel\n *\n * MIT License\n *\n * Copyright (c) 2020 Lea Verou\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport { isAST, isAtoms } from './types';\nimport type {\n  AST,\n  Atoms,\n  AtomsOrStrings,\n  Attribute,\n  Class,\n  Combinator,\n  Comma,\n  Id,\n  ParserOptions,\n  PseudoClass,\n  PseudoElement,\n  Strings,\n  TokenType,\n  Type,\n} from './types';\n\nexport const RECURSIVE_PSEUDO_CLASSES = new Set([\n  'any',\n  'dir',\n  'has',\n  'host-context',\n  'if',\n  'if-not',\n  'is',\n  'matches',\n  'not',\n  'where',\n]);\n\nconst TOKENS: { [T in TokenType]: RegExp } = {\n  attribute: /\\[\\s*(?:(?<namespace>\\*|[-\\w]*)\\|)?(?<name>[-\\w\\u{0080}-\\u{FFFF}]+)\\s*(?:(?<operator>\\W?=)\\s*(?<value>.+?)\\s*(?<caseSensitive>[iIsS])?\\s*)?\\]/gu,\n  id: /#(?<name>(?:[-\\w\\u{0080}-\\u{FFFF}]|\\\\.)+)/gu,\n  class: /\\.(?<name>(?:[-\\w\\u{0080}-\\u{FFFF}]|\\\\.)+)/gu,\n  comma: /\\s*,\\s*/g, // must be before combinator\n  combinator: /\\s*[\\s>+~]\\s*/g, // this must be after attribute\n  'pseudo-element': /::(?<name>[-\\w\\u{0080}-\\u{FFFF}]+)(?:\\((?:¶*)\\))?/gu, // this must be before pseudo-class\n  'pseudo-class': /:(?<name>[-\\w\\u{0080}-\\u{FFFF}]+)(?:\\((?<argument>¶*)\\))?/gu,\n  type: /(?:(?<namespace>\\*|[-\\w]*)\\|)?(?<name>[-\\w\\u{0080}-\\u{FFFF}]+)|\\*/gu, // this must be last\n};\n\nconst TOKENS_WITH_PARENS: Set<TokenType> = new Set(['pseudo-class', 'pseudo-element']);\nconst TOKENS_WITH_STRINGS: Set<TokenType> = new Set([...TOKENS_WITH_PARENS, 'attribute']);\nconst TRIM_TOKENS: Set<TokenType> = new Set(['combinator', 'comma']);\n\nconst TOKENS_FOR_RESTORE: { [T in TokenType]: RegExp } = Object.assign({}, TOKENS);\nTOKENS_FOR_RESTORE['pseudo-element'] = RegExp(\n  TOKENS['pseudo-element'].source.replace('(?<argument>¶*)', '(?<argument>.*?)'),\n  'gu',\n);\nTOKENS_FOR_RESTORE['pseudo-class'] = RegExp(\n  TOKENS['pseudo-class'].source.replace('(?<argument>¶*)', '(?<argument>.*)'),\n  'gu',\n);\n\n// TODO - it feels like with some more typing shenanigans we could replace groups validation by generic logic in this function.\nfunction splitOnMatch(\n  pattern: RegExp,\n  str: string,\n): [string, [string, { [name: string]: string }], string] | undefined {\n  pattern.lastIndex = 0;\n  const match = pattern.exec(str);\n\n  if (match === null) {\n    return undefined;\n  }\n\n  const from = match.index - 1;\n  const content = match[0];\n  const before = str.slice(0, from + 1);\n  const after = str.slice(from + content.length + 1);\n\n  return [before, [content, match.groups || {}], after];\n}\n\nconst GRAMMAR = [\n  // attribute\n  (str: string): [string, Attribute, string] | undefined => {\n    const match = splitOnMatch(TOKENS.attribute, str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    const [before, [content, { name, operator, value, namespace, caseSensitive }], after] = match;\n    if (name === undefined) {\n      return undefined;\n    }\n\n    return [\n      before,\n      {\n        type: 'attribute',\n        content,\n        length: content.length,\n        namespace,\n        caseSensitive,\n        pos: [],\n        name,\n        operator,\n        value,\n      },\n      after,\n    ];\n  },\n\n  // #id\n  (str: string): [string, Id, string] | undefined => {\n    const match = splitOnMatch(TOKENS.id, str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    const [before, [content, { name }], after] = match;\n    if (name === undefined) {\n      return undefined;\n    }\n\n    return [\n      before,\n      {\n        type: 'id',\n        content,\n        length: content.length,\n        pos: [],\n        name,\n      },\n      after,\n    ];\n  },\n\n  // .class\n  (str: string): [string, Class, string] | undefined => {\n    const match = splitOnMatch(TOKENS.class, str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    const [before, [content, { name }], after] = match;\n    if (name === undefined) {\n      return undefined;\n    }\n\n    return [\n      before,\n      {\n        type: 'class',\n        content,\n        length: content.length,\n        pos: [],\n        name,\n      },\n      after,\n    ];\n  },\n\n  // comma ,\n  (str: string): [string, Comma, string] | undefined => {\n    const match = splitOnMatch(TOKENS.comma, str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    const [before, [content], after] = match;\n\n    return [\n      before,\n      {\n        type: 'comma',\n        content,\n        length: content.length,\n        pos: [],\n      },\n      after,\n    ];\n  },\n\n  // combinator\n  (str: string): [string, Combinator, string] | undefined => {\n    const match = splitOnMatch(TOKENS.combinator, str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    const [before, [content], after] = match;\n\n    return [\n      before,\n      {\n        type: 'combinator',\n        content,\n        length: content.length,\n        pos: [],\n      },\n      after,\n    ];\n  },\n\n  // pseudo-element\n  (str: string): [string, PseudoElement, string] | undefined => {\n    const match = splitOnMatch(TOKENS['pseudo-element'], str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    const [before, [content, { name }], after] = match;\n\n    if (name === undefined) {\n      return undefined;\n    }\n\n    return [\n      before,\n      {\n        type: 'pseudo-element',\n        content,\n        length: content.length,\n        pos: [],\n        name,\n      },\n      after,\n    ];\n  },\n\n  // pseudo-class\n  (str: string): [string, PseudoClass, string] | undefined => {\n    const match = splitOnMatch(TOKENS['pseudo-class'], str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    // TODO - here `argument` can be undefined and should be rejected?\n    const [before, [content, { name, argument }], after] = match;\n\n    if (name === undefined) {\n      return undefined;\n    }\n\n    return [\n      before,\n      {\n        type: 'pseudo-class',\n        content,\n        length: content.length,\n        pos: [],\n        name,\n        argument,\n        subtree: undefined,\n      },\n      after,\n    ];\n  },\n\n  // type\n  (str: string): [string, Type, string] | undefined => {\n    const match = splitOnMatch(TOKENS.type, str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    const [before, [content, { name, namespace }], after] = match;\n\n    return [\n      before,\n      {\n        type: 'type',\n        content,\n        length: content.length,\n        namespace,\n        pos: [],\n        name,\n      },\n      after,\n    ];\n  },\n];\n\nfunction tokenizeBy(text: string): Atoms {\n  if (!text) {\n    return [];\n  }\n\n  const strarr: AtomsOrStrings = [text];\n  for (const tokenizer of GRAMMAR) {\n    for (let i = 0; i < strarr.length; i++) {\n      const str = strarr[i];\n      if (typeof str === 'string') {\n        const match = tokenizer(str);\n        if (match !== undefined) {\n          strarr.splice(i, 1, ...(match as AtomsOrStrings).filter((a) => a.length !== 0));\n        }\n      }\n    }\n  }\n\n  let offset = 0;\n  for (const token of strarr) {\n    if (typeof token !== 'string') {\n      token.pos = [offset, offset + token.length];\n      if (TRIM_TOKENS.has(token.type)) {\n        token.content = token.content.trim() || ' ';\n      }\n    }\n\n    offset += token.length;\n  }\n\n  if (isAtoms(strarr)) {\n    return strarr;\n  }\n\n  // NOTE: here this means that parsing failed.\n  return [];\n}\n\nfunction restoreNested(tokens: Atoms, strings: Strings, regex: RegExp, types: Set<TokenType>) {\n  // TODO - here from offsets in strings and tokens we should be able to find the exact spot without RegExp?\n  for (const str of strings) {\n    for (const token of tokens) {\n      if (types.has(token.type) && token.pos[0] < str.start && str.start < token.pos[1]) {\n        const content = token.content;\n        token.content = token.content.replace(regex, str.str);\n\n        if (token.content !== content) {\n          // actually changed?\n          // Re-evaluate groups\n          TOKENS_FOR_RESTORE[token.type].lastIndex = 0;\n          const match = TOKENS_FOR_RESTORE[token.type].exec(token.content);\n          if (match !== null) {\n            Object.assign(token, match.groups);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport function isEscaped(str: string, index: number): boolean {\n  let backslashes = 0;\n\n  index -= 1;\n  while (index >= 0 && str[index] === '\\\\') {\n    backslashes += 1;\n    index -= 1;\n  }\n\n  return backslashes % 2 !== 0;\n}\n\nexport function gobbleQuotes(text: string, quote: '\"' | \"'\", start: number): string | undefined {\n  // Find end of quote, taking care of ignoring escaped quotes\n  let end = start + 1;\n\n  /* tslint:disable no-conditional-assignment */\n  while ((end = text.indexOf(quote, end)) !== -1 && isEscaped(text, end) === true) {\n    end += 1;\n  }\n\n  if (end === -1) {\n    // Opening quote without closing quote\n    return undefined;\n  }\n\n  return text.slice(start, end + 1);\n}\n\nexport function gobbleParens(text: string, start: number): string | undefined {\n  let stack = 0;\n\n  for (let i = start; i < text.length; i++) {\n    const char = text[i];\n\n    if (char === '(') {\n      stack += 1;\n    } else if (char === ')') {\n      if (stack > 0) {\n        stack -= 1;\n      } else {\n        // Closing paren without opening paren\n        return undefined;\n      }\n    }\n\n    if (stack === 0) {\n      return text.slice(start, i + 1);\n    }\n  }\n\n  // Opening paren without closing paren\n  return undefined;\n}\n\nexport function replace(\n  selector: string,\n  replacement: '¶' | '§',\n  opening: '(' | '\"' | \"'\",\n  gobble: (text: string, start: number) => string | undefined,\n): [Strings, string] {\n  const strings: Strings = [];\n\n  let offset = 0;\n  /* tslint:disable no-conditional-assignment */\n  while ((offset = selector.indexOf(opening, offset)) !== -1) {\n    const str = gobble(selector, offset);\n    if (str === undefined) {\n      break;\n    }\n\n    strings.push({ str, start: offset });\n    selector = `${selector.slice(0, offset + 1)}${replacement.repeat(\n      str.length - 2,\n    )}${selector.slice(offset + str.length - 1)}`;\n    offset += str.length;\n  }\n\n  return [strings, selector];\n}\n\nexport function tokenize(selector: string): Atoms {\n  if (typeof selector !== 'string') {\n    return [];\n  }\n\n  // Prevent leading/trailing whitespace be interpreted as combinators\n  selector = selector.trim();\n\n  if (selector.length === 0) {\n    return [];\n  }\n\n  // Replace strings with whitespace strings (to preserve offsets)\n  const [doubleQuotes, selectorWithoutDoubleQuotes] = replace(\n    selector,\n    '§',\n    '\"',\n    (text: string, start: number) => gobbleQuotes(text, '\"', start),\n  );\n\n  const [singleQuotes, selectorWithoutQuotes] = replace(\n    selectorWithoutDoubleQuotes,\n    '§',\n    \"'\",\n    (text: string, start: number) => gobbleQuotes(text, \"'\", start),\n  );\n\n  // Now that strings are out of the way, extract parens and replace them with parens with whitespace (to preserve offsets)\n  const [parens, selectorWithoutParens] = replace(selectorWithoutQuotes, '¶', '(', gobbleParens);\n\n  // Now we have no nested structures and we can parse with regexes\n  const tokens = tokenizeBy(selectorWithoutParens);\n\n  // Now restore parens and strings in reverse order\n  restoreNested(tokens, parens, /\\(¶*\\)/, TOKENS_WITH_PARENS);\n  restoreNested(tokens, doubleQuotes, /\"§*\"/, TOKENS_WITH_STRINGS);\n  restoreNested(tokens, singleQuotes, /'§*'/, TOKENS_WITH_STRINGS);\n\n  return tokens;\n}\n\n// Convert a flat list of tokens into a tree of complex & compound selectors\nfunction nestTokens(\n  tokens: Atoms,\n  { list = true }: Pick<ParserOptions, 'list'> = {},\n): AST | undefined {\n  if (list === true && tokens.some((t) => t.type === 'comma')) {\n    const selectors: AST[] = [];\n    const temp: Atoms = [];\n\n    for (let i = 0; i < tokens.length; i += 1) {\n      const token = tokens[i];\n      if (token.type === 'comma') {\n        if (temp.length === 0) {\n          throw new Error('Incorrect comma at ' + i);\n        }\n\n        const sub = nestTokens(temp, { list: false });\n        if (sub !== undefined) {\n          selectors.push(sub);\n        }\n        temp.length = 0;\n      } else {\n        temp.push(token);\n      }\n    }\n\n    if (temp.length === 0) {\n      throw new Error('Trailing comma');\n    } else {\n      const sub = nestTokens(temp, { list: false });\n      if (sub !== undefined) {\n        selectors.push(sub);\n      }\n    }\n\n    return { type: 'list', list: selectors };\n  }\n\n  for (let i = tokens.length - 1; i >= 0; i--) {\n    const token = tokens[i];\n\n    if (token.type === 'combinator') {\n      const left = nestTokens(tokens.slice(0, i));\n      const right = nestTokens(tokens.slice(i + 1));\n      if (right === undefined) {\n        return undefined;\n      }\n\n      if (\n        token.content !== ' ' &&\n        token.content !== '~' &&\n        token.content !== '+' &&\n        token.content !== '>'\n      ) {\n        return undefined;\n      }\n\n      return {\n        type: 'complex',\n        combinator: token.content,\n        left,\n        right,\n      };\n    }\n  }\n\n  if (tokens.length === 0) {\n    return undefined;\n  }\n\n  if (isAST(tokens)) {\n    if (tokens.length === 1) {\n      return tokens[0];\n    }\n\n    // If we're here, there are no combinators, so it's just a list\n    return {\n      type: 'compound',\n      compound: [...tokens], // clone to avoid pointers messing up the AST\n    };\n  }\n\n  return undefined;\n}\n\n// Traverse an AST (or part thereof), in depth-first order\nfunction walk(\n  node: AST | undefined,\n  callback: (node: AST, parentNode?: AST) => void,\n  o?: AST,\n  parent?: AST,\n): void {\n  if (node === undefined) {\n    return;\n  }\n\n  if (node.type === 'complex') {\n    walk(node.left, callback, o, node);\n    walk(node.right, callback, o, node);\n  } else if (node.type === 'compound') {\n    for (const n of node.compound) {\n      walk(n, callback, o, node);\n    }\n  } else if (\n    node.type === 'pseudo-class' &&\n    node.subtree !== undefined &&\n    o !== undefined &&\n    o.type === 'pseudo-class' &&\n    o.subtree !== undefined\n  ) {\n    walk(node.subtree, callback, o, node);\n  }\n\n  callback(node, parent);\n}\n\n/**\n * Parse a CSS selector\n * @param selector {String} The selector to parse\n * @param options.recursive {Boolean} Whether to parse the arguments of pseudo-classes like :is(), :has() etc. Defaults to true.\n * @param options.list {Boolean} Whether this can be a selector list (A, B, C etc). Defaults to true.\n */\nexport function parse(\n  selector: string,\n  { recursive = true, list = true }: ParserOptions = {},\n): AST | undefined {\n  const tokens = tokenize(selector);\n\n  if (tokens.length === 0) {\n    return undefined;\n  }\n\n  const ast = nestTokens(tokens, { list });\n\n  if (recursive === true) {\n    walk(ast, (node) => {\n      if (\n        node.type === 'pseudo-class' &&\n        node.argument &&\n        node.name !== undefined &&\n        RECURSIVE_PSEUDO_CLASSES.has(node.name)\n      ) {\n        node.subtree = parse(node.argument, { recursive: true, list: true });\n      }\n    });\n  }\n\n  return ast;\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nconst tokenTypes = [\n  'attribute',\n  'id',\n  'class',\n  'comma',\n  'combinator',\n  'pseudo-element',\n  'pseudo-class',\n  'type',\n] as const;\n\nexport type TokenType = typeof tokenTypes[number];\n\nexport type Base = {\n  length: number;\n  content: string;\n  pos: number[];\n};\n\nexport type Type = Base & {\n  type: 'type';\n  name?: string;\n  namespace?: string;\n};\n\nexport type PseudoClass = Base & {\n  type: 'pseudo-class';\n  name: string;\n  argument: string | undefined;\n  subtree: AST | undefined;\n};\n\nexport type PseudoElement = Base & {\n  type: 'pseudo-element';\n  name: string;\n};\n\nexport type Combinator = Base & {\n  type: 'combinator';\n};\n\nexport type Comma = Base & {\n  type: 'comma';\n};\n\nexport type Class = Base & {\n  type: 'class';\n  name: string;\n};\n\nexport type Id = Base & {\n  type: 'id';\n  name: string;\n};\n\nexport type Attribute = Base & {\n  type: 'attribute';\n  namespace?: string;\n  caseSensitive?: string;\n  name: string;\n  operator?: string;\n  value?: string;\n};\n\nexport type Atom =\n  | Attribute\n  | Id\n  | Class\n  | Comma\n  | Combinator\n  | PseudoClass\n  | PseudoElement\n  | Type;\n\nexport type Atoms = Atom[];\n\nexport type AtomOrString = Atom | string;\n\nexport type AtomsOrStrings = AtomOrString[];\n\nexport type Strings = { str: string; start: number }[];\n\n// Complex selectors with combinators (e.g. ~, >, +)\nexport interface Complex {\n  type: 'complex';\n  combinator: ' ' | '+' | '~' | '>';\n  right: AST;\n  left: AST | undefined;\n}\n\n// Multiple selectors together\n// i.e. selector1selector2 (should match both at the same time)\nexport interface Compound {\n  type: 'compound';\n  compound: AST[];\n}\n\n// Comma-separated list of selectors\n// i.e. selector1, selector2, etc.\nexport interface List {\n  type: 'list';\n  list: AST[];\n}\n\nexport type AST =\n  | Attribute\n  | Id\n  | Class\n  | PseudoClass\n  | PseudoElement\n  | Type\n  | Complex\n  | Compound\n  | List;\n\nexport interface ParserOptions {\n  recursive?: boolean;\n  list?: boolean;\n}\n\nexport function isAtoms(tokens: AtomsOrStrings): tokens is Atoms {\n  return tokens.every((token) => typeof token !== 'string');\n}\n\nexport function isAST(\n  tokens: Atoms,\n): tokens is (Attribute | Id | Class | PseudoClass | PseudoElement | Type)[] {\n  return tokens.every((token) => token.type !== 'comma' && token.type !== 'combinator');\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { tokenize, RECURSIVE_PSEUDO_CLASSES } from './parse';\n\nexport const EXTENDED_PSEUDO_CLASSES = new Set([\n  // '-abp-contains',\n  // '-abp-has',\n  // '-abp-properties',\n  'has',\n  'has-text',\n  'if',\n  // 'if-not',\n  // 'matches-css',\n  // 'matches-css-after',\n  // 'matches-css-before',\n  // 'min-text-length',\n  // 'nth-ancestor',\n  // 'upward',\n  // 'watch-attr',\n  // 'watch-attrs',\n  // 'xpath',\n]);\n\nexport const PSEUDO_CLASSES = new Set([\n  'active',\n  'any',\n  'any-link',\n  'blank',\n  'checked',\n  'default',\n  'defined',\n  'dir',\n  'disabled',\n  'empty',\n  'enabled',\n  'first',\n  'first-child',\n  'first-of-type',\n  'focus',\n  'focus-visible',\n  'focus-within',\n  'fullscreen',\n  'host',\n  'host-context',\n  'hover',\n  'in-range',\n  'indeterminate',\n  'invalid',\n  'is',\n  'lang',\n  'last-child',\n  'last-of-type',\n  'left',\n  'link',\n  'matches',\n  // NOTE: by default we consider `:not(...)` to be a normal CSS selector since,\n  // we are only interested in cases where the argument is an extended selector.\n  // If that is the case, it will still be detected as such.\n  'not',\n  'nth-child',\n  'nth-last-child',\n  'nth-last-of-type',\n  'nth-of-type',\n  'only-child',\n  'only-of-type',\n  'optional',\n  'out-of-range',\n  'placeholder-shown',\n  'read-only',\n  'read-write',\n  'required',\n  'right',\n  'root',\n  'scope',\n  'target',\n  'valid',\n  'visited',\n  'where',\n]);\n\n// NOTE: here we only need to list the pseudo-elements which can appear with a\n// single colon (e.g. :after or ::after are valid for backward compatibility\n// reasons). They can be misinterpreted as pseudo-classes by the tokenizer for\n// this reason.\nexport const PSEUDO_ELEMENTS = new Set(['after', 'before', 'first-letter', 'first-line']);\n\nexport enum SelectorType {\n  Normal,\n  Extended,\n  Invalid,\n}\n\nexport function classifySelector(selector: string): SelectorType {\n  // In most cases there is no pseudo-anything so we can quickly exit.\n  if (selector.indexOf(':') === -1) {\n    return SelectorType.Normal;\n  }\n\n  const tokens = tokenize(selector);\n\n  // Detect pseudo-classes\n  let foundSupportedExtendedSelector = false;\n  for (const token of tokens) {\n    if (token.type === 'pseudo-class') {\n      const { name } = token;\n      if (EXTENDED_PSEUDO_CLASSES.has(name) === true) {\n        foundSupportedExtendedSelector = true;\n      } else if (PSEUDO_CLASSES.has(name) === false && PSEUDO_ELEMENTS.has(name) === false) {\n        return SelectorType.Invalid;\n      }\n\n      // Recursively\n      if (\n        foundSupportedExtendedSelector === false &&\n        token.argument !== undefined &&\n        RECURSIVE_PSEUDO_CLASSES.has(name) === true\n      ) {\n        const argumentType = classifySelector(token.argument);\n        if (argumentType === SelectorType.Invalid) {\n          return argumentType;\n        } else if (argumentType === SelectorType.Extended) {\n          foundSupportedExtendedSelector = true;\n        }\n      }\n    }\n  }\n\n  if (foundSupportedExtendedSelector === true) {\n    return SelectorType.Extended;\n  }\n\n  return SelectorType.Normal;\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\n/**\n * Thin abstraction around a Uint32Array which allows to push tokens\n * whithout caring for the offset. It is used as a way to avoid multiple\n * allocations while calling tokenization (mostly beneficitial for\n * `NetworkFilter.getTokens()`).\n */\nexport class TokensBuffer {\n  private readonly buffer: Uint32Array;\n  public pos: number = 0;\n\n  constructor(size: number) {\n    this.buffer = new Uint32Array(size);\n  }\n\n  public reset(): void {\n    this.pos = 0;\n  }\n\n  public slice(): Uint32Array {\n    return this.buffer.slice(0, this.pos);\n  }\n\n  public push(token: number): void {\n    this.buffer[this.pos++] = token;\n  }\n\n  public empty(): boolean {\n    return this.pos === 0;\n  }\n\n  public full(): boolean {\n    return this.pos === this.buffer.length;\n  }\n\n  public remaining(): number {\n    return this.buffer.length - this.pos;\n  }\n}\n\nexport const TOKENS_BUFFER = new TokensBuffer(1024);\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { TokensBuffer, TOKENS_BUFFER } from './tokens-buffer';\n\nexport const HASH_SEED = 7877;\n\n/***************************************************************************\n *  Bitwise helpers\n * ************************************************************************* */\n\n// From: https://stackoverflow.com/a/43122214/1185079\nexport function bitCount(n: number): number {\n  n = n - ((n >> 1) & 0x55555555);\n  n = (n & 0x33333333) + ((n >> 2) & 0x33333333);\n  return (((n + (n >> 4)) & 0xf0f0f0f) * 0x1010101) >> 24;\n}\n\nexport function getBit(n: number, mask: number): boolean {\n  return !!(n & mask);\n}\n\nexport function setBit(n: number, mask: number): number {\n  return n | mask;\n}\n\nexport function clearBit(n: number, mask: number): number {\n  return n & ~mask;\n}\n\nexport function fastHashBetween(str: string, begin: number, end: number): number {\n  let hash = HASH_SEED;\n\n  for (let i = begin; i < end; i += 1) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n\n  return hash >>> 0;\n}\n\nexport function fastHash(str: string): number {\n  if (typeof str !== 'string') {\n    return HASH_SEED;\n  }\n\n  if (str.length === 0) {\n    return HASH_SEED;\n  }\n\n  return fastHashBetween(str, 0, str.length);\n}\n\nexport function hashStrings(strings: string[]): Uint32Array {\n  const result = new Uint32Array(strings.length);\n  let index = 0;\n  for (const str of strings) {\n    result[index++] = fastHash(str);\n  }\n  return result;\n}\n\n// https://jsperf.com/string-startswith/21\nexport function fastStartsWith(haystack: string, needle: string): boolean {\n  if (haystack.length < needle.length) {\n    return false;\n  }\n\n  const ceil = needle.length;\n  for (let i = 0; i < ceil; i += 1) {\n    if (haystack[i] !== needle[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function fastStartsWithFrom(haystack: string, needle: string, start: number): boolean {\n  if (haystack.length - start < needle.length) {\n    return false;\n  }\n\n  const ceil = start + needle.length;\n  for (let i = start; i < ceil; i += 1) {\n    if (haystack[i] !== needle[i - start]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function isDigit(ch: number): boolean {\n  // 48 == '0'\n  // 57 == '9'\n  return ch >= 48 && ch <= 57;\n}\n\nexport function isAlpha(ch: number): boolean {\n  // 65 == 'A'\n  // 90 == 'Z'\n  // 97 == 'a'\n  // 122 === 'z'\n  return (ch >= 97 && ch <= 122) || (ch >= 65 && ch <= 90);\n}\n\nfunction isAlphaExtended(ch: number): boolean {\n  // 192 -> 450\n  // À  Á  Â  Ã  Ä  Å  Æ  Ç  È  É  Ê  Ë  Ì  Í  Î  Ï  Ð  Ñ  Ò  Ó  Ô  Õ  Ö  ×  Ø\n  // Ù  Ú  Û  Ü  Ý  Þ  ß  à  á  â  ã  ä  å  æ  ç  è  é  ê  ë  ì  í  î  ï  ð  ñ\n  // ò  ó  ô  õ  ö  ÷  ø  ù  ú  û  ü  ý  þ  ÿ  Ā  ā  Ă  ă  Ą  ą  Ć  ć  Ĉ  ĉ  Ċ\n  // ċ  Č  č  Ď  ď  Đ  đ  Ē  ē  Ĕ  ĕ  Ė  ė  Ę  ę  Ě  ě  Ĝ  ĝ  Ğ  ğ  Ġ  ġ  Ģ  ģ\n  // Ĥ  ĥ  Ħ  ħ  Ĩ  ĩ  Ī  ī  Ĭ  ĭ  Į  į  İ  ı  Ĳ  ĳ  Ĵ  ĵ  Ķ  ķ  ĸ  Ĺ  ĺ  Ļ  ļ\n  // Ľ  ľ  Ŀ  ŀ  Ł  ł  Ń  ń  Ņ  ņ  Ň  ň  ŉ  Ŋ  ŋ  Ō  ō  Ŏ  ŏ  Ő  ő  Œ  œ  Ŕ  ŕ\n  // Ŗ  ŗ  Ř  ř  Ś  ś  Ŝ  ŝ  Ş  ş  Š  š  Ţ  ţ  Ť  ť  Ŧ  ŧ  Ũ  ũ  Ū  ū  Ŭ  ŭ  Ů\n  // ů  Ű  ű  Ų  ų  Ŵ  ŵ  Ŷ  ŷ  Ÿ  Ź  ź  Ż  ż  Ž  ž  ſ  ƀ  Ɓ  Ƃ  ƃ  Ƅ  ƅ  Ɔ  Ƈ\n  // ƈ  Ɖ  Ɗ  Ƌ  ƌ  ƍ  Ǝ  Ə  Ɛ  Ƒ  ƒ  Ɠ  Ɣ  ƕ  Ɩ  Ɨ  Ƙ  ƙ  ƚ  ƛ  Ɯ  Ɲ  ƞ  Ɵ  Ơ\n  // ơ  Ƣ  ƣ  Ƥ  ƥ  Ʀ  Ƨ  ƨ  Ʃ  ƪ  ƫ  Ƭ  ƭ  Ʈ  Ư  ư  Ʊ  Ʋ  Ƴ  ƴ  Ƶ  ƶ  Ʒ  Ƹ  ƹ\n  // ƺ  ƻ  Ƽ  ƽ  ƾ  ƿ  ǀ  ǁ  ǂ\n  return ch >= 192 && ch <= 450;\n}\n\nfunction isCyrillic(ch: number): boolean {\n  // 1024 -> 1279\n  // Ѐ Ё Ђ Ѓ Є Ѕ І Ї Ј Љ Њ Ћ Ќ Ѝ Ў Џ А Б В Г Д Е Ж З И Й К Л М Н О П Р С Т У Ф Х\n  // Ц Ч Ш Щ Ъ Ы Ь Э Ю Я а б в г д е ж з и й к л м н о п р с т у ф х ц ч ш щ ъ ы\n  // ь э ю я ѐ ё ђ ѓ є ѕ і ї ј љ њ ћ ќ ѝ ў џ Ѡ ѡ Ѣ ѣ Ѥ ѥ Ѧ ѧ Ѩ ѩ Ѫ ѫ Ѭ ѭ Ѯ ѯ\n  // Ѱ ѱ Ѳ ѳ Ѵ ѵ Ѷ ѷ Ѹ ѹ Ѻ ѻ Ѽ ѽ Ѿ ѿ Ҁ ҁ ҂ ҃ ҄ ҅ ҆ ҇ ҈ ҉ Ҋ ҋ Ҍ ҍ Ҏ ҏ Ґ ґ Ғ ғ Ҕ ҕ Җ җ Ҙ ҙ\n  // Қ қ Ҝ ҝ Ҟ ҟ Ҡ ҡ Ң ң Ҥ ҥ Ҧ ҧ Ҩ ҩ Ҫ ҫ Ҭ ҭ Ү ү Ұ ұ Ҳ ҳ Ҵ ҵ Ҷ ҷ Ҹ ҹ Һ һ Ҽ ҽ Ҿ\n  // ҿ Ӏ Ӂ ӂ Ӄ ӄ Ӆ ӆ Ӈ ӈ Ӊ ӊ Ӌ ӌ Ӎ ӎ ӏ Ӑ ӑ Ӓ ӓ Ӕ ӕ Ӗ ӗ Ә ә Ӛ ӛ Ӝ ӝ Ӟ ӟ Ӡ ӡ Ӣ ӣ Ӥ\n  // ӥ Ӧ ӧ Ө ө Ӫ ӫ Ӭ ӭ Ӯ ӯ Ӱ ӱ Ӳ ӳ Ӵ ӵ Ӷ ӷ Ӹ ӹ Ӻ ӻ Ӽ ӽ Ӿ ӿ\n  return ch >= 1024 && ch <= 1279;\n}\n\nfunction isAllowedCode(ch: number): boolean {\n  return (\n    isAlpha(ch) || isDigit(ch) || ch === 37 /* '%' */ || isAlphaExtended(ch) || isCyrillic(ch)\n  );\n}\n\nexport function tokenizeWithWildcardsInPlace(\n  pattern: string,\n  skipFirstToken: boolean,\n  skipLastToken: boolean,\n  buffer: TokensBuffer,\n): void {\n  // TODO maybe better to check if buffer is full?\n  // Otherwise we are under-using the space.\n  const len = Math.min(pattern.length, buffer.remaining() * 2);\n  let inside = false;\n  let precedingCh = 0;\n  let start = 0;\n  let hash = HASH_SEED;\n\n  for (let i = 0; i < len; i += 1) {\n    const ch = pattern.charCodeAt(i);\n    if (isAllowedCode(ch) === true) {\n      if (inside === false) {\n        hash = HASH_SEED;\n        inside = true;\n        start = i;\n      }\n      hash = (hash * 33) ^ ch;\n    } else {\n      if (inside === true) {\n        inside = false;\n\n        if (\n          i - start > 1 && // Ignore tokens of 1 character\n          ch !== 42 && // Ignore tokens followed by a '*'\n          precedingCh !== 42 && // Ignore tokens preceeded by a '*'\n          (skipFirstToken === false || start !== 0)\n        ) {\n          buffer.push(hash >>> 0);\n        }\n      }\n\n      precedingCh = ch;\n    }\n  }\n\n  if (\n    skipLastToken === false &&\n    inside === true &&\n    precedingCh !== 42 && // Ignore tokens preceeded by a '*'\n    pattern.length - start > 1 && // Ignore tokens of 1 character\n    buffer.full() === false\n  ) {\n    buffer.push(hash >>> 0);\n  }\n}\n\nexport function tokenizeInPlace(\n  pattern: string,\n  skipFirstToken: boolean,\n  skipLastToken: boolean,\n  buffer: TokensBuffer,\n): void {\n  const len = Math.min(pattern.length, buffer.remaining() * 2);\n  let inside = false;\n  let start = 0;\n  let hash = HASH_SEED;\n\n  for (let i = 0; i < len; i += 1) {\n    const ch = pattern.charCodeAt(i);\n    if (isAllowedCode(ch) === true) {\n      if (inside === false) {\n        hash = HASH_SEED;\n        inside = true;\n        start = i;\n      }\n      hash = (hash * 33) ^ ch;\n    } else if (inside === true) {\n      inside = false;\n      if (\n        i - start > 1 && // Ignore tokens of 1 character\n        (skipFirstToken === false || start !== 0)\n      ) {\n        buffer.push(hash >>> 0);\n      }\n    }\n  }\n\n  if (\n    inside === true &&\n    skipLastToken === false &&\n    pattern.length - start > 1 && // Ignore tokens of 1 character\n    buffer.full() === false\n  ) {\n    buffer.push(hash >>> 0);\n  }\n}\n\nexport function tokenizeNoSkipInPlace(pattern: string, buffer: TokensBuffer): void {\n  const len = Math.min(pattern.length, buffer.remaining() * 2);\n  let inside = false;\n  let start = 0;\n  let hash = HASH_SEED;\n\n  for (let i = 0; i < len; i += 1) {\n    const ch = pattern.charCodeAt(i);\n    if (isAllowedCode(ch) === true) {\n      if (inside === false) {\n        hash = HASH_SEED;\n        inside = true;\n        start = i;\n      }\n      hash = (hash * 33) ^ ch;\n    } else if (inside === true) {\n      inside = false;\n      if (i - start > 1) {\n        buffer.push(hash >>> 0);\n      }\n    }\n  }\n\n  if (inside === true && pattern.length - start > 1 && buffer.full() === false) {\n    buffer.push(hash >>> 0);\n  }\n}\n\nexport function tokenizeNoSkip(pattern: string): Uint32Array {\n  TOKENS_BUFFER.reset();\n  tokenizeNoSkipInPlace(pattern, TOKENS_BUFFER);\n  return TOKENS_BUFFER.slice();\n}\n\nexport function tokenizeWithWildcards(\n  pattern: string,\n  skipFirstToken: boolean,\n  skipLastToken: boolean,\n): Uint32Array {\n  TOKENS_BUFFER.reset();\n  tokenizeWithWildcardsInPlace(pattern, skipFirstToken, skipLastToken, TOKENS_BUFFER);\n  return TOKENS_BUFFER.slice();\n}\n\nexport function tokenize(\n  pattern: string,\n  skipFirstToken: boolean,\n  skipLastToken: boolean,\n): Uint32Array {\n  TOKENS_BUFFER.reset();\n  tokenizeInPlace(pattern, skipFirstToken, skipLastToken, TOKENS_BUFFER);\n  return TOKENS_BUFFER.slice();\n}\n\nexport function tokenizeRegexInPlace(selector: string, tokens: TokensBuffer): void {\n  let end = selector.length - 1;\n  let begin = 1;\n  let prev: number = 0;\n\n  // Try to find the longest safe *prefix* that we can tokenize\n  for (; begin < end; begin += 1) {\n    const code = selector.charCodeAt(begin);\n\n    // If we encounter '|' before any other opening bracket, then it's not safe\n    // to tokenize this filter (e.g.: 'foo|bar'). Instead we abort tokenization\n    // to be safe.\n    if (code === 124 /* '|' */) {\n      return;\n    }\n\n    if (\n      code === 40 /* '(' */ ||\n      code === 42 /* '*' */ ||\n      code === 43 /* '+' */ ||\n      code === 63 /* '?' */ ||\n      code === 91 /* '[' */ ||\n      code === 123 /* '{' */ ||\n      (code === 46 /* '.' */ && prev !== 92) /* '\\' */ ||\n      (code === 92 /* '\\' */ && isAlpha(selector.charCodeAt(begin + 1)))\n    ) {\n      break;\n    }\n\n    prev = code;\n  }\n\n  // Try to find the longest safe *suffix* that we can tokenize\n  prev = 0;\n  for (; end >= begin; end -= 1) {\n    const code = selector.charCodeAt(end);\n\n    // If we encounter '|' before any other opening bracket, then it's not safe\n    // to tokenize this filter (e.g.: 'foo|bar'). Instead we abort tokenization\n    // to be safe.\n    if (code === 124 /* '|' */) {\n      return;\n    }\n\n    if (\n      code === 41 /* ')' */ ||\n      code === 42 /* '*' */ ||\n      code === 43 /* '+' */ ||\n      code === 63 /* '?' */ ||\n      code === 93 /* ']' */ ||\n      code === 125 /* '}' */ ||\n      (code === 46 /* '.' */ && selector.charCodeAt(end - 1) !== 92) /* '\\' */ ||\n      (code === 92 /* '\\' */ && isAlpha(prev))\n    ) {\n      break;\n    }\n\n    prev = code;\n  }\n\n  if (end < begin) {\n    // Full selector is safe\n    const skipFirstToken: boolean = selector.charCodeAt(1) !== 94; /* '^' */\n    const skipLastToken: boolean = selector.charCodeAt(selector.length - 1) !== 36; /* '$' */\n    tokenizeInPlace(selector.slice(1, selector.length - 1), skipFirstToken, skipLastToken, tokens);\n  } else {\n    // Tokenize prefix\n    if (begin > 1) {\n      tokenizeInPlace(\n        selector.slice(1, begin),\n        selector.charCodeAt(1) !== 94 /* '^' */, // skipFirstToken\n        true,\n        tokens,\n      );\n    }\n\n    // Tokenize suffix\n    if (end < selector.length - 1) {\n      tokenizeInPlace(\n        selector.slice(end + 1, selector.length - 1),\n        true,\n        selector.charCodeAt(selector.length - 1) !== 94 /* '^' */, // skipLastToken\n        tokens,\n      );\n    }\n  }\n}\n\nexport function binSearch(arr: Uint32Array, elt: number): number {\n  if (arr.length === 0) {\n    return -1;\n  }\n\n  let low = 0;\n  let high = arr.length - 1;\n\n  while (low <= high) {\n    const mid = (low + high) >>> 1;\n    const midVal = arr[mid];\n    if (midVal < elt) {\n      low = mid + 1;\n    } else if (midVal > elt) {\n      high = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n}\n\nexport function binLookup(arr: Uint32Array, elt: number): boolean {\n  return binSearch(arr, elt) !== -1;\n}\n\nconst hasUnicodeRe = /[^\\u0000-\\u00ff]/;\nexport function hasUnicode(str: string): boolean {\n  return hasUnicodeRe.test(str);\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport guessUrlType from '@remusao/guess-url-type';\nimport { parse } from 'tldts-experimental';\n\nimport { EMPTY_UINT32_ARRAY } from './data-view';\nimport { TOKENS_BUFFER } from './tokens-buffer';\nimport { fastHash, tokenizeNoSkipInPlace, HASH_SEED } from './utils';\n\nconst TLDTS_OPTIONS = {\n  extractHostname: true,\n  mixedInputs: false,\n  validateHostname: false,\n};\n\n// From: https://github.com/electron/electron/blob/34c4c8d5088fa183f56baea28809de6f2a427e02/shell/browser/net/atom_network_delegate.cc#L30\nexport type ElectronRequestType =\n  | 'mainFrame'\n  | 'subFrame'\n  | 'stylesheet'\n  | 'script'\n  | 'image'\n  | 'font'\n  | 'object'\n  | 'xhr'\n  | 'ping'\n  | 'cspReport'\n  | 'media'\n  | 'webSocket'\n  | 'other';\n\n// From: https://github.com/DefinitelyTyped/DefinitelyTyped/blob/7f3549ed0050f2ca8d7fcc00c33eba21f0cbdd88/types/puppeteer/index.d.ts#L945\nexport type PuppeteerRequestType =\n  | 'cspviolationreport'\n  | 'document'\n  | 'eventsource'\n  | 'fetch'\n  | 'font'\n  | 'image'\n  | 'manifest'\n  | 'media'\n  | 'other'\n  | 'preflight'\n  | 'script'\n  | 'signedexchange'\n  | 'stylesheet'\n  | 'texttrack'\n  | 'websocket'\n  | 'xhr';\n\nexport type PlaywrightRequestType =\n  | 'document'\n  | 'eventsource'\n  | 'fetch'\n  | 'font'\n  | 'image'\n  | 'manifest'\n  | 'media'\n  | 'other'\n  | 'script'\n  | 'stylesheet'\n  | 'texttrack'\n  | 'websocket'\n  | 'xhr';\n\n// From: https://developer.chrome.com/extensions/webRequest#type-ResourceType\nexport type WebRequestTypeChrome = chrome.webRequest.ResourceType;\n\n// From: https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/ResourceType#Type\nexport type WebRequestTypeFirefox = browser.webRequest.ResourceType;\n\n// The set of WebRequest types is the union of both Firefox and Chrome\nexport type WebRequestType = WebRequestTypeChrome | WebRequestTypeFirefox;\n\n// The set of supported types is the union of WebRequest\nexport type RequestType =\n  | WebRequestType\n  | ElectronRequestType\n  | PuppeteerRequestType\n  | PlaywrightRequestType;\n\nexport const NORMALIZED_TYPE_TOKEN: { [s in RequestType]: number } = {\n  beacon: fastHash('type:beacon'),\n  cspReport: fastHash('type:csp'),\n  csp_report: fastHash('type:csp'),\n  cspviolationreport: fastHash('type:cspviolationreport'),\n  document: fastHash('type:document'),\n  eventsource: fastHash('type:other'),\n  fetch: fastHash('type:xhr'),\n  font: fastHash('type:font'),\n  image: fastHash('type:image'),\n  imageset: fastHash('type:image'),\n  mainFrame: fastHash('type:document'),\n  main_frame: fastHash('type:document'),\n  manifest: fastHash('type:other'),\n  media: fastHash('type:media'),\n  object: fastHash('type:object'),\n  object_subrequest: fastHash('type:object'),\n  other: fastHash('type:other'),\n  ping: fastHash('type:ping'),\n  preflight: fastHash('type:preflight'),\n  script: fastHash('type:script'),\n  signedexchange: fastHash('type:signedexchange'),\n  speculative: fastHash('type:other'),\n  stylesheet: fastHash('type:stylesheet'),\n  subFrame: fastHash('type:subdocument'),\n  sub_frame: fastHash('type:subdocument'),\n  texttrack: fastHash('type:other'),\n  webSocket: fastHash('type:websocket'),\n  web_manifest: fastHash('type:other'),\n  websocket: fastHash('type:websocket'),\n  xhr: fastHash('type:xhr'),\n  xml_dtd: fastHash('type:other'),\n  xmlhttprequest: fastHash('type:xhr'),\n  xslt: fastHash('type:other'),\n};\n\nexport function hashHostnameBackward(hostname: string): number {\n  let hash = HASH_SEED;\n  for (let j = hostname.length - 1; j >= 0; j -= 1) {\n    hash = (hash * 33) ^ hostname.charCodeAt(j);\n  }\n  return hash >>> 0;\n}\n\nexport function getHashesFromLabelsBackward(\n  hostname: string,\n  end: number,\n  startOfDomain: number,\n): Uint32Array {\n  TOKENS_BUFFER.reset();\n  let hash = HASH_SEED;\n\n  // Compute hash backward, label per label\n  for (let i = end - 1; i >= 0; i -= 1) {\n    const code = hostname.charCodeAt(i);\n\n    // Process label\n    if (code === 46 /* '.' */ && i < startOfDomain) {\n      TOKENS_BUFFER.push(hash >>> 0);\n    }\n\n    // Update hash\n    hash = (hash * 33) ^ code;\n  }\n\n  TOKENS_BUFFER.push(hash >>> 0);\n  return TOKENS_BUFFER.slice();\n}\n\n/**\n * Given a hostname and its domain, return the hostname without the public\n * suffix. We know that the domain, with one less label on the left, will be a\n * the public suffix; and from there we know which trailing portion of\n * `hostname` we should remove.\n */\nexport function getHostnameWithoutPublicSuffix(hostname: string, domain: string): string | null {\n  let hostnameWithoutPublicSuffix: string | null = null;\n\n  const indexOfDot = domain.indexOf('.');\n  if (indexOfDot !== -1) {\n    const publicSuffix = domain.slice(indexOfDot + 1);\n    hostnameWithoutPublicSuffix = hostname.slice(0, -publicSuffix.length - 1);\n  }\n\n  return hostnameWithoutPublicSuffix;\n}\n\nexport function getEntityHashesFromLabelsBackward(hostname: string, domain: string): Uint32Array {\n  const hostnameWithoutPublicSuffix = getHostnameWithoutPublicSuffix(hostname, domain);\n  if (hostnameWithoutPublicSuffix !== null) {\n    return getHashesFromLabelsBackward(\n      hostnameWithoutPublicSuffix,\n      hostnameWithoutPublicSuffix.length,\n      hostnameWithoutPublicSuffix.length,\n    );\n  }\n  return EMPTY_UINT32_ARRAY;\n}\n\nexport function getHostnameHashesFromLabelsBackward(\n  hostname: string,\n  domain: string,\n): Uint32Array {\n  return getHashesFromLabelsBackward(hostname, hostname.length, hostname.length - domain.length);\n}\n\nfunction isThirdParty(\n  hostname: string,\n  domain: string,\n  sourceHostname: string,\n  sourceDomain: string,\n  type: RequestType,\n): boolean {\n  if (type === 'main_frame' || type === 'mainFrame') {\n    return false;\n  } else if (domain.length !== 0 && sourceDomain.length !== 0) {\n    return domain !== sourceDomain;\n  } else if (domain.length !== 0 && sourceHostname.length !== 0) {\n    return domain !== sourceHostname;\n  } else if (sourceDomain.length !== 0 && hostname.length !== 0) {\n    return hostname !== sourceDomain;\n  }\n\n  return false;\n}\n\nexport interface RequestInitialization {\n  requestId: string;\n  tabId: number;\n\n  url: string;\n  hostname: string;\n  domain: string;\n\n  sourceUrl: string;\n  sourceHostname: string;\n  sourceDomain: string;\n\n  type: RequestType;\n\n  // Optional attribute referencing the original request details used to create\n  // the Request instance. This can be for example:\n  // * Electron.OnHeadersReceivedListenerDetails\n  // * Electron.OnBeforeRequestListenerDetails\n  // * puppeteer.Request\n  // * webRequest details\n  _originalRequestDetails: any | undefined;\n}\n\nexport default class Request {\n  /**\n   * Create an instance of `Request` from raw request details.\n   */\n  public static fromRawDetails({\n    requestId = '0',\n    tabId = 0,\n    url = '',\n    hostname,\n    domain,\n    sourceUrl = '',\n    sourceHostname,\n    sourceDomain,\n    type = 'main_frame',\n    _originalRequestDetails,\n  }: Partial<RequestInitialization>): Request {\n    url = url.toLowerCase();\n\n    if (hostname === undefined || domain === undefined) {\n      const parsed = parse(url, TLDTS_OPTIONS);\n      hostname = hostname || parsed.hostname || '';\n      domain = domain || parsed.domain || '';\n    }\n\n    // Initialize source URL\n    if (sourceHostname === undefined || sourceDomain === undefined) {\n      const parsed = parse(sourceHostname || sourceDomain || sourceUrl, TLDTS_OPTIONS);\n      sourceHostname = sourceHostname || parsed.hostname || '';\n      sourceDomain = sourceDomain || parsed.domain || sourceHostname || '';\n    }\n\n    return new Request({\n      requestId,\n      tabId,\n\n      domain,\n      hostname,\n      url,\n\n      sourceDomain,\n      sourceHostname,\n      sourceUrl,\n\n      type,\n\n      _originalRequestDetails,\n    });\n  }\n\n  public readonly _originalRequestDetails: any | undefined;\n\n  public type: RequestType;\n  public readonly isHttp: boolean;\n  public readonly isHttps: boolean;\n  public readonly isSupported: boolean;\n  public readonly isFirstParty: boolean;\n  public readonly isThirdParty: boolean;\n\n  public readonly id: string;\n  public readonly tabId: number;\n  public readonly url: string;\n  public readonly hostname: string;\n  public readonly domain: string;\n\n  public readonly sourceHostnameHashes: Uint32Array;\n  public readonly sourceEntityHashes: Uint32Array;\n\n  // Lazy attributes\n  private tokens: Uint32Array | undefined = undefined;\n  private hostnameHashes: Uint32Array | undefined = undefined;\n  private entityHashes: Uint32Array | undefined = undefined;\n\n  constructor({\n    requestId,\n    tabId,\n\n    type,\n\n    domain,\n    hostname,\n    url,\n\n    sourceDomain,\n    sourceHostname,\n\n    _originalRequestDetails,\n  }: RequestInitialization) {\n    this._originalRequestDetails = _originalRequestDetails;\n    this.id = requestId;\n    this.tabId = tabId;\n    this.type = type;\n\n    this.url = url;\n    this.hostname = hostname;\n    this.domain = domain;\n\n    this.sourceHostnameHashes =\n      sourceHostname.length === 0\n        ? EMPTY_UINT32_ARRAY\n        : getHostnameHashesFromLabelsBackward(sourceHostname, sourceDomain);\n\n    this.sourceEntityHashes =\n      sourceHostname.length === 0\n        ? EMPTY_UINT32_ARRAY\n        : getEntityHashesFromLabelsBackward(sourceHostname, sourceDomain);\n\n    // Decide on partiness\n    this.isThirdParty = isThirdParty(hostname, domain, sourceHostname, sourceDomain, type);\n    this.isFirstParty = !this.isThirdParty;\n\n    // Check protocol\n    this.isSupported = true;\n    if (this.type === 'websocket' || this.url.startsWith('ws:') || this.url.startsWith('wss:')) {\n      this.isHttp = false;\n      this.isHttps = false;\n      this.type = 'websocket';\n      this.isSupported = true;\n    } else if (this.url.startsWith('http:')) {\n      this.isHttp = true;\n      this.isHttps = false;\n    } else if (this.url.startsWith('https:')) {\n      this.isHttps = true;\n      this.isHttp = false;\n    } else if (this.url.startsWith('data:')) {\n      this.isHttp = false;\n      this.isHttps = false;\n\n      // Only keep prefix of URL\n      const indexOfComa = this.url.indexOf(',');\n      if (indexOfComa !== -1) {\n        this.url = this.url.slice(0, indexOfComa);\n      }\n    } else {\n      this.isHttp = false;\n      this.isHttps = false;\n      this.isSupported = false;\n    }\n  }\n\n  public getHostnameHashes(): Uint32Array {\n    if (this.hostnameHashes === undefined) {\n      this.hostnameHashes =\n        this.hostname.length === 0\n          ? EMPTY_UINT32_ARRAY\n          : getHostnameHashesFromLabelsBackward(this.hostname, this.domain);\n    }\n\n    return this.hostnameHashes;\n  }\n\n  public getEntityHashes(): Uint32Array {\n    if (this.entityHashes === undefined) {\n      this.entityHashes =\n        this.hostname.length === 0\n          ? EMPTY_UINT32_ARRAY\n          : getEntityHashesFromLabelsBackward(this.hostname, this.domain);\n    }\n\n    return this.entityHashes;\n  }\n\n  public getTokens(): Uint32Array {\n    if (this.tokens === undefined) {\n      TOKENS_BUFFER.reset();\n\n      for (const hash of this.sourceHostnameHashes) {\n        TOKENS_BUFFER.push(hash);\n      }\n\n      // Add token corresponding to request type\n      TOKENS_BUFFER.push(NORMALIZED_TYPE_TOKEN[this.type]);\n\n      tokenizeNoSkipInPlace(this.url, TOKENS_BUFFER);\n\n      this.tokens = TOKENS_BUFFER.slice();\n    }\n\n    return this.tokens;\n  }\n\n  public isMainFrame(): boolean {\n    return this.type === 'main_frame' || this.type === 'mainFrame';\n  }\n\n  public isSubFrame(): boolean {\n    return this.type === 'sub_frame' || this.type === 'subFrame';\n  }\n\n  /**\n   * Calling this method will attempt to guess the type of a request based on\n   * information found in `url` only. This can be useful to try and fine-tune\n   * the type of a Request when it is not otherwise available or if it was\n   * inferred as 'other'.\n   */\n  public guessTypeOfRequest(): RequestType {\n    const currentType = this.type;\n    this.type = guessUrlType(this.url);\n    if (currentType !== this.type) {\n      this.tokens = undefined;\n    }\n    return this.type;\n  }\n}\n\n/**\n * Kept for backward compatibility. The recommended way is to call\n * `Request.fromRawDetails` directly.\n */\nexport function makeRequest(details: Partial<RequestInitialization>): Request {\n  return Request.fromRawDetails(details);\n}\n",null,null,"/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { hashHostnameBackward } from '../request';\nimport { toASCII } from '../punycode';\nimport { StaticDataView, sizeOfUint32Array } from '../data-view';\nimport { binLookup, hasUnicode } from '../utils';\n\nexport class Domains {\n  public static parse(parts: string[]): Domains | undefined {\n    if (parts.length === 0) {\n      return undefined;\n    }\n\n    const entities: number[] = [];\n    const notEntities: number[] = [];\n    const hostnames: number[] = [];\n    const notHostnames: number[] = [];\n\n    for (let hostname of parts) {\n      if (hasUnicode(hostname)) {\n        hostname = toASCII(hostname);\n      }\n\n      const negation: boolean = hostname.charCodeAt(0) === 126; /* '~' */\n      const entity: boolean =\n        hostname.charCodeAt(hostname.length - 1) === 42 /* '*' */ &&\n        hostname.charCodeAt(hostname.length - 2) === 46; /* '.' */\n\n      const start: number = negation ? 1 : 0;\n      const end: number = entity ? hostname.length - 2 : hostname.length;\n\n      const hash = hashHostnameBackward(\n        negation === true || entity === true ? hostname.slice(start, end) : hostname,\n      );\n\n      if (negation) {\n        if (entity) {\n          notEntities.push(hash);\n        } else {\n          notHostnames.push(hash);\n        }\n      } else {\n        if (entity) {\n          entities.push(hash);\n        } else {\n          hostnames.push(hash);\n        }\n      }\n    }\n\n    return new Domains({\n      entities: entities.length !== 0 ? new Uint32Array(entities).sort() : undefined,\n      hostnames: hostnames.length !== 0 ? new Uint32Array(hostnames).sort() : undefined,\n      notEntities: notEntities.length !== 0 ? new Uint32Array(notEntities).sort() : undefined,\n      notHostnames: notHostnames.length !== 0 ? new Uint32Array(notHostnames).sort() : undefined,\n    });\n  }\n\n  public static deserialize(buffer: StaticDataView): Domains {\n    const optionalParts = buffer.getUint8();\n\n    // The order of these fields should be the same as when we serialize them.\n    return new Domains({\n      entities: (optionalParts & 1) === 1 ? buffer.getUint32Array() : undefined,\n      hostnames: (optionalParts & 2) === 2 ? buffer.getUint32Array() : undefined,\n      notEntities: (optionalParts & 4) === 4 ? buffer.getUint32Array() : undefined,\n      notHostnames: (optionalParts & 8) === 8 ? buffer.getUint32Array() : undefined,\n    });\n  }\n\n  // hostnames\n  public readonly entities: Uint32Array | undefined;\n  public readonly hostnames: Uint32Array | undefined;\n\n  // Exceptions\n  public readonly notEntities: Uint32Array | undefined;\n  public readonly notHostnames: Uint32Array | undefined;\n\n  constructor({\n    entities,\n    hostnames,\n    notEntities,\n    notHostnames,\n  }: {\n    entities: Uint32Array | undefined;\n    hostnames: Uint32Array | undefined;\n    notEntities: Uint32Array | undefined;\n    notHostnames: Uint32Array | undefined;\n  }) {\n    // Hostname constraints\n    this.entities = entities;\n    this.hostnames = hostnames;\n\n    // Hostname exceptions\n    this.notEntities = notEntities;\n    this.notHostnames = notHostnames;\n  }\n\n  public updateId(hash: number): number {\n    const { hostnames, entities, notHostnames, notEntities } = this;\n\n    if (hostnames !== undefined) {\n      for (const hostname of hostnames) {\n        hash = (hash * 33) ^ hostname;\n      }\n    }\n\n    if (entities !== undefined) {\n      for (const entity of entities) {\n        hash = (hash * 33) ^ entity;\n      }\n    }\n\n    if (notHostnames !== undefined) {\n      for (const notHostname of notHostnames) {\n        hash = (hash * 33) ^ notHostname;\n      }\n    }\n\n    if (notEntities !== undefined) {\n      for (const notEntity of notEntities) {\n        hash = (hash * 33) ^ notEntity;\n      }\n    }\n\n    return hash;\n  }\n\n  public serialize(buffer: StaticDataView): void {\n    // Mandatory fields\n    const index = buffer.getPos();\n    buffer.pushUint8(0);\n\n    // This bit-mask indicates which optional parts of the filter were serialized.\n    let optionalParts = 0;\n\n    if (this.entities !== undefined) {\n      optionalParts |= 1;\n      buffer.pushUint32Array(this.entities);\n    }\n\n    if (this.hostnames !== undefined) {\n      optionalParts |= 2;\n      buffer.pushUint32Array(this.hostnames);\n    }\n\n    if (this.notEntities !== undefined) {\n      optionalParts |= 4;\n      buffer.pushUint32Array(this.notEntities);\n    }\n\n    if (this.notHostnames !== undefined) {\n      optionalParts |= 8;\n      buffer.pushUint32Array(this.notHostnames);\n    }\n\n    buffer.setByte(index, optionalParts);\n  }\n\n  public getSerializedSize(): number {\n    let estimate: number = 1; // optional parts (1 byte)\n\n    if (this.entities !== undefined) {\n      estimate += sizeOfUint32Array(this.entities);\n    }\n\n    if (this.hostnames !== undefined) {\n      estimate += sizeOfUint32Array(this.hostnames);\n    }\n\n    if (this.notHostnames !== undefined) {\n      estimate += sizeOfUint32Array(this.notHostnames);\n    }\n\n    if (this.notEntities !== undefined) {\n      estimate += sizeOfUint32Array(this.notEntities);\n    }\n\n    return estimate;\n  }\n\n  public match(hostnameHashes: Uint32Array, entityHashes: Uint32Array): boolean {\n    // Check if `hostname` is blacklisted\n    if (this.notHostnames !== undefined) {\n      for (const hash of hostnameHashes) {\n        if (binLookup(this.notHostnames, hash)) {\n          return false;\n        }\n      }\n    }\n\n    // Check if `hostname` is blacklisted by *entity*\n    if (this.notEntities !== undefined) {\n      for (const hash of entityHashes) {\n        if (binLookup(this.notEntities, hash)) {\n          return false;\n        }\n      }\n    }\n\n    // Check if `hostname` is allowed\n    if (this.hostnames !== undefined || this.entities !== undefined) {\n      if (this.hostnames !== undefined) {\n        for (const hash of hostnameHashes) {\n          if (binLookup(this.hostnames, hash)) {\n            return true;\n          }\n        }\n      }\n\n      if (this.entities !== undefined) {\n        for (const hash of entityHashes) {\n          if (binLookup(this.entities, hash)) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    }\n\n    return true;\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\n// This module implements an extremely efficient stream HTML filtering engine\n// which is able to consume an HTML document over time and filter part of it\n// using adblocker selectors.\n\nexport type HTMLSelector = readonly ['script', readonly string[]];\n\nexport function extractHTMLSelectorFromRule(rule: string): HTMLSelector | undefined {\n  if (rule.startsWith('^script') === false) {\n    return undefined;\n  }\n\n  const prefix = ':has-text(';\n  const selectors: string[] = [];\n\n  let index = 7;\n  // ^script:has-text\n  //        ^ 7\n\n  // Prepare for finding one or more ':has-text(' selectors in a row\n  while (rule.startsWith(prefix, index)) {\n    index += prefix.length;\n    let currentParsingDepth = 1;\n    const startOfSelectorIndex = index;\n    let prev = -1; // previous character\n    for (; index < rule.length && currentParsingDepth !== 0; index += 1) {\n      const code = rule.charCodeAt(index);\n\n      if (prev !== 92 /* '\\' */) {\n        if (code === 40 /* '(' */) {\n          currentParsingDepth += 1;\n        }\n\n        if (code === 41 /* ')' */) {\n          currentParsingDepth -= 1;\n        }\n      }\n\n      prev = code;\n    }\n\n    selectors.push(rule.slice(startOfSelectorIndex, index - 1));\n  }\n\n  if (index !== rule.length) {\n    return undefined;\n  }\n\n  return ['script', selectors];\n}\n\nexport function extractTagsFromHtml(\n  html: string,\n  tag: string,\n): [[number, string][], string, string] {\n  const tags: [number, string][] = [];\n  const prefix = `<${tag}`;\n  const suffix = `</${tag}>`;\n\n  // Keep track of the beginning of current identified tag\n  let index = html.indexOf(prefix);\n  // Keep tracks of index immediately following last extracted tag\n  let endOfLastTag = 0;\n\n  while (index !== -1) {\n    // Find index of end of current tag. If we do not find it, it could be\n    // because it will come in the next chunk and we should try parsing it\n    // again then.\n    const endOfTagIndex = html.indexOf('>', index + prefix.length);\n    if (endOfTagIndex === -1) {\n      return [tags, html.slice(0, index), html.slice(index)];\n    }\n\n    // Handle short tag form <tag/> which will not have a closing tag.\n    if (html.charCodeAt(endOfTagIndex - 1) === 47 /* '/' */) {\n      endOfLastTag = endOfTagIndex + 1;\n      tags.push([index, html.slice(index, endOfLastTag)]);\n    } else {\n      // Find index of closing tag '</tag>'. If we do not find it, again, it\n      // could mean that it will come in next chunk and we need to try parsing\n      // it again with more input.\n      const indexOfClosingTag = html.indexOf(suffix, endOfTagIndex);\n      if (indexOfClosingTag === -1) {\n        return [tags, html.slice(0, index), html.slice(index)];\n      }\n\n      tags.push([index, html.slice(index, indexOfClosingTag + suffix.length)]);\n      endOfLastTag = indexOfClosingTag + suffix.length;\n    }\n\n    index = html.indexOf(prefix, endOfLastTag);\n  }\n\n  // Make sure we consume as much input as possible so that we do not parse the\n  // same portion of HTML again next time and we can stream chunks as early as\n  // possible.\n  //\n  // We check if there is at least one '<' char after the end of the last\n  // extracted tag; this would indicate that the next chunk might contain the\n  // remaining of a valid tag. We then look up to N characters after this '<'\n  // character, where N is the size of 'prefix'. The rational is that if we\n  // reached this part of the code, then it cannot be a match otherwise we\n  // would have returned earlier (from the loop).\n  let lastClosingTagIndex = html.lastIndexOf('>');\n  if (lastClosingTagIndex === -1) {\n    lastClosingTagIndex = endOfLastTag;\n  }\n\n  const indexOfNextTag = html.indexOf('<', lastClosingTagIndex);\n  // If no '<' in the remaining of input, then it means we can count this chunk\n  // as fully parsed (i.e.: next chunk can be parsed independently without\n  // missing a tag which would start in this one).\n  if (indexOfNextTag === -1) {\n    return [tags, html, ''];\n  }\n\n  // In case of a partial tag ending this 'html' chunk. Then check if we have\n  // enough information to discard it already based on the kind of tags we are\n  // looking for.\n  if (\n    html.length - indexOfNextTag >= prefix.length ||\n    prefix.startsWith(html.slice(indexOfNextTag)) === false\n  ) {\n    return [tags, html, ''];\n  }\n\n  return [tags, html.slice(0, indexOfNextTag), html.slice(indexOfNextTag)];\n}\n\ntype Patterns = readonly [readonly string[], readonly RegExp[]][];\n\nexport function extractSelectorsFromRules(filter: HTMLSelector[]): Patterns {\n  const patterns: [string[], RegExp[]][] = [];\n\n  for (const [_, selectors] of filter) {\n    const plainPatterns: string[] = [];\n    const regexpPatterns: RegExp[] = [];\n\n    for (const selector of selectors) {\n      if (selector.charCodeAt(0) === 47 /* '/' */) {\n        if (selector.endsWith('/')) {\n          regexpPatterns.push(new RegExp(selector.slice(1, -1)));\n        } else if (selector.endsWith('/i')) {\n          regexpPatterns.push(new RegExp(selector.slice(1, -2), 'i'));\n        }\n      } else {\n        plainPatterns.push(selector);\n      }\n    }\n\n    if (plainPatterns.length !== 0 || regexpPatterns.length !== 0) {\n      patterns.push([plainPatterns, regexpPatterns]);\n    }\n  }\n\n  return patterns;\n}\n\n/**\n * Check if `tag` should be removed from HTML based on `plainPatterns` and\n * `regexpPatterns`. For a tag to be removed, all elements from `plainPatterns`\n * and `regexpPatterns` must match.\n */\nfunction tagShouldBeRemoved(\n  tag: string,\n  plainPatterns: readonly string[],\n  regexpPatterns: readonly RegExp[],\n): boolean {\n  for (const pattern of plainPatterns) {\n    if (tag.indexOf(pattern) === -1) {\n      return false;\n    }\n  }\n\n  for (const pattern of regexpPatterns) {\n    if (pattern.test(tag) === false) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function selectTagsToRemove(\n  patterns: Patterns,\n  tags: [number, string][],\n): [number, string][] {\n  const toRemove: [number, string][] = [];\n\n  for (const tag of tags) {\n    for (const [plainPatterns, regexpPatterns] of patterns) {\n      if (tagShouldBeRemoved(tag[1], plainPatterns, regexpPatterns)) {\n        toRemove.push(tag);\n        break;\n      }\n    }\n  }\n\n  return toRemove;\n}\n\nexport function removeTagsFromHtml(html: string, toRemove: [number, string][]): string {\n  if (toRemove.length === 0) {\n    return html;\n  }\n\n  let filteredHtml = html;\n  toRemove.reverse(); // make sure to remove from last to first tag (preserve indices)\n  for (const [index, tag] of toRemove) {\n    filteredHtml = filteredHtml.slice(0, index) + filteredHtml.slice(index + tag.length);\n  }\n\n  return filteredHtml;\n}\n\nexport default class StreamingHtmlFilter {\n  private buffer: string;\n  private readonly patterns: Patterns;\n\n  constructor(selectors: HTMLSelector[]) {\n    this.buffer = '';\n    this.patterns = extractSelectorsFromRules(selectors);\n  }\n\n  public flush(): string {\n    return this.buffer;\n  }\n\n  public write(chunk: string): string {\n    // If there are no valid selectors, abort.\n    if (this.patterns.length === 0) {\n      return chunk;\n    }\n\n    // If given an empty string, abort.\n    if (chunk.length === 0) {\n      return chunk;\n    }\n\n    // Accumulate buffer + new data\n    this.buffer += chunk;\n\n    // Parse tags from `this.buffer`\n    const [tags, parsed, rest] = extractTagsFromHtml(this.buffer, 'script');\n    this.buffer = rest;\n\n    // If no tags were found, just return the parsed version\n    if (tags.length === 0) {\n      return parsed;\n    }\n\n    // Perform tags filtering using `this.patterns` and `this.regexps`.\n    return removeTagsFromHtml(parsed, selectTagsToRemove(this.patterns, tags));\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport {\n  AST,\n  classifySelector,\n  SelectorType,\n  parse as parseCssSelector,\n} from '@cliqz/adblocker-extended-selectors';\n\nimport { Domains } from '../engine/domains';\nimport {\n  EMPTY_UINT32_ARRAY,\n  StaticDataView,\n  sizeOfASCII,\n  sizeOfCosmeticSelector,\n  sizeOfUTF8,\n  sizeOfRawCosmetic,\n} from '../data-view';\nimport {\n  getHostnameHashesFromLabelsBackward,\n  getEntityHashesFromLabelsBackward,\n} from '../request';\nimport {\n  fastHash,\n  fastHashBetween,\n  fastStartsWithFrom,\n  getBit,\n  hasUnicode,\n  setBit,\n  tokenize,\n} from '../utils';\nimport IFilter from './interface';\nimport { HTMLSelector, extractHTMLSelectorFromRule } from '../html-filtering';\n\nconst EMPTY_TOKENS: [Uint32Array] = [EMPTY_UINT32_ARRAY];\nexport const DEFAULT_HIDDING_STYLE: string = 'display: none !important;';\n\n/**\n * Given a `selector` starting with either '#' or '.' check if what follows is\n * a simple CSS selector: /^-?[_a-zA-Z]+[_a-zA-Z0-9-]*$/\n */\nfunction isSimpleSelector(selector: string): boolean {\n  for (let i = 1; i < selector.length; i += 1) {\n    const code: number = selector.charCodeAt(i);\n    if (\n      !(\n        code === 45 /* '-' */ ||\n        code === 95 /* '_' */ ||\n        (code >= 48 && code <= 57) /* [0-9] */ ||\n        (code >= 65 && code <= 90) /* [A-Z] */ ||\n        (code >= 97 && code <= 122)\n      ) /* [a-z] */\n    ) {\n      if (i < selector.length - 1) {\n        // Check if what follows is a ' >' or ' ~' or ' +', in which case we\n        // also consider it a simple selector and the token this filter can be\n        // indexed with is the first selector.\n        const nextCode = selector.charCodeAt(i + 1);\n        if (\n          code === 91 /* '[' */ ||\n          code === 46 /* '.' */ ||\n          code === 58 /* ':' */ ||\n          (code === 32 /* ' ' */ &&\n            (nextCode === 62 /* '>' */ ||\n              nextCode === 43 /* '+' */ ||\n              nextCode === 126 /* '~' */ ||\n              nextCode === 46 /* '.' */ ||\n              nextCode === 35)) /* '#' */\n        ) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Given a `selector` starting with either 'a[' or '[', check if what follows\n * is a simple href attribute selector of the form: 'href^=' or 'href*='.\n */\nfunction isSimpleHrefSelector(selector: string, start: number): boolean {\n  return (\n    selector.startsWith('href^=\"', start) ||\n    selector.startsWith('href*=\"', start) ||\n    selector.startsWith('href=\"', start)\n  );\n}\n\n/**\n * Validate CSS selector. There is a fast path for simple selectors (e.g.: #foo\n * or .bar) which are the most common case. For complex ones, we rely on\n * `Element.matches` (if available).\n */\nconst isValidCss = (() => {\n  const div =\n    typeof document !== 'undefined'\n      ? document.createElement('div')\n      : {\n          matches: () => {\n            /* noop */\n          },\n        };\n  const matches = (selector: string): void | boolean => div.matches(selector);\n  const validSelectorRe = /^[#.]?[\\w-.]+$/;\n\n  return function isValidCssImpl(selector: string): boolean {\n    if (validSelectorRe.test(selector)) {\n      return true;\n    }\n\n    try {\n      matches(selector);\n    } catch (ex) {\n      return false;\n    }\n\n    return true;\n  };\n})();\n\n/**\n * Masks used to store options of cosmetic filters in a bitmask.\n */\nconst enum COSMETICS_MASK {\n  unhide = 1 << 0,\n  scriptInject = 1 << 1,\n  isUnicode = 1 << 2,\n  isClassSelector = 1 << 3,\n  isIdSelector = 1 << 4,\n  isHrefSelector = 1 << 5,\n  remove = 1 << 6,\n  extended = 1 << 7,\n}\n\nfunction computeFilterId(\n  mask: number,\n  selector: string | undefined,\n  domains: Domains | undefined,\n  style: string | undefined,\n): number {\n  let hash = (5437 * 33) ^ mask;\n\n  if (selector !== undefined) {\n    for (let i = 0; i < selector.length; i += 1) {\n      hash = (hash * 33) ^ selector.charCodeAt(i);\n    }\n  }\n\n  if (domains !== undefined) {\n    hash = domains.updateId(hash);\n  }\n\n  if (style !== undefined) {\n    for (let i = 0; i < style.length; i += 1) {\n      hash = (hash * 33) ^ style.charCodeAt(i);\n    }\n  }\n\n  return hash >>> 0;\n}\n\n/***************************************************************************\n *  Cosmetic filters parsing\n * ************************************************************************ */\n\nexport default class CosmeticFilter implements IFilter {\n  /**\n   * Given a line that we know contains a cosmetic filter, create a CosmeticFiler\n   * instance out of it. This function should be *very* efficient, as it will be\n   * used to parse tens of thousands of lines.\n   */\n  public static parse(line: string, debug: boolean = false): CosmeticFilter | null {\n    // Mask to store attributes. Each flag (unhide, scriptInject, etc.) takes\n    // only 1 bit at a specific offset defined in COSMETICS_MASK.\n    // cf: COSMETICS_MASK for the offset of each property\n    let mask = 0;\n    let selector: string | undefined;\n    let domains: Domains | undefined;\n    let style: string | undefined;\n    const sharpIndex = line.indexOf('#');\n\n    // Start parsing the line\n    const afterSharpIndex = sharpIndex + 1;\n    let suffixStartIndex = afterSharpIndex + 1;\n\n    // hostname1,hostname2#?#.selector\n    // hostname1,hostname2#@#.selector\n    //                    ^^ ^\n    //                    || |\n    //                    || suffixStartIndex\n    //                    |afterSharpIndex\n    //                    sharpIndex\n\n    // Check if unhide\n    if (line.length > afterSharpIndex) {\n      if (line[afterSharpIndex] === '@') {\n        mask = setBit(mask, COSMETICS_MASK.unhide);\n        suffixStartIndex += 1;\n      } else if (line[afterSharpIndex] === '?') {\n        suffixStartIndex += 1;\n      }\n    }\n\n    if (suffixStartIndex >= line.length) {\n      return null;\n    }\n\n    // Parse hostnames and entitites as well as their negations.\n    //\n    // - ~hostname##.selector\n    // - hostname##.selector\n    // - entity.*##.selector\n    // - ~entity.*##.selector\n    //\n    // Each kind will have its own Uint32Array containing hashes, sorted by\n    // number of labels considered. This allows a compact representation of\n    // hostnames and fast matching without any string copy.\n    if (sharpIndex > 0) {\n      domains = Domains.parse(line.slice(0, sharpIndex).split(','));\n    }\n\n    if (line.endsWith(':remove()')) {\n      // ##selector:remove()\n      mask = setBit(mask, COSMETICS_MASK.remove);\n      mask = setBit(mask, COSMETICS_MASK.extended);\n      line = line.slice(0, -9);\n    } else if (\n      line.length - suffixStartIndex >= 8 &&\n      line.endsWith(')') &&\n      line.indexOf(':style(', suffixStartIndex) !== -1\n    ) {\n      // ##selector:style(...)\n      const indexOfStyle = line.indexOf(':style(', suffixStartIndex);\n      style = line.slice(indexOfStyle + 7, -1);\n      line = line.slice(0, indexOfStyle);\n    }\n\n    // Deal with HTML filters\n    if (line.charCodeAt(suffixStartIndex) === 94 /* '^' */) {\n      if (\n        fastStartsWithFrom(line, 'script:has-text(', suffixStartIndex + 1) === false ||\n        line.charCodeAt(line.length - 1) !== 41 /* ')' */\n      ) {\n        return null;\n      }\n\n      // NOTE: currently only ^script:has-text(...) is supported.\n      //\n      //   ^script:has-text(selector)\n      //   ^                         ^\n      //   |                         |\n      //   |                         |\n      //   |                         line.length\n      //   |\n      //   suffixStartIndex\n      //\n      selector = line.slice(suffixStartIndex, line.length);\n      if (extractHTMLSelectorFromRule(selector) === undefined) {\n        return null;\n      }\n    } else if (\n      line.length - suffixStartIndex > 4 &&\n      line.charCodeAt(suffixStartIndex) === 43 /* '+' */ &&\n      fastStartsWithFrom(line, '+js(', suffixStartIndex)\n    ) {\n      // Generic scriptlets are invalid, unless they are un-hide\n      if (\n        (domains === undefined ||\n          (domains.hostnames === undefined && domains.entities === undefined)) &&\n        getBit(mask, COSMETICS_MASK.unhide) === false\n      ) {\n        return null;\n      }\n\n      mask = setBit(mask, COSMETICS_MASK.scriptInject);\n      selector = line.slice(suffixStartIndex + 4, line.length - 1);\n\n      // An empty scriptlet (i.e. '+js()') can be specified to cancel injections\n      // on a specific domain or globally. It does not make sense though to have\n      // an empty scriptlet without an exception (i.e. '#@#' is mandatory).\n      if (getBit(mask, COSMETICS_MASK.unhide) === false && selector.length === 0) {\n        return null;\n      }\n    } else {\n      selector = line.slice(suffixStartIndex);\n      const selectorType = classifySelector(selector);\n      if (selectorType === SelectorType.Extended) {\n        mask = setBit(mask, COSMETICS_MASK.extended);\n      } else if (selectorType === SelectorType.Invalid || !isValidCss(selector)) {\n        // console.error('Invalid', line);\n        // TODO - maybe perform `isValidCss` from the other module.\n        return null;\n      }\n    }\n\n    // Extended selectors should always be specific to some domain.\n    if (domains === undefined && getBit(mask, COSMETICS_MASK.extended) === true) {\n      return null;\n    }\n\n    if (selector !== undefined) {\n      // Check if unicode appears in selector\n      if (hasUnicode(selector)) {\n        mask = setBit(mask, COSMETICS_MASK.isUnicode);\n      }\n\n      // Classify selector\n      if (\n        getBit(mask, COSMETICS_MASK.scriptInject) === false &&\n        getBit(mask, COSMETICS_MASK.remove) === false &&\n        getBit(mask, COSMETICS_MASK.extended) === false &&\n        selector.startsWith('^') === false\n      ) {\n        const c0 = selector.charCodeAt(0);\n        const c1 = selector.charCodeAt(1);\n        const c2 = selector.charCodeAt(2);\n\n        // Check if we have a specific case of simple selector (id, class or\n        // href) These are the most common filters and will benefit greatly from\n        // a custom dispatch mechanism.\n        if (getBit(mask, COSMETICS_MASK.scriptInject) === false) {\n          if (c0 === 46 /* '.' */ && isSimpleSelector(selector)) {\n            mask = setBit(mask, COSMETICS_MASK.isClassSelector);\n          } else if (c0 === 35 /* '#' */ && isSimpleSelector(selector)) {\n            mask = setBit(mask, COSMETICS_MASK.isIdSelector);\n          } else if (\n            c0 === 97 /* a */ &&\n            c1 === 91 /* '[' */ &&\n            c2 === 104 /* 'h' */ &&\n            isSimpleHrefSelector(selector, 2)\n          ) {\n            mask = setBit(mask, COSMETICS_MASK.isHrefSelector);\n          } else if (\n            c0 === 91 /* '[' */ &&\n            c1 === 104 /* 'h' */ &&\n            isSimpleHrefSelector(selector, 1)\n          ) {\n            mask = setBit(mask, COSMETICS_MASK.isHrefSelector);\n          }\n        }\n      }\n    }\n\n    return new CosmeticFilter({\n      mask,\n      rawLine: debug === true ? line : undefined,\n      selector,\n      style,\n      domains,\n    });\n  }\n\n  /**\n   * Deserialize cosmetic filters. The code accessing the buffer should be\n   * symetrical to the one in `serializeCosmeticFilter`.\n   */\n  public static deserialize(buffer: StaticDataView): CosmeticFilter {\n    const mask = buffer.getUint8();\n    const isUnicode = getBit(mask, COSMETICS_MASK.isUnicode);\n    const optionalParts = buffer.getUint8();\n    const selector = isUnicode ? buffer.getUTF8() : buffer.getCosmeticSelector();\n\n    // The order of these fields should be the same as when we serialize them.\n    return new CosmeticFilter({\n      // Mandatory fields\n      mask,\n      selector,\n\n      // Optional fields\n      domains: (optionalParts & 1) === 1 ? Domains.deserialize(buffer) : undefined,\n      rawLine: (optionalParts & 2) === 2 ? buffer.getRawCosmetic() : undefined,\n      style: (optionalParts & 4) === 4 ? buffer.getASCII() : undefined,\n    });\n  }\n\n  // Mandatory fields\n  public readonly mask: number;\n  public readonly selector: string;\n\n  public readonly domains: Domains | undefined;\n\n  public readonly style: string | undefined;\n  public readonly rawLine: string | undefined;\n\n  private id: number | undefined;\n\n  constructor({\n    mask,\n    selector,\n    domains,\n    rawLine,\n    style,\n  }: {\n    mask: number;\n    domains: Domains | undefined;\n    rawLine: string | undefined;\n    selector: string;\n    style: string | undefined;\n  }) {\n    this.mask = mask;\n    this.selector = selector;\n    this.domains = domains;\n    this.style = style;\n\n    this.id = undefined;\n    this.rawLine = rawLine;\n  }\n\n  public isCosmeticFilter(): boolean {\n    return true;\n  }\n\n  public isNetworkFilter(): boolean {\n    return false;\n  }\n\n  /**\n   * The format of a cosmetic filter is:\n   *\n   * | mask | selector length | selector... | hostnames length | hostnames...\n   *   32     16                              16\n   *\n   * The header (mask) is 32 bits, then we have a total of 32 bits to store the\n   * length of `selector` and `hostnames` (16 bits each).\n   *\n   * Improvements similar to the onces mentioned in `serializeNetworkFilters`\n   * could be applied here, to get a more compact representation.\n   */\n  public serialize(buffer: StaticDataView): void {\n    // Mandatory fields\n    buffer.pushUint8(this.mask);\n    const index = buffer.getPos();\n    buffer.pushUint8(0);\n\n    if (this.isUnicode()) {\n      buffer.pushUTF8(this.selector);\n    } else {\n      buffer.pushCosmeticSelector(this.selector);\n    }\n\n    // This bit-mask indicates which optional parts of the filter were serialized.\n    let optionalParts = 0;\n\n    if (this.domains !== undefined) {\n      optionalParts |= 1;\n      this.domains.serialize(buffer);\n    }\n\n    if (this.rawLine !== undefined) {\n      optionalParts |= 2;\n      buffer.pushRawCosmetic(this.rawLine);\n    }\n\n    if (this.style !== undefined) {\n      optionalParts |= 4;\n      buffer.pushASCII(this.style);\n    }\n\n    buffer.setByte(index, optionalParts);\n  }\n\n  /**\n   * Return an estimation of the size (in bytes) needed to persist this filter\n   * in a DataView. This does not need to be 100% accurate but should be an\n   * upper-bound. It should also be as fast as possible.\n   */\n  public getSerializedSize(compression: boolean): number {\n    let estimate: number = 1 + 1; // mask (1 byte) + optional parts (1 byte)\n\n    if (this.isUnicode()) {\n      estimate += sizeOfUTF8(this.selector);\n    } else {\n      estimate += sizeOfCosmeticSelector(this.selector, compression);\n    }\n\n    if (this.domains !== undefined) {\n      estimate += this.domains.getSerializedSize();\n    }\n\n    if (this.rawLine !== undefined) {\n      estimate += sizeOfRawCosmetic(this.rawLine, compression);\n    }\n\n    if (this.style !== undefined) {\n      estimate += sizeOfASCII(this.style);\n    }\n\n    return estimate;\n  }\n\n  /**\n   * Create a more human-readable version of this filter. It is mainly used for\n   * debugging purpose, as it will expand the values stored in the bit mask.\n   */\n  public toString(): string {\n    if (this.rawLine !== undefined) {\n      return this.rawLine;\n    }\n\n    let filter = '';\n\n    if (this.domains !== undefined) {\n      filter += '<hostnames>';\n    }\n\n    if (this.isUnhide()) {\n      filter += '#@#';\n    } else {\n      filter += '##';\n    }\n\n    if (this.isScriptInject()) {\n      filter += '+js(';\n      filter += this.selector;\n      filter += ')';\n    } else {\n      filter += this.selector;\n    }\n\n    return filter;\n  }\n\n  public match(hostname: string, domain: string): boolean {\n    // Not constraint on hostname, match is true\n    if (this.hasHostnameConstraint() === false) {\n      return true;\n    }\n\n    // No `hostname` available but this filter has some constraints on hostname.\n    if (!hostname && this.hasHostnameConstraint()) {\n      return false;\n    }\n\n    if (this.domains !== undefined) {\n      // TODO - this hashing could be re-used between cosmetics by using an\n      // abstraction like `Request` (similar to network filters matching).\n      // Maybe could we reuse `Request` directly without any change?\n      return this.domains.match(\n        hostname.length === 0\n          ? EMPTY_UINT32_ARRAY\n          : getHostnameHashesFromLabelsBackward(hostname, domain),\n        hostname.length === 0\n          ? EMPTY_UINT32_ARRAY\n          : getEntityHashesFromLabelsBackward(hostname, domain),\n      );\n    }\n\n    return true;\n  }\n\n  /**\n   * Get tokens for this filter. It can be indexed multiple times if multiple\n   * hostnames are specified (e.g.: host1,host2##.selector).\n   */\n  public getTokens(): Uint32Array[] {\n    const tokens: Uint32Array[] = [];\n\n    // Note, we do not need to use negated domains or entities as tokens here\n    // since they will by definition not match on their own, unless accompanied\n    // by a domain or entity. Instead, they are handled in\n    // `CosmeticFilterBucket.getCosmeticsFilters(...)`.\n\n    if (this.domains !== undefined) {\n      const { hostnames, entities } = this.domains;\n\n      if (hostnames !== undefined) {\n        for (const hostname of hostnames) {\n          tokens.push(new Uint32Array([hostname]));\n        }\n      }\n\n      if (entities !== undefined) {\n        for (const entity of entities) {\n          tokens.push(new Uint32Array([entity]));\n        }\n      }\n    }\n\n    // Here we only take selector into account if the filter is not unHide.\n    if (tokens.length === 0 && this.isUnhide() === false) {\n      if (this.isIdSelector() || this.isClassSelector()) {\n        // Here we try to identify the end of selector si that we can extract a\n        // valid token out of it. In all these examples, 'selector' is our\n        // token:\n        //\n        //   .selector[...]\n        //   #selector[...]\n        //   #selector ~ foo\n        //   .selector:not(...)\n        //   .selector.foo\n        //\n        // We now try to identify the first valid end of selector which will\n        // also be the end of our token: space, bracket, colon, dot.\n        let endOfSelector = 1;\n        const selector = this.selector;\n        for (; endOfSelector < selector.length; endOfSelector += 1) {\n          const code = selector.charCodeAt(endOfSelector);\n          if (\n            code === 32 /* ' ' */ ||\n            code === 46 /* '.' */ ||\n            code === 58 /* ':' */ ||\n            code === 91 /* '[' */\n          ) {\n            break;\n          }\n        }\n\n        const arr = new Uint32Array(1);\n        arr[0] = fastHashBetween(selector, 1, endOfSelector);\n        tokens.push(arr);\n      } else if (this.isHrefSelector() === true) {\n        const selector: string = this.getSelector();\n\n        // Locate 'href' in selector\n        let hrefIndex = selector.indexOf('href');\n        if (hrefIndex === -1) {\n          return EMPTY_TOKENS;\n        }\n        hrefIndex += 4;\n\n        // Tokenize optimally depending on the kind of selector: 'href=',\n        // 'href*=', 'href^='.\n        let skipFirstToken: boolean = false;\n        let skipLastToken: boolean = true;\n        if (selector.charCodeAt(hrefIndex) === 42 /* '*' */) {\n          // skip: '*'\n          skipFirstToken = true;\n          hrefIndex += 1;\n        } else if (selector.charCodeAt(hrefIndex) === 94 /* '^' */) {\n          // skip: '^'\n          hrefIndex += 1;\n        } else {\n          skipLastToken = false;\n        }\n\n        hrefIndex += 2; // skip:  '=\"'\n\n        // Locate end of href\n        const hrefEnd = selector.indexOf('\"', hrefIndex);\n        if (hrefEnd === -1) {\n          // That cannot happen unless the filter is not well-formed. In this\n          // case, we just return no tokens, which will result in this filter\n          // ending up in the \"wildcard\" bucket of the index.\n          return EMPTY_TOKENS;\n        }\n\n        tokens.push(\n          tokenize(this.selector.slice(hrefIndex, hrefEnd), skipFirstToken, skipLastToken),\n        );\n      }\n    }\n\n    if (tokens.length === 0) {\n      return EMPTY_TOKENS;\n    }\n\n    return tokens;\n  }\n\n  public getScript(js: Map<string, string>): string | undefined {\n    let scriptName = this.getSelector();\n    let scriptArguments: string[] = [];\n    if (scriptName.indexOf(',') !== -1) {\n      const parts = scriptName.split(',');\n      if (parts.length === 0) {\n        return undefined;\n      }\n\n      const firstPart = parts[0];\n      if (firstPart === undefined) {\n        return undefined;\n      }\n\n      scriptName = firstPart;\n      scriptArguments = parts.slice(1).map((s) => s.trim());\n    }\n\n    let script = js.get(scriptName);\n    if (script !== undefined) {\n      for (let i = 0; i < scriptArguments.length; i += 1) {\n        script = script.replace(`{{${i + 1}}}`, scriptArguments[i]);\n      }\n\n      return script;\n    } // TODO - else throw an exception?\n\n    return undefined;\n  }\n\n  public hasHostnameConstraint(): boolean {\n    return this.domains !== undefined;\n  }\n\n  public getId(): number {\n    if (this.id === undefined) {\n      this.id = computeFilterId(this.mask, this.selector, this.domains, this.style);\n    }\n    return this.id;\n  }\n\n  public hasCustomStyle(): boolean {\n    return this.style !== undefined;\n  }\n\n  public getStyle(): string {\n    return this.style || DEFAULT_HIDDING_STYLE;\n  }\n\n  public getStyleAttributeHash(): string {\n    return `s${fastHash(this.getStyle())}`;\n  }\n\n  public getSelector(): string {\n    return this.selector;\n  }\n\n  public getSelectorAST(): AST | undefined {\n    return parseCssSelector(this.getSelector());\n  }\n\n  public getExtendedSelector(): HTMLSelector | undefined {\n    return extractHTMLSelectorFromRule(this.selector);\n  }\n\n  public isExtended(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.extended);\n  }\n\n  public isRemove(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.remove);\n  }\n\n  public isUnhide(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.unhide);\n  }\n\n  public isScriptInject(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.scriptInject);\n  }\n\n  public isCSS(): boolean {\n    return this.isScriptInject() === false;\n  }\n\n  public isIdSelector(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.isIdSelector);\n  }\n\n  public isClassSelector(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.isClassSelector);\n  }\n\n  public isHrefSelector(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.isHrefSelector);\n  }\n\n  public isUnicode(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.isUnicode);\n  }\n\n  public isHtmlFiltering(): boolean {\n    return this.getSelector().startsWith('^');\n  }\n\n  // A generic hide cosmetic filter is one that:\n  //\n  // * Do not have a domain specified. \"Hide this element on all domains\"\n  // * Have only domain exceptions specified. \"Hide this element on all domains except example.com\"\n  //\n  // For example: ~example.com##.ad  is a generic filter as well!\n  public isGenericHide(): boolean {\n    return this?.domains?.hostnames === undefined && this?.domains?.entities === undefined;\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { Domains } from '../engine/domains';\nimport {\n  StaticDataView,\n  sizeOfNetworkCSP,\n  sizeOfNetworkFilter,\n  sizeOfNetworkHostname,\n  sizeOfNetworkRedirect,\n  sizeOfUTF8,\n  sizeOfRawNetwork,\n} from '../data-view';\nimport { toASCII } from '../punycode';\nimport Request, { RequestType, NORMALIZED_TYPE_TOKEN } from '../request';\nimport { TOKENS_BUFFER } from '../tokens-buffer';\nimport {\n  bitCount,\n  clearBit,\n  fastHash,\n  fastStartsWith,\n  fastStartsWithFrom,\n  getBit,\n  hasUnicode,\n  isAlpha,\n  isDigit,\n  setBit,\n  tokenizeInPlace,\n  tokenizeRegexInPlace,\n  tokenizeWithWildcardsInPlace,\n} from '../utils';\nimport IFilter from './interface';\n\nconst HTTP_HASH = fastHash('http');\nconst HTTPS_HASH = fastHash('https');\n\nfunction isAllowedHostname(ch: number): boolean {\n  return (\n    isDigit(ch) || isAlpha(ch) || ch === 95 /* '_' */ || ch === 45 /* '-' */ || ch === 46 /* '.' */\n  );\n}\n\nconst NORMALIZE_OPTIONS: { [option: string]: string } = {\n  'document': 'doc',\n  'first-party': '1p',\n  'generichide': 'ghide',\n  'object-subrequest': 'object',\n  'stylesheet': 'css',\n  'subdocument': 'frame',\n  'third-party': '3p',\n  'xmlhttprequest': 'xhr',\n  '~first-party': '3p',\n  '~third-party': '1p',\n  'all': '',\n};\n\n/**\n * Normalize a raw filter by replacing options with their canonical forms. For\n * example `||foo.com$stylesheet,first-party,xhr` would be normalized to\n * `||foo.com$css,1p,xhr`.\n */\nconst REGEX = /all|~third-party|~first-party|third-party|first-party|object-subrequest|stylesheet|subdocument|xmlhttprequest|document|generichide/g;\nexport function normalizeRawFilterOptions(rawFilter: string): string {\n  rawFilter = rawFilter.toLowerCase();\n\n  let indexOfOptions = rawFilter.lastIndexOf('$');\n  if (indexOfOptions === -1) {\n    return rawFilter;\n  }\n\n  // Remove trailing '*' if possible\n  if (indexOfOptions !== 0 && rawFilter[indexOfOptions - 1] === '*') {\n    rawFilter = rawFilter.slice(0, indexOfOptions - 1) + rawFilter.slice(indexOfOptions);\n    indexOfOptions -= 1;\n  }\n\n  // Normalize options\n  const options = rawFilter.slice(indexOfOptions + 1);\n  const normalizedOptions = options\n    .replace(REGEX, (option) => {\n      const normalized = NORMALIZE_OPTIONS[option];\n      if (normalized === undefined) {\n        return option;\n      }\n      return normalized;\n    })\n    .split(',')\n    .sort()\n    .join(',');\n\n  if (options === normalizedOptions) {\n    return rawFilter;\n  }\n\n  if (normalizedOptions === '') {\n    return rawFilter.slice(0, indexOfOptions);\n  }\n\n  return `${rawFilter.slice(0, indexOfOptions)}$${normalizedOptions}`;\n}\n\n/**\n * Masks used to store options of network filters in a bitmask.\n */\nexport const enum NETWORK_FILTER_MASK {\n  // Request Type\n  fromDocument = 1 << 0,\n  fromFont = 1 << 1,\n  fromHttp = 1 << 2,\n  fromHttps = 1 << 3,\n  fromImage = 1 << 4,\n  fromMedia = 1 << 5,\n  fromObject = 1 << 6,\n  fromOther = 1 << 7,\n  fromPing = 1 << 8,\n  fromScript = 1 << 9,\n  fromStylesheet = 1 << 10,\n  fromSubdocument = 1 << 11,\n  fromWebsocket = 1 << 12, // e.g.: ws, wss\n  fromXmlHttpRequest = 1 << 13,\n\n  // Partiness\n  firstParty = 1 << 14,\n  thirdParty = 1 << 15,\n\n  // Options\n  // FREE - 1 << 16\n  isBadFilter = 1 << 17,\n  isCSP = 1 << 18,\n  isGenericHide = 1 << 19,\n  isImportant = 1 << 20,\n  isSpecificHide = 1 << 21,\n\n  // Kind of patterns\n  isFullRegex = 1 << 22,\n  isRegex = 1 << 23,\n  isUnicode = 1 << 24,\n  isLeftAnchor = 1 << 25,\n  isRightAnchor = 1 << 26,\n  isException = 1 << 27,\n  isHostnameAnchor = 1 << 28,\n  isRedirectRule = 1 << 29,\n}\n\n/**\n * Mask used when a network filter can be applied on any content type.\n */\nconst FROM_ANY: number =\n  NETWORK_FILTER_MASK.fromDocument |\n  NETWORK_FILTER_MASK.fromFont |\n  NETWORK_FILTER_MASK.fromImage |\n  NETWORK_FILTER_MASK.fromMedia |\n  NETWORK_FILTER_MASK.fromObject |\n  NETWORK_FILTER_MASK.fromOther |\n  NETWORK_FILTER_MASK.fromPing |\n  NETWORK_FILTER_MASK.fromScript |\n  NETWORK_FILTER_MASK.fromStylesheet |\n  NETWORK_FILTER_MASK.fromSubdocument |\n  NETWORK_FILTER_MASK.fromWebsocket |\n  NETWORK_FILTER_MASK.fromXmlHttpRequest;\n\n/**\n * Map content type value to mask the corresponding mask.\n * ref: https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIContentPolicy\n */\nconst REQUEST_TYPE_TO_MASK: { [s in RequestType]: number | undefined } = {\n  beacon: NETWORK_FILTER_MASK.fromPing, // fromOther?\n  document: NETWORK_FILTER_MASK.fromDocument,\n  cspviolationreport: NETWORK_FILTER_MASK.fromOther,\n  fetch: NETWORK_FILTER_MASK.fromXmlHttpRequest,\n  font: NETWORK_FILTER_MASK.fromFont,\n  image: NETWORK_FILTER_MASK.fromImage,\n  imageset: NETWORK_FILTER_MASK.fromImage,\n  mainFrame: NETWORK_FILTER_MASK.fromDocument,\n  main_frame: NETWORK_FILTER_MASK.fromDocument,\n  media: NETWORK_FILTER_MASK.fromMedia,\n  object: NETWORK_FILTER_MASK.fromObject,\n  object_subrequest: NETWORK_FILTER_MASK.fromObject,\n  ping: NETWORK_FILTER_MASK.fromPing, // fromOther?\n  script: NETWORK_FILTER_MASK.fromScript,\n  stylesheet: NETWORK_FILTER_MASK.fromStylesheet,\n  subFrame: NETWORK_FILTER_MASK.fromSubdocument,\n  sub_frame: NETWORK_FILTER_MASK.fromSubdocument,\n  webSocket: NETWORK_FILTER_MASK.fromWebsocket,\n  websocket: NETWORK_FILTER_MASK.fromWebsocket,\n  xhr: NETWORK_FILTER_MASK.fromXmlHttpRequest,\n  xmlhttprequest: NETWORK_FILTER_MASK.fromXmlHttpRequest,\n\n  // Other\n  csp_report: NETWORK_FILTER_MASK.fromOther,\n  cspReport: NETWORK_FILTER_MASK.fromOther,\n  eventsource: NETWORK_FILTER_MASK.fromOther,\n  manifest: NETWORK_FILTER_MASK.fromOther,\n  other: NETWORK_FILTER_MASK.fromOther,\n  preflight: NETWORK_FILTER_MASK.fromOther,\n  signedexchange: NETWORK_FILTER_MASK.fromOther,\n  speculative: NETWORK_FILTER_MASK.fromOther,\n  texttrack: NETWORK_FILTER_MASK.fromOther,\n  web_manifest: NETWORK_FILTER_MASK.fromOther,\n  xml_dtd: NETWORK_FILTER_MASK.fromOther,\n  xslt: NETWORK_FILTER_MASK.fromOther,\n};\n\nfunction getListOfRequestTypesNegated(filter: NetworkFilter): RequestType[] {\n  const types: RequestType[] = [];\n\n  if (filter.fromDocument() === false) {\n    types.push('document');\n  }\n\n  if (filter.fromImage() === false) {\n    types.push('image');\n  }\n\n  if (filter.fromMedia() === false) {\n    types.push('media');\n  }\n\n  if (filter.fromObject() === false) {\n    types.push('object');\n  }\n\n  if (filter.fromOther() === false) {\n    types.push('other');\n  }\n\n  if (filter.fromPing() === false) {\n    types.push('ping');\n  }\n\n  if (filter.fromScript() === false) {\n    types.push('script');\n  }\n\n  if (filter.fromStylesheet() === false) {\n    types.push('stylesheet');\n  }\n\n  if (filter.fromSubdocument() === false) {\n    types.push('sub_frame');\n  }\n\n  if (filter.fromWebsocket() === false) {\n    types.push('websocket');\n  }\n\n  if (filter.fromXmlHttpRequest() === false) {\n    types.push('xhr');\n  }\n\n  if (filter.fromFont() === false) {\n    types.push('font');\n  }\n\n  return types;\n}\n\nfunction getListOfRequestTypes(filter: NetworkFilter): RequestType[] {\n  const types: RequestType[] = [];\n\n  if (filter.fromDocument()) {\n    types.push('document');\n  }\n\n  if (filter.fromImage()) {\n    types.push('image');\n  }\n\n  if (filter.fromMedia()) {\n    types.push('media');\n  }\n\n  if (filter.fromObject()) {\n    types.push('object');\n  }\n\n  if (filter.fromOther()) {\n    types.push('other');\n  }\n\n  if (filter.fromPing()) {\n    types.push('ping');\n  }\n\n  if (filter.fromScript()) {\n    types.push('script');\n  }\n\n  if (filter.fromStylesheet()) {\n    types.push('stylesheet');\n  }\n\n  if (filter.fromSubdocument()) {\n    types.push('sub_frame');\n  }\n\n  if (filter.fromWebsocket()) {\n    types.push('websocket');\n  }\n\n  if (filter.fromXmlHttpRequest()) {\n    types.push('xhr');\n  }\n\n  if (filter.fromFont()) {\n    types.push('font');\n  }\n\n  return types;\n}\n\nfunction computeFilterId(\n  csp: string | undefined,\n  mask: number,\n  filter: string | undefined,\n  hostname: string | undefined,\n  domains: Domains | undefined,\n  denyallow: Domains | undefined,\n  redirect: string | undefined,\n): number {\n  let hash = (7907 * 33) ^ mask;\n\n  if (csp !== undefined) {\n    for (let i = 0; i < csp.length; i += 1) {\n      hash = (hash * 33) ^ csp.charCodeAt(i);\n    }\n  }\n\n  if (domains !== undefined) {\n    hash = domains.updateId(hash);\n  }\n\n  if (denyallow !== undefined) {\n    hash = denyallow.updateId(hash);\n  }\n\n  if (filter !== undefined) {\n    for (let i = 0; i < filter.length; i += 1) {\n      hash = (hash * 33) ^ filter.charCodeAt(i);\n    }\n  }\n\n  if (hostname !== undefined) {\n    for (let i = 0; i < hostname.length; i += 1) {\n      hash = (hash * 33) ^ hostname.charCodeAt(i);\n    }\n  }\n\n  if (redirect !== undefined) {\n    for (let i = 0; i < redirect.length; i += 1) {\n      hash = (hash * 33) ^ redirect.charCodeAt(i);\n    }\n  }\n\n  return hash >>> 0;\n}\n\n/**\n * Compiles a filter pattern to a regex. This is only performed *lazily* for\n * filters containing at least a * or ^ symbol. Because Regexes are expansive,\n * we try to convert some patterns to plain filters.\n */\nfunction compileRegex(\n  filter: string,\n  isLeftAnchor: boolean,\n  isRightAnchor: boolean,\n  isFullRegex: boolean,\n): RegExp {\n  if (isFullRegex === true) {\n    return new RegExp(filter.slice(1, filter.length - 1), 'i');\n  }\n\n  // Escape special regex characters: |.$+?{}()[]\\\n  filter = filter.replace(/([|.$+?{}()[\\]\\\\])/g, '\\\\$1');\n\n  // * can match anything\n  filter = filter.replace(/\\*/g, '.*');\n\n  // ^ can match any separator or the end of the pattern\n  filter = filter.replace(/\\^/g, '(?:[^\\\\w\\\\d_.%-]|$)');\n\n  // Should match end of url\n  if (isRightAnchor) {\n    filter = `${filter}$`;\n  }\n\n  if (isLeftAnchor) {\n    filter = `^${filter}`;\n  }\n\n  return new RegExp(filter);\n}\n\nconst MATCH_ALL = new RegExp('');\n\nexport default class NetworkFilter implements IFilter {\n  public static parse(line: string, debug: boolean = false): NetworkFilter | null {\n    // Represent options as a bitmask\n    let mask: number =\n      NETWORK_FILTER_MASK.thirdParty |\n      NETWORK_FILTER_MASK.firstParty |\n      NETWORK_FILTER_MASK.fromHttps |\n      NETWORK_FILTER_MASK.fromHttp;\n\n    // Temporary masks for positive (e.g.: $script) and negative (e.g.: $~script)\n    // content type options.\n    let cptMaskPositive: number = 0;\n    let cptMaskNegative: number = FROM_ANY;\n\n    let hostname: string | undefined;\n    let domains: Domains | undefined;\n    let denyallow: Domains | undefined;\n    let redirect: string | undefined;\n    let csp: string | undefined;\n\n    // Start parsing\n    let filterIndexStart: number = 0;\n    let filterIndexEnd: number = line.length;\n\n    // @@filter == Exception\n    if (line.charCodeAt(0) === 64 /* '@' */ && line.charCodeAt(1) === 64 /* '@' */) {\n      filterIndexStart += 2;\n      mask = setBit(mask, NETWORK_FILTER_MASK.isException);\n    }\n\n    // filter$options == Options\n    // ^     ^\n    // |     |\n    // |     optionsIndex\n    // filterIndexStart\n    const optionsIndex: number = line.lastIndexOf('$');\n    if (optionsIndex !== -1 && line.charCodeAt(optionsIndex + 1) !== 47 /* '/' */) {\n      // Parse options and set flags\n      filterIndexEnd = optionsIndex;\n\n      // --------------------------------------------------------------------- //\n      // parseOptions\n      // --------------------------------------------------------------------- //\n      for (const rawOption of line.slice(optionsIndex + 1).split(',')) {\n        const negation = rawOption.charCodeAt(0) === 126; /* '~' */\n        let option = negation === true ? rawOption.slice(1) : rawOption;\n\n        // Check for options: option=value1|value2\n        let optionValue: string = '';\n        const indexOfEqual: number = option.indexOf('=');\n        if (indexOfEqual !== -1) {\n          optionValue = option.slice(indexOfEqual + 1);\n          option = option.slice(0, indexOfEqual);\n        }\n\n        switch (option) {\n          case 'denyallow': {\n            denyallow = Domains.parse(optionValue.split('|'));\n            break;\n          }\n          case 'domain': {\n            // domain list starting or ending with '|' is invalid\n            if (\n              optionValue.charCodeAt(0) === 124 /* '|' */ ||\n              optionValue.charCodeAt(optionValue.length - 1) === 124 /* '|' */\n            ) {\n              return null;\n            }\n\n            domains = Domains.parse(optionValue.split('|'));\n            break;\n          }\n          case 'badfilter':\n            mask = setBit(mask, NETWORK_FILTER_MASK.isBadFilter);\n            break;\n          case 'important':\n            // Note: `negation` should always be `false` here.\n            if (negation) {\n              return null;\n            }\n\n            mask = setBit(mask, NETWORK_FILTER_MASK.isImportant);\n            break;\n          case 'match-case':\n            // Note: `negation` should always be `false` here.\n            if (negation) {\n              return null;\n            }\n\n            // We currently consider all filters to be case-insensitive.\n            break;\n          case '3p':\n          case 'third-party':\n            if (negation) {\n              // ~third-party means we should clear the flag\n              mask = clearBit(mask, NETWORK_FILTER_MASK.thirdParty);\n            } else {\n              // third-party means ~first-party\n              mask = clearBit(mask, NETWORK_FILTER_MASK.firstParty);\n            }\n            break;\n          case '1p':\n          case 'first-party':\n            if (negation) {\n              // ~first-party means we should clear the flag\n              mask = clearBit(mask, NETWORK_FILTER_MASK.firstParty);\n            } else {\n              // first-party means ~third-party\n              mask = clearBit(mask, NETWORK_FILTER_MASK.thirdParty);\n            }\n            break;\n          case 'redirect-rule':\n          case 'redirect':\n            // Negation of redirection doesn't make sense\n            if (negation) {\n              return null;\n            }\n\n            // Ignore this filter if no redirection resource is specified\n            if (optionValue.length === 0) {\n              return null;\n            }\n\n            if (option === 'redirect-rule') {\n              mask = setBit(mask, NETWORK_FILTER_MASK.isRedirectRule);\n            }\n\n            redirect = optionValue;\n            break;\n          case 'csp':\n            if (negation) {\n              return null;\n            }\n\n            mask = setBit(mask, NETWORK_FILTER_MASK.isCSP);\n            if (optionValue.length > 0) {\n              csp = optionValue;\n            }\n            break;\n          case 'ehide':\n          case 'elemhide':\n            if (negation) {\n              return null;\n            }\n\n            mask = setBit(mask, NETWORK_FILTER_MASK.isGenericHide);\n            mask = setBit(mask, NETWORK_FILTER_MASK.isSpecificHide);\n            break;\n          case 'shide':\n          case 'specifichide':\n            if (negation) {\n              return null;\n            }\n\n            mask = setBit(mask, NETWORK_FILTER_MASK.isSpecificHide);\n            break;\n          case 'ghide':\n          case 'generichide':\n            if (negation) {\n              return null;\n            }\n\n            mask = setBit(mask, NETWORK_FILTER_MASK.isGenericHide);\n            break;\n          case 'inline-script':\n            if (negation) {\n              return null;\n            }\n\n            mask = setBit(mask, NETWORK_FILTER_MASK.isCSP);\n            csp =\n              \"script-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:\";\n            break;\n          case 'inline-font':\n            if (negation) {\n              return null;\n            }\n\n            mask = setBit(mask, NETWORK_FILTER_MASK.isCSP);\n            csp =\n              \"font-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:\";\n            break;\n          default: {\n            // Handle content type options separatly\n            let optionMask: number = 0;\n            switch (option) {\n              case 'all':\n                if (negation) {\n                  return null;\n                }\n\n                // NOTE: Currently a filter cannot be both blocking and CSP, so\n                // we will have to create multiple filters to keep the semantics\n                // of 'all'.\n                // mask = setBit(mask, NETWORK_FILTER_MASK.isCSP);\n                // csp = [\n                //   \"script-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:\",\n                //   \"font-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:\",\n                // ].join('; ');\n                break;\n              case 'image':\n                optionMask = NETWORK_FILTER_MASK.fromImage;\n                break;\n              case 'media':\n                optionMask = NETWORK_FILTER_MASK.fromMedia;\n                break;\n              case 'object':\n              case 'object-subrequest':\n                optionMask = NETWORK_FILTER_MASK.fromObject;\n                break;\n              case 'other':\n                optionMask = NETWORK_FILTER_MASK.fromOther;\n                break;\n              case 'ping':\n              case 'beacon':\n                optionMask = NETWORK_FILTER_MASK.fromPing;\n                break;\n              case 'script':\n                optionMask = NETWORK_FILTER_MASK.fromScript;\n                break;\n              case 'css':\n              case 'stylesheet':\n                optionMask = NETWORK_FILTER_MASK.fromStylesheet;\n                break;\n              case 'frame':\n              case 'subdocument':\n                optionMask = NETWORK_FILTER_MASK.fromSubdocument;\n                break;\n              case 'xhr':\n              case 'xmlhttprequest':\n                optionMask = NETWORK_FILTER_MASK.fromXmlHttpRequest;\n                break;\n              case 'websocket':\n                optionMask = NETWORK_FILTER_MASK.fromWebsocket;\n                break;\n              case 'font':\n                optionMask = NETWORK_FILTER_MASK.fromFont;\n                break;\n              case 'doc':\n              case 'document':\n                optionMask = NETWORK_FILTER_MASK.fromDocument;\n                break;\n              default:\n                // Disable this filter if we don't support all the options\n                return null;\n            }\n\n            // We got a valid cpt option, update mask\n            if (negation) {\n              cptMaskNegative = clearBit(cptMaskNegative, optionMask);\n            } else {\n              cptMaskPositive = setBit(cptMaskPositive, optionMask);\n            }\n            break;\n          }\n        }\n      }\n      // End of option parsing\n      // --------------------------------------------------------------------- //\n    }\n\n    if (cptMaskPositive === 0) {\n      mask |= cptMaskNegative;\n    } else if (cptMaskNegative === FROM_ANY) {\n      mask |= cptMaskPositive;\n    } else {\n      mask |= cptMaskPositive & cptMaskNegative;\n    }\n\n    // Identify kind of pattern\n    let filter: string | undefined;\n\n    // Detect Regexps (i.e.: /pattern/)\n    if (\n      filterIndexEnd - filterIndexStart >= 2 &&\n      line.charCodeAt(filterIndexStart) === 47 /* '/' */ &&\n      line.charCodeAt(filterIndexEnd - 1) === 47 /* '/' */\n    ) {\n      // Some extra ideas which could be applied to RegExp filters:\n      // * convert rules without any special RegExp syntax to plain patterns\n      // * remove extra `isFullRegex` flag since `isRegex` might be enough\n      // * apply some optimizations on the fly: /^https?:\\\\/\\\\/rest => isHttp + isHttps + rest\n      filter = line.slice(filterIndexStart, filterIndexEnd);\n\n      // Validate RegExp to make sure this rule is fine\n      try {\n        compileRegex(\n          filter,\n          false /* isLeftAnchor */,\n          false /* isRightAnchor */,\n          true /* isFullRegex */,\n        );\n      } catch (ex) {\n        return null; // invalid RegExp\n      }\n\n      mask = setBit(mask, NETWORK_FILTER_MASK.isFullRegex);\n    } else {\n      // Deal with hostname pattern\n      if (filterIndexEnd > 0 && line.charCodeAt(filterIndexEnd - 1) === 124 /* '|' */) {\n        mask = setBit(mask, NETWORK_FILTER_MASK.isRightAnchor);\n        filterIndexEnd -= 1;\n      }\n\n      if (\n        filterIndexStart < filterIndexEnd &&\n        line.charCodeAt(filterIndexStart) === 124 /* '|' */\n      ) {\n        if (\n          filterIndexStart < filterIndexEnd - 1 &&\n          line.charCodeAt(filterIndexStart + 1) === 124 /* '|' */\n        ) {\n          mask = setBit(mask, NETWORK_FILTER_MASK.isHostnameAnchor);\n          filterIndexStart += 2;\n        } else {\n          mask = setBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n          filterIndexStart += 1;\n        }\n      }\n\n      // const isRegex = checkIsRegex(line, filterIndexStart, filterIndexEnd);\n      // mask = setNetworkMask(mask, NETWORK_FILTER_MASK.isRegex, isRegex);\n\n      if (getBit(mask, NETWORK_FILTER_MASK.isHostnameAnchor)) {\n        // Split at the first character which is not allowed in a hostname\n        let firstSeparator = filterIndexStart;\n        while (\n          firstSeparator < filterIndexEnd &&\n          isAllowedHostname(line.charCodeAt(firstSeparator)) === true\n        ) {\n          firstSeparator += 1;\n        }\n\n        // No separator found so hostname has full length\n        if (firstSeparator === filterIndexEnd) {\n          hostname = line.slice(filterIndexStart, filterIndexEnd);\n          filterIndexStart = filterIndexEnd;\n          // mask = setBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n        } else {\n          // Found a separator\n          hostname = line.slice(filterIndexStart, firstSeparator);\n          filterIndexStart = firstSeparator;\n          const separatorCode = line.charCodeAt(firstSeparator);\n\n          if (separatorCode === 94 /* '^' */) {\n            // If the only symbol remaining for the selector is '^' then ignore it\n            // but set the filter as right anchored since there should not be any\n            // other label on the right\n            if (filterIndexEnd - filterIndexStart === 1) {\n              filterIndexStart = filterIndexEnd;\n              mask = setBit(mask, NETWORK_FILTER_MASK.isRightAnchor);\n            } else {\n              mask = setBit(mask, NETWORK_FILTER_MASK.isRegex);\n              mask = setBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n            }\n          } else if (separatorCode === 42 /* '*' */) {\n            mask = setBit(mask, NETWORK_FILTER_MASK.isRegex);\n            // mask = setBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n          } else {\n            mask = setBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n          }\n        }\n      }\n\n      // Remove trailing '*'\n      if (\n        filterIndexEnd - filterIndexStart > 0 &&\n        line.charCodeAt(filterIndexEnd - 1) === 42 /* '*' */\n      ) {\n        filterIndexEnd -= 1;\n      }\n\n      // Remove leading '*' if the filter is not hostname anchored.\n      if (\n        getBit(mask, NETWORK_FILTER_MASK.isHostnameAnchor) === false &&\n        filterIndexEnd - filterIndexStart > 0 &&\n        line.charCodeAt(filterIndexStart) === 42 /* '*' */\n      ) {\n        mask = clearBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n        filterIndexStart += 1;\n      }\n\n      // Transform filters on protocol (http, https, ws)\n      if (getBit(mask, NETWORK_FILTER_MASK.isLeftAnchor)) {\n        if (\n          filterIndexEnd - filterIndexStart === 5 &&\n          fastStartsWithFrom(line, 'ws://', filterIndexStart)\n        ) {\n          mask = setBit(mask, NETWORK_FILTER_MASK.fromWebsocket);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.fromHttp);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.fromHttps);\n          filterIndexStart = filterIndexEnd;\n        } else if (\n          filterIndexEnd - filterIndexStart === 7 &&\n          fastStartsWithFrom(line, 'http://', filterIndexStart)\n        ) {\n          mask = setBit(mask, NETWORK_FILTER_MASK.fromHttp);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.fromHttps);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n          filterIndexStart = filterIndexEnd;\n        } else if (\n          filterIndexEnd - filterIndexStart === 8 &&\n          fastStartsWithFrom(line, 'https://', filterIndexStart)\n        ) {\n          mask = setBit(mask, NETWORK_FILTER_MASK.fromHttps);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.fromHttp);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n          filterIndexStart = filterIndexEnd;\n        } else if (\n          filterIndexEnd - filterIndexStart === 8 &&\n          fastStartsWithFrom(line, 'http*://', filterIndexStart)\n        ) {\n          mask = setBit(mask, NETWORK_FILTER_MASK.fromHttps);\n          mask = setBit(mask, NETWORK_FILTER_MASK.fromHttp);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n          filterIndexStart = filterIndexEnd;\n        }\n      }\n\n      if (filterIndexEnd - filterIndexStart > 0) {\n        filter = line.slice(filterIndexStart, filterIndexEnd).toLowerCase();\n\n        mask = setNetworkMask(mask, NETWORK_FILTER_MASK.isUnicode, hasUnicode(filter));\n        if (getBit(mask, NETWORK_FILTER_MASK.isRegex) === false) {\n          mask = setNetworkMask(\n            mask,\n            NETWORK_FILTER_MASK.isRegex,\n            checkIsRegex(filter, 0, filter.length),\n          );\n        }\n      }\n\n      // TODO\n      // - ignore hostname anchor is not hostname provided\n\n      if (hostname !== undefined) {\n        hostname = hostname.toLowerCase();\n        if (hasUnicode(hostname)) {\n          mask = setNetworkMask(mask, NETWORK_FILTER_MASK.isUnicode, true);\n          hostname = toASCII(hostname);\n        }\n      }\n    }\n\n    return new NetworkFilter({\n      csp,\n      filter,\n      hostname,\n      mask,\n      domains,\n      denyallow,\n      rawLine: debug === true ? line : undefined,\n      redirect,\n      regex: undefined,\n    });\n  }\n\n  /**\n   * Deserialize network filters. The code accessing the buffer should be\n   * symetrical to the one in `serializeNetworkFilter`.\n   */\n  public static deserialize(buffer: StaticDataView): NetworkFilter {\n    const mask = buffer.getUint32();\n    const optionalParts = buffer.getUint8();\n    const isUnicode = getBit(mask, NETWORK_FILTER_MASK.isUnicode);\n\n    // The order of these statements is important. Since `buffer.getX()` will\n    // internally increment the position of next byte to read, they need to be\n    // retrieved in the exact same order they were serialized (check\n    // `serializeNetworkFilter`).\n    return new NetworkFilter({\n      // Mandatory field\n      mask,\n\n      // Optional parts\n      csp: (optionalParts & 1) === 1 ? buffer.getNetworkCSP() : undefined,\n      filter:\n        (optionalParts & 2) === 2\n          ? isUnicode\n            ? buffer.getUTF8()\n            : buffer.getNetworkFilter()\n          : undefined,\n      hostname: (optionalParts & 4) === 4 ? buffer.getNetworkHostname() : undefined,\n      domains: (optionalParts & 8) === 8 ? Domains.deserialize(buffer) : undefined,\n      rawLine: (optionalParts & 16) === 16 ? buffer.getRawNetwork() : undefined,\n      redirect: (optionalParts & 32) === 32 ? buffer.getNetworkRedirect() : undefined,\n      denyallow: (optionalParts & 64) === 64 ? Domains.deserialize(buffer) : undefined,\n      regex: undefined,\n    });\n  }\n\n  public readonly csp: string | undefined;\n  public readonly filter: string | undefined;\n  public readonly hostname: string | undefined;\n  public readonly mask: number;\n  public readonly domains: Domains | undefined;\n  public readonly denyallow: Domains | undefined;\n  public readonly redirect: string | undefined;\n\n  // Set only in debug mode\n  public readonly rawLine: string | undefined;\n\n  // Lazy attributes\n  public id: number | undefined;\n  public regex: RegExp | undefined;\n\n  constructor({\n    csp,\n    filter,\n    hostname,\n    mask,\n    domains,\n    denyallow,\n    rawLine,\n    redirect,\n    regex,\n  }: {\n    csp: string | undefined;\n    filter: string | undefined;\n    hostname: string | undefined;\n    mask: number;\n    domains: Domains | undefined;\n    denyallow: Domains | undefined;\n    rawLine: string | undefined;\n    redirect: string | undefined;\n    regex: RegExp | undefined;\n  }) {\n    this.csp = csp;\n    this.filter = filter;\n    this.hostname = hostname;\n    this.mask = mask;\n    this.domains = domains;\n    this.denyallow = denyallow;\n    this.redirect = redirect;\n\n    this.rawLine = rawLine;\n\n    this.id = undefined;\n    this.regex = regex;\n  }\n\n  public isCosmeticFilter() {\n    return false;\n  }\n  public isNetworkFilter() {\n    return true;\n  }\n\n  public match(request: Request): boolean {\n    return checkOptions(this, request) && checkPattern(this, request);\n  }\n\n  /**\n   * To allow for a more compact representation of network filters, the\n   * representation is composed of a mandatory header, and some optional\n   *\n   * Header:\n   * =======\n   *\n   *  | opt | mask\n   *     8     32\n   *\n   * For an empty filter having no pattern, hostname, the minimum size is: 42 bits.\n   *\n   * Then for each optional part (filter, hostname optDomains, optNotDomains,\n   * redirect), it takes 16 bits for the length of the string + the length of the\n   * string in bytes.\n   *\n   * The optional parts are written in order of there number of occurrence in the\n   * filter list used by the adblocker. The most common being `hostname`, then\n   * `filter`, `optDomains`, `optNotDomains`, `redirect`.\n   *\n   * Example:\n   * ========\n   *\n   * @@||cliqz.com would result in a serialized version:\n   *\n   * | 1 | mask | 9 | c | l | i | q | z | . | c | o | m  (16 bytes)\n   *\n   * In this case, the serialized version is actually bigger than the original\n   * filter, but faster to deserialize. In the future, we could optimize the\n   * representation to compact small filters better.\n   *\n   * Ideas:\n   *  * variable length encoding for the mask (if not option, take max 1 byte).\n   *  * first byte could contain the mask as well if small enough.\n   *  * when packing ascii string, store several of them in each byte.\n   */\n  public serialize(buffer: StaticDataView): void {\n    buffer.pushUint32(this.mask);\n\n    const index = buffer.getPos();\n    buffer.pushUint8(0);\n\n    // This bit-mask indicates which optional parts of the filter were serialized.\n    let optionalParts = 0;\n\n    if (this.csp !== undefined) {\n      optionalParts |= 1;\n      buffer.pushNetworkCSP(this.csp);\n    }\n\n    if (this.filter !== undefined) {\n      optionalParts |= 2;\n      if (this.isUnicode()) {\n        buffer.pushUTF8(this.filter);\n      } else {\n        buffer.pushNetworkFilter(this.filter);\n      }\n    }\n\n    if (this.hostname !== undefined) {\n      optionalParts |= 4;\n      buffer.pushNetworkHostname(this.hostname);\n    }\n\n    if (this.domains !== undefined) {\n      optionalParts |= 8;\n      this.domains.serialize(buffer);\n    }\n\n    if (this.rawLine !== undefined) {\n      optionalParts |= 16;\n      buffer.pushRawNetwork(this.rawLine);\n    }\n\n    if (this.redirect !== undefined) {\n      optionalParts |= 32;\n      buffer.pushNetworkRedirect(this.redirect);\n    }\n\n    if (this.denyallow !== undefined) {\n      optionalParts |= 64;\n      this.denyallow.serialize(buffer);\n    }\n\n    buffer.setByte(index, optionalParts);\n  }\n\n  public getSerializedSize(compression: boolean): number {\n    let estimate: number = 4 + 1; // mask = 4 bytes // optional parts = 1 byte\n\n    if (this.csp !== undefined) {\n      estimate += sizeOfNetworkCSP(this.csp, compression);\n    }\n\n    if (this.filter !== undefined) {\n      if (this.isUnicode() === true) {\n        estimate += sizeOfUTF8(this.filter);\n      } else {\n        estimate += sizeOfNetworkFilter(this.filter, compression);\n      }\n    }\n\n    if (this.hostname !== undefined) {\n      estimate += sizeOfNetworkHostname(this.hostname, compression);\n    }\n\n    if (this.domains !== undefined) {\n      estimate += this.domains.getSerializedSize();\n    }\n\n    if (this.rawLine !== undefined) {\n      estimate += sizeOfRawNetwork(this.rawLine, compression);\n    }\n\n    if (this.redirect !== undefined) {\n      estimate += sizeOfNetworkRedirect(this.redirect, compression);\n    }\n\n    if (this.denyallow !== undefined) {\n      estimate += this.denyallow.getSerializedSize();\n    }\n\n    return estimate;\n  }\n\n  /**\n   * Tries to recreate the original representation of the filter (adblock\n   * syntax) from the internal representation. If `rawLine` is set (when filters\n   * are parsed in `debug` mode for example), then it is returned directly.\n   * Otherwise, we try to stick as closely as possible to the original form;\n   * there are things which cannot be recovered though, like domains options\n   * of which only hashes are stored.\n   */\n  public toString() {\n    if (this.rawLine !== undefined) {\n      return this.rawLine;\n    }\n\n    let filter = '';\n\n    if (this.isException()) {\n      filter += '@@';\n    }\n\n    if (this.isHostnameAnchor()) {\n      filter += '||';\n    } else if (this.fromHttp() !== this.fromHttps()) {\n      if (this.fromHttp()) {\n        filter += '|http://';\n      } else {\n        filter += '|https://';\n      }\n    } else if (this.isLeftAnchor()) {\n      filter += '|';\n    }\n\n    if (this.hasHostname()) {\n      filter += this.getHostname();\n      filter += '^';\n    }\n\n    if (this.isFullRegex()) {\n      filter += `/${this.getRegex().source}/`;\n    } else if (this.isRegex()) {\n      filter += this.getRegex().source;\n    } else {\n      filter += this.getFilter();\n    }\n\n    if (this.isRightAnchor()) {\n      filter += '|';\n    }\n\n    // Options\n    const options: string[] = [];\n\n    if (this.fromAny() === false) {\n      const numberOfCptOptions = bitCount(this.getCptMask());\n      const numberOfNegatedOptions = bitCount(FROM_ANY) - numberOfCptOptions;\n\n      if (numberOfNegatedOptions < numberOfCptOptions) {\n        for (const type of getListOfRequestTypesNegated(this)) {\n          options.push(`~${type}`);\n        }\n      } else {\n        for (const type of getListOfRequestTypes(this)) {\n          options.push(type);\n        }\n      }\n    }\n\n    if (this.isImportant()) {\n      options.push('important');\n    }\n\n    if (this.isRedirectRule()) {\n      options.push(`redirect-rule=${this.getRedirect()}`);\n    } else if (this.isRedirect()) {\n      options.push(`redirect=${this.getRedirect()}`);\n    }\n\n    if (this.isCSP()) {\n      options.push(`csp=${this.csp}`);\n    }\n\n    if (this.isElemHide()) {\n      options.push('elemhide');\n    }\n\n    if (this.isSpecificHide()) {\n      options.push('specifichide');\n    }\n\n    if (this.isGenericHide()) {\n      options.push('generichide');\n    }\n\n    if (this.firstParty() !== this.thirdParty()) {\n      if (this.firstParty()) {\n        options.push('1p');\n      }\n      if (this.thirdParty()) {\n        options.push('3p');\n      }\n    }\n\n    if (this.domains !== undefined) {\n      options.push('domain=<hashed>');\n    }\n\n    if (this.denyallow !== undefined) {\n      options.push('denyallow=<hashed>');\n    }\n\n    if (this.isBadFilter()) {\n      options.push('badfilter');\n    }\n\n    if (options.length > 0) {\n      filter += `$${options.join(',')}`;\n    }\n\n    return filter;\n  }\n\n  // Public API (Read-Only)\n  public getIdWithoutBadFilter(): number {\n    // This method computes the id ignoring the $badfilter option (which will\n    // correspond to the ID of filters being discarded). This allows us to\n    // eliminate bad filters by comparing IDs, which is more robust and faster\n    // than string comparison.\n    return computeFilterId(\n      this.csp,\n      this.mask & ~NETWORK_FILTER_MASK.isBadFilter,\n      this.filter,\n      this.hostname,\n      this.domains,\n      this.denyallow,\n      this.redirect,\n    );\n  }\n\n  public getId(): number {\n    if (this.id === undefined) {\n      this.id = computeFilterId(\n        this.csp,\n        this.mask,\n        this.filter,\n        this.hostname,\n        this.domains,\n        this.denyallow,\n        this.redirect,\n      );\n    }\n    return this.id;\n  }\n\n  public hasFilter(): boolean {\n    return this.filter !== undefined;\n  }\n\n  public hasDomains(): boolean {\n    return this.domains !== undefined;\n  }\n\n  public getMask(): number {\n    return this.mask;\n  }\n\n  public getCptMask(): number {\n    return this.getMask() & FROM_ANY;\n  }\n\n  public isRedirect(): boolean {\n    return this.redirect !== undefined;\n  }\n\n  public isRedirectRule(): boolean {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isRedirectRule);\n  }\n\n  public getRedirect(): string {\n    return this.redirect || '';\n  }\n\n  public hasHostname(): boolean {\n    return this.hostname !== undefined;\n  }\n\n  public getHostname(): string {\n    return this.hostname || '';\n  }\n\n  public getFilter(): string {\n    return this.filter || '';\n  }\n\n  public getRegex(): RegExp {\n    if (this.regex === undefined) {\n      this.regex =\n        this.filter !== undefined && this.isRegex()\n          ? compileRegex(\n              this.filter,\n              this.isLeftAnchor(),\n              this.isRightAnchor(),\n              this.isFullRegex(),\n            )\n          : MATCH_ALL;\n    }\n\n    return this.regex;\n  }\n\n  public getTokens(): Uint32Array[] {\n    TOKENS_BUFFER.reset();\n\n    // If there is only one domain and no domain negation, we also use this\n    // domain as a token.\n    if (\n      this.domains !== undefined &&\n      this.domains.hostnames !== undefined &&\n      this.domains.entities === undefined &&\n      this.domains.notHostnames === undefined &&\n      this.domains.notEntities === undefined &&\n      this.domains.hostnames.length === 1\n    ) {\n      TOKENS_BUFFER.push(this.domains.hostnames[0]);\n    }\n\n    // Get tokens from filter\n    if (this.isFullRegex() === false) {\n      if (this.filter !== undefined) {\n        const skipLastToken = !this.isRightAnchor();\n        const skipFirstToken = !this.isLeftAnchor();\n        tokenizeWithWildcardsInPlace(this.filter, skipFirstToken, skipLastToken, TOKENS_BUFFER);\n      }\n\n      // Append tokens from hostname, if any\n      if (this.hostname !== undefined) {\n        tokenizeInPlace(\n          this.hostname,\n          false,\n          this.filter !== undefined && this.filter.charCodeAt(0) === 42 /* '*' */,\n          TOKENS_BUFFER,\n        );\n      }\n    } else if (this.filter !== undefined) {\n      tokenizeRegexInPlace(this.filter, TOKENS_BUFFER);\n    }\n\n    // If we got no tokens for the filter/hostname part, then we will dispatch\n    // this filter in multiple buckets based on the domains option.\n    if (\n      TOKENS_BUFFER.empty() === true &&\n      this.domains !== undefined &&\n      this.domains.hostnames !== undefined &&\n      this.domains.entities === undefined &&\n      this.domains.notHostnames === undefined &&\n      this.domains.notEntities === undefined\n    ) {\n      const result: Uint32Array[] = [];\n      for (const hostname of this.domains.hostnames) {\n        const arr = new Uint32Array(1);\n        arr[0] = hostname;\n        result.push(arr);\n      }\n      return result;\n    }\n\n    // Add optional token for types\n    if (TOKENS_BUFFER.empty() === true && this.fromAny() === false) {\n      const types = getListOfRequestTypes(this);\n      if (types.length !== 0) {\n        const result: Uint32Array[] = [];\n        for (const type of types) {\n          const arr = new Uint32Array(1);\n          arr[0] = NORMALIZED_TYPE_TOKEN[type];\n          result.push(arr);\n        }\n        return result;\n      }\n    }\n\n    // Add optional token for protocol\n    if (this.fromHttp() === true && this.fromHttps() === false) {\n      TOKENS_BUFFER.push(HTTP_HASH);\n    } else if (this.fromHttps() === true && this.fromHttp() === false) {\n      TOKENS_BUFFER.push(HTTPS_HASH);\n    }\n\n    return [TOKENS_BUFFER.slice()];\n  }\n\n  /**\n   * Check if this filter should apply to a request with this content type.\n   */\n  public isCptAllowed(cpt: RequestType): boolean {\n    const mask: number | undefined = REQUEST_TYPE_TO_MASK[cpt];\n    if (mask !== undefined) {\n      return getBit(this.mask, mask);\n    }\n\n    // If content type is not supported (or not specified), we return `true`\n    // only if the filter does not specify any resource type.\n    return this.fromAny();\n  }\n\n  public isException() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isException);\n  }\n\n  public isHostnameAnchor() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isHostnameAnchor);\n  }\n\n  public isRightAnchor() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isRightAnchor);\n  }\n\n  public isLeftAnchor() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isLeftAnchor);\n  }\n\n  public isImportant() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isImportant);\n  }\n\n  public isFullRegex(): boolean {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isFullRegex);\n  }\n\n  public isRegex() {\n    return (\n      getBit(this.mask, NETWORK_FILTER_MASK.isRegex) ||\n      getBit(this.mask, NETWORK_FILTER_MASK.isFullRegex)\n    );\n  }\n\n  public isPlain() {\n    return !this.isRegex();\n  }\n\n  public isCSP() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isCSP);\n  }\n\n  public isElemHide() {\n    return this.isSpecificHide() && this.isGenericHide();\n  }\n\n  public isSpecificHide() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isSpecificHide);\n  }\n\n  public isGenericHide() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isGenericHide);\n  }\n\n  public isBadFilter() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isBadFilter);\n  }\n\n  public isUnicode() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isUnicode);\n  }\n\n  public fromAny() {\n    return this.getCptMask() === FROM_ANY;\n  }\n\n  public thirdParty() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.thirdParty);\n  }\n\n  public firstParty() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.firstParty);\n  }\n\n  public fromImage() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromImage);\n  }\n\n  public fromMedia() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromMedia);\n  }\n\n  public fromObject() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromObject);\n  }\n\n  public fromOther() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromOther);\n  }\n\n  public fromPing() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromPing);\n  }\n\n  public fromScript() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromScript);\n  }\n\n  public fromStylesheet() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromStylesheet);\n  }\n\n  public fromDocument() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromDocument);\n  }\n\n  public fromSubdocument() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromSubdocument);\n  }\n\n  public fromWebsocket() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromWebsocket);\n  }\n\n  public fromHttp() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromHttp);\n  }\n\n  public fromHttps() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromHttps);\n  }\n\n  public fromXmlHttpRequest() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromXmlHttpRequest);\n  }\n\n  public fromFont() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromFont);\n  }\n}\n\n// ---------------------------------------------------------------------------\n// Filter parsing\n// ---------------------------------------------------------------------------\n\nfunction setNetworkMask(mask: number, m: number, value: boolean): number {\n  if (value === true) {\n    return setBit(mask, m);\n  }\n\n  return clearBit(mask, m);\n}\n\n/**\n * Check if the sub-string contained between the indices start and end is a\n * regex filter (it contains a '*' or '^' char).\n */\nfunction checkIsRegex(filter: string, start: number, end: number): boolean {\n  const indexOfSeparator = filter.indexOf('^', start);\n  if (indexOfSeparator !== -1 && indexOfSeparator < end) {\n    return true;\n  }\n\n  const indexOfWildcard = filter.indexOf('*', start);\n  return indexOfWildcard !== -1 && indexOfWildcard < end;\n}\n\n/**\n * Handle hostname anchored filters, given 'hostname' from ||hostname and\n * request's hostname, check if there is a match. This is tricky because\n * filters authors rely and different assumptions. We can have prefix of suffix\n * matches of anchor.\n */\nexport function isAnchoredByHostname(\n  filterHostname: string,\n  hostname: string,\n  isFollowedByWildcard: boolean,\n): boolean {\n  // Corner-case, if `filterHostname` is empty, then it's a match\n  if (filterHostname.length === 0) {\n    return true;\n  }\n\n  // `filterHostname` cannot be longer than actual hostname\n  if (filterHostname.length > hostname.length) {\n    return false;\n  }\n\n  // If they have the same length, they should be equal\n  if (filterHostname.length === hostname.length) {\n    return filterHostname === hostname;\n  }\n\n  // Check if `filterHostname` appears anywhere in `hostname`\n  const matchIndex = hostname.indexOf(filterHostname);\n\n  // No match\n  if (matchIndex === -1) {\n    return false;\n  }\n\n  // `filterHostname` is a prefix of `hostname` and needs to match full a label.\n  //\n  // Examples (filterHostname, hostname):\n  //   * (foo, foo.com)\n  //   * (sub.foo, sub.foo.com)\n  if (matchIndex === 0) {\n    return (\n      isFollowedByWildcard === true ||\n      hostname.charCodeAt(filterHostname.length) === 46 /* '.' */ ||\n      filterHostname.charCodeAt(filterHostname.length - 1) === 46 /* '.' */\n    );\n  }\n\n  // `filterHostname` is a suffix of `hostname`.\n  //\n  // Examples (filterHostname, hostname):\n  //    * (foo.com, sub.foo.com)\n  //    * (com, foo.com)\n  if (hostname.length === matchIndex + filterHostname.length) {\n    return (\n      hostname.charCodeAt(matchIndex - 1) === 46 /* '.' */ ||\n      filterHostname.charCodeAt(0) === 46 /* '.' */\n    );\n  }\n\n  // `filterHostname` is infix of `hostname` and needs match full labels\n  return (\n    (isFollowedByWildcard === true ||\n      hostname.charCodeAt(filterHostname.length) === 46 /* '.' */ ||\n      filterHostname.charCodeAt(filterHostname.length - 1) === 46) /* '.' */ &&\n    (hostname.charCodeAt(matchIndex - 1) === 46 || filterHostname.charCodeAt(0) === 46)\n  );\n}\n\n/**\n * Specialize a network filter depending on its type. It allows for more\n * efficient matching function.\n */\nfunction checkPattern(filter: NetworkFilter, request: Request): boolean {\n  const pattern = filter.getFilter();\n\n  if (filter.isHostnameAnchor() === true) {\n    // Make sure request is anchored by hostname before proceeding to matching\n    const filterHostname = filter.getHostname();\n    if (\n      isAnchoredByHostname(\n        filterHostname,\n        request.hostname,\n        filter.filter !== undefined && filter.filter.charCodeAt(0) === 42 /* '*' */,\n      ) === false\n    ) {\n      return false;\n    }\n\n    // At this point we know request is hostname anchored so we match the rest of the filter.\n    if (filter.isRegex()) {\n      // ||pattern*^\n      return filter\n        .getRegex()\n        .test(request.url.slice(request.url.indexOf(filterHostname) + filterHostname.length));\n    } else if (filter.isRightAnchor() && filter.isLeftAnchor()) {\n      // |||pattern|\n      // Since this is not a regex, the filter pattern must follow the hostname\n      // with nothing in between. So we extract the part of the URL following\n      // after hostname and will perform the matching on it.\n      const urlAfterHostname = request.url.slice(\n        request.url.indexOf(filterHostname) + filterHostname.length,\n      );\n\n      // Since it must follow immediatly after the hostname and be a suffix of\n      // the URL, we conclude that filter must be equal to the part of the\n      // url following the hostname.\n      return pattern === urlAfterHostname;\n    } else if (filter.isRightAnchor()) {\n      // ||pattern|\n      const requestHostname = request.hostname;\n      if (filter.hasFilter() === false) {\n        // In this specific case it means that the specified hostname should match\n        // at the end of the hostname of the request. This allows to prevent false\n        // positive like ||foo.bar which would match https://foo.bar.baz where\n        // ||foo.bar^ would not.\n        return (\n          filterHostname.length === requestHostname.length ||\n          requestHostname.endsWith(filterHostname)\n        );\n      } else {\n        // pattern|\n        return request.url.endsWith(pattern);\n      }\n    } else if (filter.isLeftAnchor()) {\n      // ||pattern + left-anchor => This means that a plain pattern needs to appear\n      // exactly after the hostname, with nothing in between.\n      // Since this is not a regex, the filter pattern must follow the hostname\n      // with nothing in between. So we extract the part of the URL following\n      // after hostname and will perform the matching on it.\n      return fastStartsWithFrom(\n        request.url,\n        pattern,\n        request.url.indexOf(filterHostname) + filterHostname.length,\n      );\n    }\n\n    if (filter.hasFilter() === false) {\n      return true;\n    }\n\n    // We consider this a match if the plain patter (i.e.: filter) appears anywhere.\n    return (\n      request.url.indexOf(pattern, request.url.indexOf(filterHostname) + filterHostname.length) !==\n      -1\n    );\n  } else if (filter.isRegex()) {\n    // pattern*^\n    return filter.getRegex().test(request.url);\n  } else if (filter.isLeftAnchor() && filter.isRightAnchor()) {\n    // |pattern|\n    return request.url === pattern;\n  } else if (filter.isLeftAnchor()) {\n    // |pattern\n    return fastStartsWith(request.url, pattern);\n  } else if (filter.isRightAnchor()) {\n    // pattern|\n    return request.url.endsWith(pattern);\n  }\n\n  // pattern\n  if (filter.hasFilter() === false) {\n    return true;\n  }\n\n  return request.url.indexOf(pattern) !== -1;\n}\n\nfunction checkOptions(filter: NetworkFilter, request: Request): boolean {\n  // We first discard requests based on type, protocol and party. This is really\n  // cheap and should be done first.\n  if (\n    filter.isCptAllowed(request.type) === false ||\n    (request.isHttps === true && filter.fromHttps() === false) ||\n    (request.isHttp === true && filter.fromHttp() === false) ||\n    (filter.firstParty() === false && request.isFirstParty === true) ||\n    (filter.thirdParty() === false && request.isThirdParty === true)\n  ) {\n    return false;\n  }\n\n  // If `sourceHostname` is *not* matched by `domain` then the request should be allowed.\n  if (\n    filter.domains !== undefined &&\n    filter.domains.match(request.sourceHostnameHashes, request.sourceEntityHashes) === false\n  ) {\n    return false;\n  }\n\n  // If `hostname` is matched by `denyallow` then the request should be allowed.\n  if (\n    filter.denyallow !== undefined &&\n    filter.denyallow.match(request.getHostnameHashes(), request.getEntityHashes()) === true\n  ) {\n    return false;\n  }\n\n  return true;\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport Config from './config';\nimport CosmeticFilter from './filters/cosmetic';\nimport NetworkFilter from './filters/network';\nimport { fastStartsWith, fastStartsWithFrom } from './utils';\n\nexport const enum FilterType {\n  NOT_SUPPORTED = 0,\n  NETWORK = 1,\n  COSMETIC = 2,\n}\n\n/**\n * Given a single line (string), checks if this would likely be a cosmetic\n * filter, a network filter or something that is not supported. This check is\n * performed before calling a more specific parser to create an instance of\n * `NetworkFilter` or `CosmeticFilter`.\n */\nexport function detectFilterType(line: string): FilterType {\n  // Ignore empty line\n  if (line.length === 0 || line.length === 1) {\n    return FilterType.NOT_SUPPORTED;\n  }\n\n  // Ignore comments\n  const firstCharCode: number = line.charCodeAt(0);\n  const secondCharCode: number = line.charCodeAt(1);\n  if (\n    firstCharCode === 33 /* '!' */ ||\n    (firstCharCode === 35 /* '#' */ && secondCharCode <= 32) ||\n    (firstCharCode === 91 /* '[' */ && fastStartsWith(line, '[Adblock'))\n  ) {\n    return FilterType.NOT_SUPPORTED;\n  }\n\n  // Fast heuristics to detect network filters\n  const lastCharCode: number = line.charCodeAt(line.length - 1);\n  if (\n    firstCharCode === 36 /* '$' */ ||\n    firstCharCode === 38 /* '&' */ ||\n    firstCharCode === 42 /* '*' */ ||\n    firstCharCode === 45 /* '-' */ ||\n    firstCharCode === 46 /* '.' */ ||\n    firstCharCode === 47 /* '/' */ ||\n    firstCharCode === 58 /* ':' */ ||\n    firstCharCode === 61 /* '=' */ ||\n    firstCharCode === 63 /* '?' */ ||\n    firstCharCode === 64 /* '@' */ ||\n    firstCharCode === 95 /* '_' */ ||\n    firstCharCode === 124 /* '|' */ ||\n    lastCharCode === 124 /* '|' */\n  ) {\n    return FilterType.NETWORK;\n  }\n\n  // Ignore Adguard cosmetics\n  // `$$` = HTML filtering rules\n  const dollarIndex: number = line.indexOf('$');\n  if (dollarIndex !== -1 && dollarIndex !== line.length - 1) {\n    const afterDollarIndex = dollarIndex + 1;\n    const afterDollarCharCode = line.charCodeAt(afterDollarIndex);\n\n    // Ignore Adguard HTML rewrite rules\n    if (\n      afterDollarCharCode === 36 /* '$' */ ||\n      (afterDollarCharCode === 64 /* '@' */ &&\n        fastStartsWithFrom(line, /* $@$ */ '@$', afterDollarIndex))\n    ) {\n      return FilterType.NOT_SUPPORTED;\n    }\n  }\n\n  // Check if filter is cosmetics\n  const sharpIndex: number = line.indexOf('#');\n  if (sharpIndex !== -1 && sharpIndex !== line.length - 1) {\n    const afterSharpIndex = sharpIndex + 1;\n    const afterSharpCharCode = line.charCodeAt(afterSharpIndex);\n\n    if (\n      afterSharpCharCode === 35 /* '#'*/ ||\n      (afterSharpCharCode === 64 /* '@' */ &&\n        fastStartsWithFrom(line, /* #@# */ '@#', afterSharpIndex))\n      // TODO - support ADB/AdGuard extended css selectors\n      // || (afterSharpCharCode === 63 /* '?' */ &&\n      //   fastStartsWithFrom(line, /* #?# */ '?#', afterSharpIndex))\n    ) {\n      // Parse supported cosmetic filter\n      // `##` `#@#`\n      return FilterType.COSMETIC;\n    } else if (\n      (afterSharpCharCode === 64 /* '@'*/ &&\n        (fastStartsWithFrom(line, /* #@$# */ '@$#', afterSharpIndex) ||\n          fastStartsWithFrom(line, /* #@%# */ '@%#', afterSharpIndex))) ||\n      (afterSharpCharCode === 37 /* '%' */ &&\n        fastStartsWithFrom(line, /* #%# */ '%#', afterSharpIndex)) ||\n      (afterSharpCharCode === 36 /* '$' */ &&\n        fastStartsWithFrom(line, /* #$# */ '$#', afterSharpIndex)) ||\n      (afterSharpCharCode === 63 /* '?' */ &&\n        fastStartsWithFrom(line, /* #?# */ '?#', afterSharpIndex))\n    ) {\n      // Ignore Adguard cosmetics\n      // `#$#` `#@$#`\n      // `#%#` `#@%#`\n      // `#?#`\n      return FilterType.NOT_SUPPORTED;\n    }\n  }\n\n  // Everything else is a network filter\n  return FilterType.NETWORK;\n}\n\nexport function parseFilter(filter: string): NetworkFilter | CosmeticFilter | null {\n  const filterType = detectFilterType(filter);\n\n  if (filterType === FilterType.NETWORK) {\n    return NetworkFilter.parse(filter, true);\n  } else if (filterType === FilterType.COSMETIC) {\n    return CosmeticFilter.parse(filter, true);\n  }\n\n  return null;\n}\n\nexport function f(strings: TemplateStringsArray): NetworkFilter | CosmeticFilter | null {\n  return parseFilter(strings[0]);\n}\n\nexport function parseFilters(\n  list: string,\n  config: Partial<Config> = new Config(),\n): { networkFilters: NetworkFilter[]; cosmeticFilters: CosmeticFilter[] } {\n  config = new Config(config);\n\n  const networkFilters: NetworkFilter[] = [];\n  const cosmeticFilters: CosmeticFilter[] = [];\n  const lines = list.split('\\n');\n\n  for (let i = 0; i < lines.length; i += 1) {\n    let line = lines[i];\n\n    // Check if `line` should be left-trimmed\n    if (line.length !== 0 && line.charCodeAt(0) <= 32) {\n      line = line.trim();\n    }\n\n    // Handle continuations\n    if (line.length > 2) {\n      while (\n        i < lines.length - 1 &&\n        line.charCodeAt(line.length - 1) === 92 &&\n        line.charCodeAt(line.length - 2) === 32\n      ) {\n        line = line.slice(0, -2);\n\n        const nextLine = lines[i + 1];\n        if (\n          nextLine.length > 4 &&\n          nextLine.charCodeAt(0) === 32 &&\n          nextLine.charCodeAt(1) === 32 &&\n          nextLine.charCodeAt(2) === 32 &&\n          nextLine.charCodeAt(3) === 32 &&\n          nextLine.charCodeAt(4) !== 32\n        ) {\n          line += nextLine.slice(4);\n          i += 1;\n        } else {\n          break;\n        }\n      }\n    }\n\n    // Check if `line` should be right-trimmed\n    if (line.length !== 0 && line.charCodeAt(line.length - 1) <= 32) {\n      line = line.trim();\n    }\n\n    // Detect if filter is supported, network or cosmetic\n    const filterType = detectFilterType(line);\n\n    if (filterType === FilterType.NETWORK && config.loadNetworkFilters === true) {\n      const filter = NetworkFilter.parse(line, config.debug);\n      if (filter !== null) {\n        networkFilters.push(filter);\n      }\n    } else if (filterType === FilterType.COSMETIC && config.loadCosmeticFilters === true) {\n      const filter = CosmeticFilter.parse(line, config.debug);\n      if (filter !== null) {\n        if (config.loadGenericCosmeticsFilters === true || filter.isGenericHide() === false) {\n          cosmeticFilters.push(filter);\n        }\n      }\n    }\n  }\n\n  return { networkFilters, cosmeticFilters };\n}\n\nfunction getFilters(list: string, config?: Partial<Config>): (NetworkFilter | CosmeticFilter)[] {\n  const { networkFilters, cosmeticFilters } = parseFilters(list, config);\n  const filters: (NetworkFilter | CosmeticFilter)[] = [];\n  return filters.concat(networkFilters).concat(cosmeticFilters);\n}\n\nexport interface IListDiff {\n  newNetworkFilters: NetworkFilter[];\n  newCosmeticFilters: CosmeticFilter[];\n  removedCosmeticFilters: number[];\n  removedNetworkFilters: number[];\n}\n\nexport interface IRawDiff {\n  added: string[];\n  removed: string[];\n}\n\n/**\n * Helper used to return a set of lines as strings where each line is\n * guaranteed to be a valid filter (i.e.: comments, empty lines and\n * un-supported filters are dropped).\n */\nexport function getLinesWithFilters(\n  list: string,\n  config: Partial<Config> = new Config(),\n): Set<string> {\n  // Set config to `debug` so that we keep track of raw lines for each filter\n  return new Set(\n    getFilters(list, new Config(Object.assign({}, config, { debug: true }))).map(\n      ({ rawLine }) => rawLine as string,\n    ),\n  );\n}\n\n/**\n * Given two versions of the same subscription (e.g.: EasyList) as a string,\n * generate a raw diff (i.e.: a list of filters added and filters removed, in\n * their raw string form).\n */\nexport function generateDiff(\n  prevRevision: string,\n  newRevision: string,\n  config: Partial<Config> = new Config(),\n): IRawDiff {\n  // Set config to `debug` so that we keep track of raw lines for each filter\n  const debugConfig = new Config(Object.assign({}, config, { debug: true }));\n\n  const prevRevisionFilters = getFilters(prevRevision, debugConfig);\n  const prevRevisionIds = new Set(prevRevisionFilters.map((filter) => filter.getId()));\n\n  const newRevisionFilters = getFilters(newRevision, debugConfig);\n  const newRevisionIds = new Set(newRevisionFilters.map((filter) => filter.getId()));\n\n  // Check which filters were added, based on ID\n  const added: Set<string> = new Set();\n  for (const filter of newRevisionFilters) {\n    if (!prevRevisionIds.has(filter.getId())) {\n      added.add(filter.rawLine as string);\n    }\n  }\n\n  // Check which filters were removed, based on ID\n  const removed: Set<string> = new Set();\n  for (const filter of prevRevisionFilters) {\n    if (!newRevisionIds.has(filter.getId())) {\n      removed.add(filter.rawLine as string);\n    }\n  }\n\n  return { added: Array.from(added), removed: Array.from(removed) };\n}\n\n/**\n * Merge several raw diffs into one, taking care of accumulating added and\n * removed filters, even if several diffs add/remove the same ones.\n */\nexport function mergeDiffs(diffs: Partial<IRawDiff>[]): IRawDiff {\n  const addedCumul: Set<string> = new Set();\n  const removedCumul: Set<string> = new Set();\n\n  for (const { added, removed } of diffs) {\n    if (added !== undefined) {\n      for (const str of added) {\n        if (removedCumul.has(str)) {\n          removedCumul.delete(str);\n        }\n        addedCumul.add(str);\n      }\n    }\n\n    if (removed !== undefined) {\n      for (const str of removed) {\n        if (addedCumul.has(str)) {\n          addedCumul.delete(str);\n        }\n        removedCumul.add(str);\n      }\n    }\n  }\n\n  return {\n    added: Array.from(addedCumul),\n    removed: Array.from(removedCumul),\n  };\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { getResourceForMime } from '@remusao/small';\n\nimport { StaticDataView, sizeOfASCII, sizeOfByte } from './data-view';\n\n// Polyfill for `btoa`\nfunction btoaPolyfill(buffer: string): string {\n  if (typeof btoa !== 'undefined') {\n    return btoa(buffer);\n  } else if (typeof Buffer !== 'undefined') {\n    return Buffer.from(buffer).toString('base64');\n  }\n  return buffer;\n}\n\ninterface Resource {\n  contentType: string;\n  body: string;\n}\n\n// TODO - support # alias\n// TODO - support empty resource body\n\n/**\n * Abstraction on top of resources.txt used for redirections as well as script\n * injections. It contains logic to parse, serialize and get resources by name\n * for use in the engine.\n */\nexport default class Resources {\n  public static deserialize(buffer: StaticDataView): Resources {\n    const checksum = buffer.getASCII();\n\n    // Deserialize `resources`\n    const resources: Map<string, Resource> = new Map();\n    const numberOfResources = buffer.getUint16();\n    for (let i = 0; i < numberOfResources; i += 1) {\n      resources.set(buffer.getASCII(), {\n        contentType: buffer.getASCII(),\n        body: buffer.getASCII(),\n      });\n    }\n\n    // Deserialize `js`\n    const js: Map<string, string> = new Map();\n    resources.forEach(({ contentType, body }, name) => {\n      if (contentType === 'application/javascript') {\n        js.set(name, body);\n      }\n    });\n\n    return new Resources({\n      checksum,\n      js,\n      resources,\n    });\n  }\n\n  public static parse(data: string, { checksum }: { checksum: string }): Resources {\n    const typeToResource: Map<string, Map<string, string>> = new Map();\n    const trimComments = (str: string) => str.replace(/^\\s*#.*$/gm, '');\n    const chunks = data.split('\\n\\n');\n\n    for (const chunk of chunks) {\n      const resource = trimComments(chunk).trim();\n      if (resource.length !== 0) {\n        const firstNewLine = resource.indexOf('\\n');\n        const split = resource.slice(0, firstNewLine).split(/\\s+/);\n        const name = split[0];\n        const type = split[1];\n        const body = resource.slice(firstNewLine + 1);\n\n        if (name === undefined || type === undefined || body === undefined) {\n          continue;\n        }\n\n        let resources = typeToResource.get(type);\n        if (resources === undefined) {\n          resources = new Map();\n          typeToResource.set(type, resources);\n        }\n        resources.set(name, body);\n      }\n    }\n\n    // The resource containing javascirpts to be injected\n    const js: Map<string, string> = typeToResource.get('application/javascript') || new Map();\n    for (const [key, value] of js.entries()) {\n      if (key.endsWith('.js')) {\n        js.set(key.slice(0, -3), value);\n      }\n    }\n\n    // Create a mapping from resource name to { contentType, data }\n    // used for request redirection.\n    const resourcesByName: Map<string, Resource> = new Map();\n    typeToResource.forEach((resources, contentType) => {\n      resources.forEach((resource: string, name: string) => {\n        resourcesByName.set(name, {\n          contentType,\n          body: resource,\n        });\n      });\n    });\n\n    return new Resources({\n      checksum,\n      js,\n      resources: resourcesByName,\n    });\n  }\n\n  public readonly checksum: string;\n  public readonly js: Map<string, string>;\n  public readonly resources: Map<string, Resource>;\n\n  constructor({ checksum = '', js = new Map(), resources = new Map() }: Partial<Resources> = {}) {\n    this.checksum = checksum;\n    this.js = js;\n    this.resources = resources;\n  }\n\n  public getResource(name: string): Resource & { dataUrl: string } {\n    const { body, contentType } = this.resources.get(name) || getResourceForMime(name);\n\n    let dataUrl;\n    if (contentType.indexOf(';') !== -1) {\n      dataUrl = `data:${contentType},${body}`;\n    } else {\n      dataUrl = `data:${contentType};base64,${btoaPolyfill(body)}`;\n    }\n\n    return { body, contentType, dataUrl };\n  }\n\n  public getSerializedSize(): number {\n    let estimatedSize = sizeOfASCII(this.checksum) + 2 * sizeOfByte(); // resources.size\n\n    this.resources.forEach(({ contentType, body }, name) => {\n      estimatedSize += sizeOfASCII(name) + sizeOfASCII(contentType) + sizeOfASCII(body);\n    });\n\n    return estimatedSize;\n  }\n\n  public serialize(buffer: StaticDataView): void {\n    // Serialize `checksum`\n    buffer.pushASCII(this.checksum);\n\n    // Serialize `resources`\n    buffer.pushUint16(this.resources.size);\n    this.resources.forEach(({ contentType, body }, name) => {\n      buffer.pushASCII(name);\n      buffer.pushASCII(contentType);\n      buffer.pushASCII(body);\n    });\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nexport function compactTokens(tokens: Uint32Array): Uint32Array {\n  const sorted = tokens.sort();\n  let lastIndex = 1;\n  for (let i = 1; i < sorted.length; i += 1) {\n    if (sorted[lastIndex - 1] !== sorted[i]) {\n      sorted[lastIndex++] = sorted[i];\n    }\n  }\n\n  return sorted.subarray(0, lastIndex);\n}\n\nexport function hasEmptyIntersection(s1: Uint32Array, s2: Uint32Array): boolean {\n  let i = 0;\n  let j = 0;\n\n  while (i < s1.length && j < s2.length && s1[i] !== s2[j]) {\n    if (s1[i] < s2[j]) {\n      i += 1;\n    } else {\n      j += 1;\n    }\n  }\n\n  return i === s1.length || j === s2.length;\n}\n\nconst EMPTY_UINT32_ARRAY = new Uint32Array(0);\n\nexport function concatTypedArrays(arrays: Uint32Array[]): Uint32Array {\n  if (arrays.length === 0) {\n    return EMPTY_UINT32_ARRAY;\n  }\n\n  if (arrays.length === 1) {\n    return arrays[0];\n  }\n\n  let totalSize = 0;\n  for (let i = 0; i < arrays.length; i += 1) {\n    totalSize += arrays[i].length;\n  }\n\n  const result = new Uint32Array(totalSize);\n  let index = 0;\n  for (let i = 0; i < arrays.length; i += 1) {\n    const array = arrays[i];\n    for (let j = 0; j < array.length; j += 1) {\n      result[index++] = array[j];\n    }\n  }\n\n  return result;\n}\n\nexport function mergeCompactSets(arrays: Uint32Array[]): Uint32Array {\n  return compactTokens(concatTypedArrays(arrays));\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport CosmeticFilter from '../filters/cosmetic';\nimport NetworkFilter, { NETWORK_FILTER_MASK } from '../filters/network';\nimport { setBit } from '../utils';\nimport { Domains } from '../engine/domains';\n\nfunction processRegex(r: RegExp): string {\n  return `(?:${r.source})`;\n}\n\nfunction escape(s: string): string {\n  return `(?:${s.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')})`;\n}\n\nfunction setWithDefault<K, V>(map: Map<K, V[]>, key: K, value: V): void {\n  let bucket = map.get(key);\n  if (bucket === undefined) {\n    bucket = [];\n    map.set(key, bucket);\n  }\n  bucket.push(value);\n}\n\nfunction groupBy(\n  filters: NetworkFilter[],\n  criteria: (filter: NetworkFilter) => string,\n): NetworkFilter[][] {\n  const grouped: Map<string, NetworkFilter[]> = new Map();\n  for (const filter of filters) {\n    setWithDefault(grouped, criteria(filter), filter);\n  }\n  return Array.from(grouped.values());\n}\n\nfunction splitBy(\n  filters: NetworkFilter[],\n  condition: (filter: NetworkFilter) => boolean,\n): {\n  positive: NetworkFilter[];\n  negative: NetworkFilter[];\n} {\n  const positive: NetworkFilter[] = [];\n  const negative: NetworkFilter[] = [];\n\n  for (const filter of filters) {\n    if (condition(filter)) {\n      positive.push(filter);\n    } else {\n      negative.push(filter);\n    }\n  }\n\n  return {\n    negative,\n    positive,\n  };\n}\n\ninterface IOptimization {\n  description: string;\n  groupByCriteria: (filter: NetworkFilter) => string;\n  select: (filter: NetworkFilter) => boolean;\n  fusion: (filters: NetworkFilter[]) => NetworkFilter;\n}\n\nconst OPTIMIZATIONS: IOptimization[] = [\n  {\n    description: 'Remove duplicated filters by ID',\n    fusion: (filters: NetworkFilter[]) => filters[0],\n    groupByCriteria: (filter: NetworkFilter) => '' + filter.getId(),\n    select: () => true,\n  },\n  {\n    description: 'Group idential filter with same mask but different domains in single filters',\n    fusion: (filters: NetworkFilter[]) => {\n      const hostnames: Set<number> = new Set();\n      const notHostnames: Set<number> = new Set();\n      const entities: Set<number> = new Set();\n      const notEntities: Set<number> = new Set();\n\n      for (const { domains } of filters) {\n        if (domains !== undefined) {\n          if (domains.hostnames !== undefined) {\n            for (const hash of domains.hostnames) {\n              hostnames.add(hash);\n            }\n          }\n\n          if (domains.entities !== undefined) {\n            for (const hash of domains.entities) {\n              entities.add(hash);\n            }\n          }\n\n          if (domains.notHostnames !== undefined) {\n            for (const hash of domains.notHostnames) {\n              notHostnames.add(hash);\n            }\n          }\n\n          if (domains.notEntities !== undefined) {\n            for (const hash of domains.notEntities) {\n              notEntities.add(hash);\n            }\n          }\n        }\n      }\n\n      return new NetworkFilter(\n        Object.assign({}, filters[0], {\n          domains: new Domains({\n            hostnames: hostnames.size !== 0 ? new Uint32Array(hostnames).sort() : undefined,\n            entities: entities.size !== 0 ? new Uint32Array(entities).sort() : undefined,\n            notHostnames:\n              notHostnames.size !== 0 ? new Uint32Array(notHostnames).sort() : undefined,\n            notEntities: notEntities.size !== 0 ? new Uint32Array(notEntities).sort() : undefined,\n          }),\n          rawLine:\n            filters[0].rawLine !== undefined\n              ? filters.map(({ rawLine }) => rawLine).join(' <+> ')\n              : undefined,\n        }),\n      );\n    },\n    groupByCriteria: (filter: NetworkFilter) =>\n      filter.getHostname() + filter.getFilter() + filter.getMask() + filter.getRedirect(),\n    select: (filter: NetworkFilter) =>\n      !filter.isCSP() && filter.denyallow === undefined && filter.domains !== undefined,\n  },\n  {\n    description: 'Group simple patterns, into a single filter',\n    fusion: (filters: NetworkFilter[]) => {\n      const patterns: string[] = [];\n      for (const f of filters) {\n        if (f.isRegex()) {\n          patterns.push(processRegex(f.getRegex()));\n        } else if (f.isRightAnchor()) {\n          patterns.push(`${escape(f.getFilter())}$`);\n        } else if (f.isLeftAnchor()) {\n          patterns.push(`^${escape(f.getFilter())}`);\n        } else {\n          patterns.push(escape(f.getFilter()));\n        }\n      }\n\n      return new NetworkFilter(\n        Object.assign({}, filters[0], {\n          mask: setBit(filters[0].mask, NETWORK_FILTER_MASK.isRegex),\n          rawLine:\n            filters[0].rawLine !== undefined\n              ? filters.map(({ rawLine }) => rawLine).join(' <+> ')\n              : undefined,\n          regex: new RegExp(patterns.join('|')),\n        }),\n      );\n    },\n    groupByCriteria: (filter: NetworkFilter) =>\n      '' + (filter.getMask() & ~NETWORK_FILTER_MASK.isRegex & ~NETWORK_FILTER_MASK.isFullRegex),\n    select: (filter: NetworkFilter) =>\n      filter.domains === undefined &&\n      filter.denyallow === undefined &&\n      !filter.isHostnameAnchor() &&\n      !filter.isRedirect() &&\n      !filter.isCSP(),\n  },\n];\n\n/**\n * Optimizer which returns the list of original filters.\n */\nexport function noopOptimizeNetwork(filters: NetworkFilter[]): NetworkFilter[] {\n  return filters;\n}\n\nexport function noopOptimizeCosmetic(filters: CosmeticFilter[]): CosmeticFilter[] {\n  return filters;\n}\n\n/**\n * Fusion a set of `filters` by applying optimizations sequentially.\n */\nexport function optimizeNetwork(filters: NetworkFilter[]): NetworkFilter[] {\n  const fused: NetworkFilter[] = [];\n  let toFuse = filters;\n\n  for (const { select, fusion, groupByCriteria } of OPTIMIZATIONS) {\n    const { positive, negative } = splitBy(toFuse, select);\n    toFuse = negative;\n\n    const groups = groupBy(positive, groupByCriteria);\n    for (const group of groups) {\n      if (group.length > 1) {\n        fused.push(fusion(group));\n      } else {\n        toFuse.push(group[0]);\n      }\n    }\n  }\n\n  for (const filter of toFuse) {\n    fused.push(filter);\n  }\n\n  return fused;\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport Config from '../config';\nimport { StaticDataView, EMPTY_UINT32_ARRAY, sizeOfBytes } from '../data-view';\nimport IFilter from '../filters/interface';\n\n// https://graphics.stanford.edu/~seander/bithacks.html#RoundUpPowerOf2\nfunction nextPow2(v: number): number {\n  v--;\n  v |= v >> 1;\n  v |= v >> 2;\n  v |= v >> 4;\n  v |= v >> 8;\n  v |= v >> 16;\n  v++;\n  return v;\n}\n\n/**\n * Generate unique IDs for requests, which is used to avoid matching the same\n * buckets multiple times on the same request (which can happen if a token\n * appears more than once in a URL).\n */\nlet UID = 1;\nfunction getNextId(): number {\n  const id = UID;\n  UID = (UID + 1) % 1000000000;\n  return id;\n}\n\n/**\n * List of filters being indexed using the same token in the index.\n */\ninterface Bucket<T extends IFilter> {\n  readonly filters: T[];\n  lastRequestSeen: number;\n}\n\nconst EMPTY_BUCKET: number = Number.MAX_SAFE_INTEGER >>> 0;\n\n/**\n * The ReverseIndex is an accelerating data structure which allows finding a\n * subset of the filters given a list of tokens seen in a URL. It is the core\n * of the adblocker's matching capabilities and speed.\n *\n * It has mainly two caracteristics:\n * 1. It is very compact and is able to load fast.\n * 2. It is *very fast* in finding potential candidates.\n *\n * Conceptually, the reverse index dispatches filters in \"buckets\" (an array of\n * one or more filters). Filters living in the same bucket are guaranteed to\n * share at least one of their tokens (appearing in the pattern). For example:\n *\n *   - Bucket 1 (ads):\n *       - /ads.js\n *       - /script/ads/tracking.js\n *       - /ads/\n *   - Bucket 2 (tracking)\n *       - /tracking.js\n *       - ||tracking.com/cdn\n *\n * We see that filters in \"Bucket 1\" are indexed using the token \"ads\" and\n * \"Bucket 2\" using token \"tracking\".\n *\n * This property allows to quickly discard most of the filters when we match a\n * URL. To achieve this, the URL is tokenized in the same way filters are\n * tokenized and for each token, we check if there are some filters available.\n *\n * For example:\n *\n *  URL \"https://tracking.com/\" has the following tokens: \"https\", \"tracking\"\n *  and \"com\". We immediatly see that we only check the two filters in the\n *  \"tracking\" bucket since they are the only ones having a common token with\n *  the URL.\n *\n * How do we pick the token for each filter?\n * =========================================\n *\n * Each filter is only indexed *once*, which means that we need to pick one of\n * the tokens appearing in the pattern. We choose the token such that each\n * filter is indexed using the token which was the *least seen* globally. In\n * other words, we pick the most discriminative token for each filter. This is\n * done using the following algorithm:\n *   1. Tokenize all the filters which will be stored in the index\n *   2. Compute a histogram of frequency of each token (globally)\n *   3. Select the best token for each filter (lowest frequency)\n */\nexport default class ReverseIndex<T extends IFilter> {\n  public static deserialize<T extends IFilter>(\n    buffer: StaticDataView,\n    deserialize: (view: StaticDataView) => T,\n    optimize: (filters: T[]) => T[],\n    config: Config,\n  ): ReverseIndex<T> {\n    const tokensLookupIndexSize = buffer.getUint32();\n    const bucketsIndexSize = buffer.getUint32();\n    const numberOfFilters = buffer.getUint32();\n\n    // Alignement to 4 bytes is important here since `view` (Uint8Array) can\n    // appear at any offset of `buffer`. But to be sure we can read back\n    // Uint32Array directly from raw buffer, the alignement has to be a\n    // multiple of 4. The same alignement is taken care of in `serialize`.\n    const view = StaticDataView.fromUint8Array(buffer.getBytes(true /* align */), config);\n    const tokensLookupIndex = view.getUint32ArrayView(tokensLookupIndexSize);\n    const bucketsIndex = view.getUint32ArrayView(bucketsIndexSize);\n    const filtersIndexStart = view.pos;\n    view.seekZero(); // not strictly needed but make sure reverse index can be compared with deep equal\n\n    return new ReverseIndex({\n      config,\n      deserialize,\n      filters: [],\n      optimize,\n    }).updateInternals({\n      bucketsIndex,\n      filtersIndexStart,\n      numberOfFilters,\n      tokensLookupIndex,\n      view,\n    });\n  }\n\n  // Internal, compact representation of the reverse index. It contains three\n  // distinct parts stored in the same typed array:\n  //\n  // 1. \"tokens lookup index\" allows to identify a sub-set of buckets which\n  // likely contain filters for a given token. It is an approximate dispatch\n  // table which maps a mask of N bits (N being smaller than 31 bits, the size\n  // of a token) to a list of buckets having a 'token' sharing these same N\n  // bits sub-set. If the binary representation of the token for bucket1 is\n  // 101010 and suffix has size 3, then we would lookup the \"tokens lookup\n  // index\" using the last 3 bits \"010\" which would give us the offset in our\n  // typed array where we can start reading the filters of buckets having a\n  // token ending with the same 3 bits. The value of N is always a power of 2\n  // depending on the total number of filters stored in the index; determined\n  // at the time `update(...)` is called.\n  //\n  // 2. \"buckets index\" is an array which associates tokens to filters. The\n  // structure is: token, filter, token, filter, etc. To identify all the\n  // filters indexed with 'token' a naive approach would be to iterate on\n  // \"buckets index\" and collect all the filters indexed with 'token'. This\n  // would be *very inefficient*! To make this process faster, filters in\n  // \"buckets index\" are grouped so that buckets sharing the same suffix of N\n  // bits in their indexing token (see \"tokens lookup index\") are stored side\n  // by side in the typed array. To know where this section start given a\n  // particular token, we use \"tokens lookup index\" which associated the suffix\n  // of size N to an index in \"buckets index\". From there we can iterate on the\n  // candidates.\n  //\n  // 3. \"filters index\" contains the filters themselves. \"buckets index\"\n  // presented earlier does not contain filters, but an index to the \"filters\n  // index\". This allows a filter to be indexed multiple times without\n  // introducing any overhead; the filter can be associated with multiple\n  // tokens in \"buckets index\" (each pointing to the same place in \"filters\n  // index\") but its actual representation is stored only once in \"filters\n  // index\".\n\n  private bucketsIndex: Uint32Array = EMPTY_UINT32_ARRAY;\n  private filtersIndexStart: number = 0;\n  private numberOfFilters: number = 0;\n  private tokensLookupIndex: Uint32Array = EMPTY_UINT32_ARRAY;\n  private view: StaticDataView;\n\n  // In-memory cache used to keep track of buckets which have been loaded from\n  // the compact representation (i.e.: this.view). It is not strictly necessary\n  // but will speed-up retrival of popular filters (since we do not have to\n  // perform the lookup in \"tokens index\" and \"buckets index\" everytime).\n  private readonly cache: Map<number, Bucket<T>> = new Map();\n\n  // Function used to load a filter (e.g.: CosmeticFilter or NetworkFilter)\n  // from its compact representation in the \"filters index\" section of the\n  // typed array. Each filter exposes a `serialize(...)` method which is used\n  // to store it in `this.view` (section \"filters index\"). While matching we\n  // need to retrieve the instance of the filter to perform matching and use\n  // `this.deserializeFilter(...)` to do so.\n  private readonly deserializeFilter: (view: StaticDataView) => T;\n\n  // Optional function which will be used to optimize a list of filters\n  // in-memory. Typically this is used while matching when a list of filters is\n  // loaded in memory and stored in `this.cache`. Before using the bucket, we\n  // call `this.optimize(...)` on the list of filters to allow some\n  // optimizations to be performed (e.g.: fusion of similar filters, etc.).\n  // Have a look into `./src/engine/optimizer.ts` for examples of such\n  // optimizations.\n  private readonly optimize: (filters: T[]) => T[];\n  private readonly config: Readonly<Config>;\n\n  constructor({\n    deserialize,\n    filters,\n    optimize,\n    config,\n  }: {\n    deserialize: (view: StaticDataView) => T;\n    filters: T[];\n    optimize: (filters: T[]) => T[];\n    config: Config;\n  }) {\n    this.view = StaticDataView.empty(config);\n    this.deserializeFilter = deserialize;\n    this.optimize = optimize;\n    this.config = config;\n\n    if (filters.length !== 0) {\n      this.update(filters, undefined);\n    }\n  }\n\n  /**\n   * Load all filters from this index in memory (i.e.: deserialize them from\n   * the byte array into NetworkFilter or CosmeticFilter instances). This is\n   * mostly useful for debugging or testing purposes.\n   */\n  public getFilters(): T[] {\n    const filters: T[] = [];\n\n    if (this.numberOfFilters === 0) {\n      return filters;\n    }\n\n    // set view cursor at the start of \"filters index\"\n    this.view.setPos(this.filtersIndexStart);\n\n    for (let i = 0; i < this.numberOfFilters; i += 1) {\n      filters.push(this.deserializeFilter(this.view));\n    }\n\n    return filters;\n  }\n\n  /**\n   * Return an array of all the tokens currently used as keys of the \"buckets index\".\n   */\n  public getTokens(): Uint32Array {\n    const tokens: Set<number> = new Set();\n\n    for (let i = 0; i < this.bucketsIndex.length; i += 2) {\n      tokens.add(this.bucketsIndex[i]);\n    }\n\n    return new Uint32Array(tokens);\n  }\n\n  /**\n   * Estimate the number of bytes needed to serialize this instance of `ReverseIndex`.\n   */\n  public getSerializedSize(): number {\n    // 12 = 4 bytes (tokensLookupIndex.length) + 4 bytes (bucketsIndex.length) + 4 bytes (numberOfFilters)\n    return 12 + sizeOfBytes(this.view.buffer, true /* align */);\n  }\n\n  /**\n   * Dump this index to `buffer`.\n   */\n  public serialize(buffer: StaticDataView): void {\n    buffer.pushUint32(this.tokensLookupIndex.length);\n    buffer.pushUint32(this.bucketsIndex.length);\n    buffer.pushUint32(this.numberOfFilters);\n\n    // Aligmenent is crucial here, see comment in `deserialize` for more info.\n    buffer.pushBytes(this.view.buffer, true /* align */);\n  }\n\n  /**\n   * Iterate on all filters found in buckets associated with the given list of\n   * tokens. The callback is called on each of them. Early termination can be\n   * achieved if the callback returns `false`.\n   *\n   * This will not check if each filter returned would match a given request but\n   * is instead used as a list of potential candidates (much smaller than the\n   * total set of filters; typically between 5 and 10 filters will be checked).\n   */\n  public iterMatchingFilters(tokens: Uint32Array, cb: (f: T) => boolean): void {\n    // Each request is assigned an ID so that we can keep track of the last\n    // request seen by each bucket in the reverse index. This provides a cheap\n    // way to prevent filters from being inspected more than once per request\n    // (which could happen if the same token appears more than once in the URL).\n    const requestId = getNextId();\n\n    for (const token of tokens) {\n      if (this.iterBucket(token, requestId, cb) === false) {\n        return;\n      }\n    }\n\n    // Fallback to 0 (i.e.: wildcard bucket) bucket if nothing was found before.\n    this.iterBucket(0, requestId, cb);\n  }\n\n  /**\n   * Re-create the internal data-structure of the reverse index *in-place*. It\n   * needs to be called with a list of new filters and optionally a list of ids\n   * (as returned by either NetworkFilter.getId() or CosmeticFilter.getId())\n   * which need to be removed from the index.\n   */\n  public update(newFilters: T[], removedFilters: Set<number> | undefined): void {\n    // Reset internal cache on each update\n    if (this.cache.size !== 0) {\n      this.cache.clear();\n    }\n\n    const compression = this.config.enableCompression;\n    let totalNumberOfTokens = 0;\n    let totalNumberOfIndexedFilters = 0;\n    const filtersTokens: Uint32Array[][] = [];\n\n    // Keep track of the final size of the buckets index. `bucketsIndexSize` is\n    // the number of indexed filters, multiplied by 2 (since we store both the\n    // token a filter is indexed with and the index of the filter).\n    let bucketsIndexSize = 0;\n\n    // Re-use the current size of \"filters index\" as a starting point so that\n    // we only need to update with new or removed filters. This saves time if\n    // we perform a small update on an existing index.\n    let estimatedBufferSize = this.view.buffer.byteLength - this.filtersIndexStart;\n\n    // Create a list of all filters which will be part of the index. This means\n    // loading existing filters, removing the ones that need to be deleted and\n    // adding the new ones.  At the same time, we update the estimation of\n    // buffer size needed to store this index.\n    let filters: T[] = this.getFilters();\n    if (filters.length !== 0) {\n      // If there is at least one existing filter, then we check if some should\n      // be removed. We subtract their size from the total estimated buffer\n      // size.\n      if (removedFilters !== undefined && removedFilters.size !== 0) {\n        filters = filters.filter((f) => {\n          if (removedFilters.has(f.getId())) {\n            estimatedBufferSize -= f.getSerializedSize(compression);\n            return false;\n          }\n\n          return true;\n        });\n      }\n\n      // Add new filters to the list and also update estimated size\n      for (const filter of newFilters) {\n        estimatedBufferSize += filter.getSerializedSize(compression);\n        filters.push(filter);\n      }\n    } else {\n      // In the case where there is no existing filter in the index (happens on\n      // initialization), then we can take a fast-path and not check removed\n      // filters at all. There is also no need to copy the array of filters.\n      filters = newFilters;\n      for (const filter of newFilters) {\n        estimatedBufferSize += filter.getSerializedSize(compression);\n      }\n    }\n\n    // No filters given; reset to empty index and abort.\n    if (filters.length === 0) {\n      this.updateInternals({\n        bucketsIndex: EMPTY_UINT32_ARRAY,\n        filtersIndexStart: 0,\n        numberOfFilters: 0,\n        tokensLookupIndex: EMPTY_UINT32_ARRAY,\n        view: StaticDataView.empty(this.config),\n      });\n      return;\n    }\n\n    // When we run in `debug` mode, we enable fully deterministic updates of\n    // internal data-structures. To this effect, we sort all filters before\n    // insertion.\n    if (this.config.debug === true) {\n      filters.sort((f1: T, f2: T): number => f1.getId() - f2.getId());\n    }\n\n    const histogram = new Uint32Array(Math.max(nextPow2(2 * filters.length), 256));\n\n    // Tokenize all filters stored in this index. And compute a histogram of\n    // tokens so that we can decide how to index each filter efficiently.\n    for (const filter of filters) {\n      // Tokenize `filter` and store the result in `filtersTokens` which will\n      // be used in the next step to select the best token for each filter.\n      const multiTokens = filter.getTokens();\n      filtersTokens.push(multiTokens);\n\n      // Update estimated size of \"buckets index\" based on number of times this\n      // particular filter will be indexed.\n      bucketsIndexSize += 2 * multiTokens.length; // token + filter index\n      totalNumberOfIndexedFilters += multiTokens.length;\n\n      // Each filter can be indexed more than once, so `getTokens(...)` returns\n      // multiple sets of tokens. We iterate on all of them and update the\n      // histogram for each.\n      for (const tokens of multiTokens) {\n        totalNumberOfTokens += tokens.length;\n        for (const token of tokens) {\n          histogram[token % histogram.length] += 1;\n        }\n      }\n    }\n\n    // Add size of bucketsIndex to total size (x4 because these are 32 bits numbers)\n    estimatedBufferSize += bucketsIndexSize * 4;\n\n    // Prepare \"tokens index\" (see documentation in constructor of `ReverseIndex` class above).\n    const tokensLookupIndexSize: number = Math.max(2, nextPow2(totalNumberOfIndexedFilters));\n    const mask: number = tokensLookupIndexSize - 1;\n    const suffixes: [number, number][][] = [];\n    for (let i = 0; i < tokensLookupIndexSize; i += 1) {\n      suffixes.push([]);\n    }\n\n    // Add size of tokensLookupIndex to total size (x4 because these are 32 bits numbers)\n    estimatedBufferSize += tokensLookupIndexSize * 4;\n\n    // At this point we know the number of bytes needed for the compact\n    // representation of this reverse index (\"tokens index\" + \"buckets index\" +\n    // \"filters index\"). We allocate it at once and proceed with populating it.\n    const buffer = StaticDataView.allocate(estimatedBufferSize, this.config);\n    const tokensLookupIndex = buffer.getUint32ArrayView(tokensLookupIndexSize);\n    const bucketsIndex = buffer.getUint32ArrayView(bucketsIndexSize);\n    const filtersIndexStart = buffer.getPos();\n\n    // For each filter, find the best token (least seen) based on histogram.\n    // Since we are iterating again on the filters, we populate \"filters index\"\n    // in the same loop and keep track of their indices so that we can later\n    // populate \"buckets index\".\n    for (let i = 0; i < filtersTokens.length; i += 1) {\n      const filter: T = filters[i];\n      const multiTokens: Uint32Array[] = filtersTokens[i];\n\n      // Serialize this filter and keep track of its index in the byte array;\n      // it will be used in \"buckets index\" to point to this filter.\n      const filterIndex = buffer.pos;\n      filter.serialize(buffer);\n\n      // Index the filter once per \"tokens\"\n      for (const tokens of multiTokens) {\n        // Find best token (least seen) from `tokens` using `histogram`.\n        let bestToken: number = 0; // default = wildcard bucket\n        let minCount: number = totalNumberOfTokens + 1;\n        for (const token of tokens) {\n          const tokenCount: number = histogram[token % histogram.length];\n          if (tokenCount < minCount) {\n            minCount = tokenCount;\n            bestToken = token;\n\n            // Fast path, if the current token has only been seen once, we can\n            // stop iterating since we will not find a better alternarive!\n            if (minCount === 1) {\n              break;\n            }\n          }\n        }\n\n        // `bestToken & mask` represents the N last bits of `bestToken`. We\n        // group all filters indexed with a token sharing the same N bits.\n        suffixes[bestToken & mask].push([bestToken, filterIndex]);\n      }\n    }\n\n    // Populate \"tokens index\" and \"buckets index\" based on best token found for each filter.\n    let indexInBucketsIndex = 0;\n    for (let i = 0; i < tokensLookupIndexSize; i += 1) {\n      const filtersForMask: [number, number][] = suffixes[i];\n      tokensLookupIndex[i] = indexInBucketsIndex;\n      for (const [token, filterIndex] of filtersForMask) {\n        bucketsIndex[indexInBucketsIndex++] = token;\n        bucketsIndex[indexInBucketsIndex++] = filterIndex;\n      }\n    }\n\n    // Update internals\n    buffer.seekZero();\n    this.updateInternals({\n      bucketsIndex,\n      filtersIndexStart,\n      numberOfFilters: filtersTokens.length,\n      tokensLookupIndex,\n      view: buffer,\n    });\n  }\n\n  private updateInternals({\n    bucketsIndex,\n    filtersIndexStart,\n    numberOfFilters,\n    tokensLookupIndex,\n    view,\n  }: {\n    bucketsIndex: Uint32Array;\n    filtersIndexStart: number;\n    numberOfFilters: number;\n    tokensLookupIndex: Uint32Array;\n    view: StaticDataView;\n  }): ReverseIndex<T> {\n    this.bucketsIndex = bucketsIndex;\n    this.filtersIndexStart = filtersIndexStart;\n    this.numberOfFilters = numberOfFilters;\n    this.tokensLookupIndex = tokensLookupIndex;\n    this.view = view;\n    return this;\n  }\n\n  /**\n   * If a bucket exists for the given token, call the callback on each filter\n   * found inside. An early termination mechanism is built-in, to stop iterating\n   * as soon as `false` is returned from the callback.\n   */\n  private iterBucket(token: number, requestId: number, cb: (f: T) => boolean): boolean {\n    let bucket: Bucket<T> | undefined =\n      this.config.enableInMemoryCache === true ? this.cache.get(token) : undefined;\n\n    // Lazily create bucket if it does not yet exist in memory. Lookup the\n    // compact bucket representation and find all filters being associated with\n    // `token`. Create a `Bucket` out of them and store them in cache.\n    if (bucket === undefined) {\n      const offset = token & (this.tokensLookupIndex.length - 1);\n      const startOfBucket = this.tokensLookupIndex[offset];\n\n      // We do not have any filters for this token\n      if (startOfBucket === EMPTY_BUCKET) {\n        return true;\n      }\n\n      // Since we do not store explicitly the number of filters in each\n      // \"bucket\", we check the index of the next one and use it to infer the\n      // number of filters (each filter being stored as a token + index to the\n      // \"filters store\")\n      const endOfBucket =\n        offset === this.tokensLookupIndex.length - 1\n          ? this.bucketsIndex.length\n          : this.tokensLookupIndex[offset + 1];\n\n      // Get indices of filters indexed with `token`, if any.\n      const filtersIndices: number[] = [];\n      for (let i = startOfBucket; i < endOfBucket; i += 2) {\n        const currentToken = this.bucketsIndex[i];\n        if (currentToken === token) {\n          filtersIndices.push(this.bucketsIndex[i + 1]);\n        }\n      }\n\n      // No filter indexed with `token`.\n      if (filtersIndices.length === 0) {\n        return true; // continue looking for a match\n      }\n\n      // If we have filters for `token` then deserialize filters in memory and\n      // create a `Bucket` instance to hold them for future access.\n      const filters: T[] = [];\n      const view = this.view;\n      for (let i = 0; i < filtersIndices.length; i += 1) {\n        view.setPos(filtersIndices[i]);\n        filters.push(this.deserializeFilter(view));\n      }\n\n      // Create new bucket with found filters (only optimize if we have more\n      // than one filter).\n      bucket = {\n        filters: filters.length > 1 ? this.optimize(filters) : filters,\n        lastRequestSeen: -1, // safe because all ids are positive\n      };\n\n      if (this.config.enableInMemoryCache === true) {\n        this.cache.set(token, bucket);\n      }\n    }\n\n    // Look for matching filter in this bucket\n    if (bucket.lastRequestSeen !== requestId) {\n      bucket.lastRequestSeen = requestId;\n      const filters = bucket.filters;\n      for (let i = 0; i < filters.length; i += 1) {\n        // Break the loop if the callback returns `false`\n        if (cb(filters[i]) === false) {\n          // Whenever we get a match from a filter, we also swap it one\n          // position up in the list. This way, over time, popular filters will\n          // be first and might match earlier. This should decrease the time\n          // needed to get a match.\n          if (i > 0) {\n            const filter = filters[i];\n            filters[i] = filters[i - 1];\n            filters[i - 1] = filter;\n          }\n\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport Config from '../../config';\nimport { StaticDataView, sizeOfBytes } from '../../data-view';\nimport IFilter from '../../filters/interface';\n\n// Empty filters is 4 bytes because we need at least one 32 bits number to keep\n// track of the number of filters in the container. If there is no filter then\n// the number will be 0.\nconst EMPTY_FILTERS = new Uint8Array(4);\n\n/**\n * Generic filters container (for both CosmeticFilter and NetworkFilter\n * instances). This abstracts away some of the logic to serialize/lazy-load\n * lists of filters (which is useful for things like generic cosmetic filters\n * or $badfilter).\n */\nexport default class FiltersContainer<T extends IFilter> {\n  public static deserialize<T extends IFilter>(\n    buffer: StaticDataView,\n    deserialize: (view: StaticDataView) => T,\n    config: Config,\n  ): FiltersContainer<T> {\n    const container = new FiltersContainer({ deserialize, config, filters: [] });\n    container.filters = buffer.getBytes();\n    return container;\n  }\n\n  // Data-view compatible typed array containing all the serialized filters.\n  public filters: Uint8Array;\n  private readonly deserialize: (view: StaticDataView) => T;\n\n  // This does not need to be serialized as it is owned globally by the FiltersEngine.\n  private readonly config: Config;\n\n  constructor({\n    config,\n    deserialize,\n    filters,\n  }: {\n    config: Config;\n    deserialize: (view: StaticDataView) => T;\n    filters: T[];\n  }) {\n    this.deserialize = deserialize;\n    this.filters = EMPTY_FILTERS;\n    this.config = config;\n\n    if (filters.length !== 0) {\n      this.update(filters, undefined);\n    }\n  }\n\n  /**\n   * Update filters based on `newFilters` and `removedFilters`.\n   */\n  public update(newFilters: T[], removedFilters: Set<number> | undefined): void {\n    // Estimate size of the buffer we will need to store filters. This avoids\n    // having to allocate a big chunk of memory up-front if it's not needed.\n    // We start with the current size of `this.filters` then update it with\n    // removed/added filters.\n    let bufferSizeEstimation: number = this.filters.byteLength;\n    let selected: T[] = [];\n    const compression = this.config.enableCompression;\n\n    // Add existing rules (removing the ones with ids in `removedFilters`)\n    const currentFilters = this.getFilters();\n    if (currentFilters.length !== 0) {\n      // If no filter was removed (we only add new ones), we don't need to\n      // filter out removed existing filters. So we just assign the array to\n      // `selected` directly to save a bit of effort.\n      if (removedFilters === undefined || removedFilters.size === 0) {\n        selected = currentFilters;\n      } else {\n        // There might be some removed selected filters, so we iterate through\n        // them and make sure we keep only the ones not having been deleted.\n        for (const filter of currentFilters) {\n          if (removedFilters.has(filter.getId()) === false) {\n            selected.push(filter);\n          } else {\n            bufferSizeEstimation -= filter.getSerializedSize(compression);\n          }\n        }\n      }\n    }\n\n    // If `selected` and `currentFilters` have the same length then no filter was removed.\n    const storedFiltersRemoved = selected.length !== currentFilters.length;\n\n    // Add new rules.\n    const numberOfExistingFilters: number = selected.length;\n    for (const filter of newFilters) {\n      bufferSizeEstimation += filter.getSerializedSize(compression);\n      selected.push(filter);\n    }\n\n    // Check if any new filter was added in `selected` (from `newFilters`).\n    const storedFiltersAdded: boolean = selected.length > numberOfExistingFilters;\n\n    // If selected changed, then update the compact representation of filters.\n    if (selected.length === 0) {\n      this.filters = EMPTY_FILTERS;\n    } else if (storedFiltersAdded === true || storedFiltersRemoved === true) {\n      // Store filters in their compact form\n      const buffer = StaticDataView.allocate(bufferSizeEstimation, this.config);\n      buffer.pushUint32(selected.length);\n\n      // When we run in `debug` mode, we enable fully deterministic updates of\n      // internal data-structure. To this effect, we sort all filters before\n      // insertion.\n      if (this.config.debug === true) {\n        selected.sort((f1: T, f2: T): number => f1.getId() - f2.getId());\n      }\n\n      for (const filter of selected) {\n        filter.serialize(buffer);\n      }\n\n      // Update internals\n      this.filters = buffer.buffer;\n    }\n  }\n\n  public getSerializedSize(): number {\n    return sizeOfBytes(this.filters, false /* no alignement */);\n  }\n\n  public serialize(buffer: StaticDataView): void {\n    buffer.pushBytes(this.filters);\n  }\n\n  public getFilters(): T[] {\n    // No filter stored in the container\n    if (this.filters.byteLength <= 4) {\n      return [];\n    }\n\n    // Load all filters in memory and store them in `cache`\n    const filters: T[] = [];\n    const buffer = StaticDataView.fromUint8Array(this.filters, this.config);\n    const numberOfFilters = buffer.getUint32();\n    for (let i = 0; i < numberOfFilters; i += 1) {\n      filters.push(this.deserialize(buffer));\n    }\n\n    return filters;\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport type { IMessageFromBackground } from '@cliqz/adblocker-content';\n\nimport { compactTokens, concatTypedArrays } from '../../compact-set';\nimport Config from '../../config';\nimport { StaticDataView } from '../../data-view';\nimport CosmeticFilter, { DEFAULT_HIDDING_STYLE } from '../../filters/cosmetic';\nimport {\n  getEntityHashesFromLabelsBackward,\n  getHostnameHashesFromLabelsBackward,\n} from '../../request';\nimport { hashStrings, tokenizeNoSkip } from '../../utils';\nimport { noopOptimizeCosmetic } from '../optimizer';\nimport ReverseIndex from '../reverse-index';\nimport FiltersContainer from './filters';\n\n/**\n * Given a list of CSS selectors, create a valid stylesheet ready to be\n * injected in the page. This also takes care to no create rules with too many\n * selectors for Chrome, see: https://crbug.com/804179\n */\nexport function createStylesheet(rules: string[], style: string): string {\n  if (rules.length === 0) {\n    return '';\n  }\n\n  const maximumNumberOfSelectors = 1024;\n  const parts: string[] = [];\n  const styleStr: string = ` { ${style} }`;\n\n  for (let i = 0; i < rules.length; i += maximumNumberOfSelectors) {\n    // Accumulate up to `maximumNumberOfSelectors` selectors into `selector`.\n    // We use string concatenation here since it's faster than using\n    // `Array.prototype.join`.\n    let selector = rules[i];\n    for (\n      let j = i + 1, end = Math.min(rules.length, i + maximumNumberOfSelectors);\n      j < end;\n      j += 1\n    ) {\n      selector += ',\\n' + rules[j];\n    }\n\n    // Insert CSS after last selector (e.g.: `{ display: none }`)\n    selector += styleStr;\n\n    // If `rules` has less than the limit, we can short-circuit here\n    if (rules.length < maximumNumberOfSelectors) {\n      return selector;\n    }\n\n    // Keep track of this chunk and process next ones\n    parts.push(selector);\n  }\n\n  // Join all chunks together\n  return parts.join('\\n');\n}\n\n/**\n * If at least one filter from `rules` has a custom style (e.g.: `##.foo\n * :style(...)`) then we fallback to `createStylesheetFromRulesWithCustomStyles`\n * which is slower than `createStylesheetFromRules`.\n */\nfunction createStylesheetFromRulesWithCustomStyles(rules: CosmeticFilter[]): string {\n  const selectorsPerStyle: Map<string, string[]> = new Map();\n\n  for (const rule of rules) {\n    const style = rule.getStyle();\n    const selectors = selectorsPerStyle.get(style);\n    if (selectors === undefined) {\n      selectorsPerStyle.set(style, [rule.getSelector()]);\n    } else {\n      selectors.push(rule.getSelector());\n    }\n  }\n\n  const stylesheets: string[] = [];\n  const selectorsPerStyleArray = Array.from(selectorsPerStyle.entries());\n  for (const [style, selectors] of selectorsPerStyleArray) {\n    stylesheets.push(createStylesheet(selectors, style));\n  }\n\n  return stylesheets.join('\\n\\n');\n}\n\n/**\n * Given a list of cosmetic filters, create a stylesheet ready to be injected.\n * This function is optimistic and will assume there is no `:style` filter in\n * `rules`. In case one is found on the way, we fallback to the slower\n * `createStylesheetFromRulesWithCustomStyles` function.\n */\nfunction createStylesheetFromRules(rules: CosmeticFilter[]): string {\n  const selectors: string[] = [];\n  for (const rule of rules) {\n    if (rule.hasCustomStyle()) {\n      return createStylesheetFromRulesWithCustomStyles(rules);\n    }\n\n    selectors.push(rule.selector);\n  }\n\n  return createStylesheet(selectors, DEFAULT_HIDDING_STYLE);\n}\n\nfunction createLookupTokens(hostname: string, domain: string): Uint32Array {\n  const hostnamesHashes = getHostnameHashesFromLabelsBackward(hostname, domain);\n  const entitiesHashes = getEntityHashesFromLabelsBackward(hostname, domain);\n  const tokens = new Uint32Array(hostnamesHashes.length + entitiesHashes.length);\n\n  let index = 0;\n\n  for (const hash of hostnamesHashes) {\n    tokens[index++] = hash;\n  }\n\n  for (const hash of entitiesHashes) {\n    tokens[index++] = hash;\n  }\n\n  return tokens;\n}\n\n/**\n * Efficient container for CosmeticFilter instances. Allows to quickly\n * retrieved scripts and stylesheets to inject in pages for a specific\n * hostname/domain.\n */\nexport default class CosmeticFilterBucket {\n  public static deserialize(buffer: StaticDataView, config: Config): CosmeticFilterBucket {\n    const bucket = new CosmeticFilterBucket({ config });\n\n    bucket.genericRules = FiltersContainer.deserialize(buffer, CosmeticFilter.deserialize, config);\n\n    bucket.classesIndex = ReverseIndex.deserialize(\n      buffer,\n      CosmeticFilter.deserialize,\n      noopOptimizeCosmetic,\n      config,\n    );\n\n    bucket.hostnameIndex = ReverseIndex.deserialize(\n      buffer,\n      CosmeticFilter.deserialize,\n      noopOptimizeCosmetic,\n      config,\n    );\n\n    bucket.hrefsIndex = ReverseIndex.deserialize(\n      buffer,\n      CosmeticFilter.deserialize,\n      noopOptimizeCosmetic,\n      config,\n    );\n\n    bucket.htmlIndex = ReverseIndex.deserialize(\n      buffer,\n      CosmeticFilter.deserialize,\n      noopOptimizeCosmetic,\n      config,\n    );\n\n    bucket.idsIndex = ReverseIndex.deserialize(\n      buffer,\n      CosmeticFilter.deserialize,\n      noopOptimizeCosmetic,\n      config,\n    );\n\n    bucket.unhideIndex = ReverseIndex.deserialize(\n      buffer,\n      CosmeticFilter.deserialize,\n      noopOptimizeCosmetic,\n      config,\n    );\n\n    return bucket;\n  }\n\n  // `genericRules` is a contiguous container of filters. In this case\n  // we keep track of all generic cosmetic filters, which allows us to\n  // efficiently inject them in any page (either all of them or none of\n  // them, without having to match against the hostname/domain of the\n  // page). Having them separated also makes it easier to disable them.\n  public genericRules: FiltersContainer<CosmeticFilter>;\n\n  // `hostnameIndex` contains all cosmetic filters which are specific to one or\n  // several domains (that includes entities as well). They are stored in a\n  // reverse index which allows to efficiently get a subset of the filters\n  // which could be injected on a given page (given hostname and domain).\n  public classesIndex: ReverseIndex<CosmeticFilter>;\n  public hostnameIndex: ReverseIndex<CosmeticFilter>;\n  public hrefsIndex: ReverseIndex<CosmeticFilter>;\n  public htmlIndex: ReverseIndex<CosmeticFilter>;\n  public idsIndex: ReverseIndex<CosmeticFilter>;\n  public unhideIndex: ReverseIndex<CosmeticFilter>;\n\n  // In-memory cache\n  public baseStylesheet: string | null;\n  public extraGenericRules: CosmeticFilter[] | null;\n\n  constructor({ filters = [], config }: { filters?: CosmeticFilter[]; config: Config }) {\n    this.genericRules = new FiltersContainer({\n      config,\n      deserialize: CosmeticFilter.deserialize,\n      filters: [],\n    });\n\n    this.classesIndex = new ReverseIndex({\n      config,\n      deserialize: CosmeticFilter.deserialize,\n      filters: [],\n      optimize: noopOptimizeCosmetic,\n    });\n\n    this.hostnameIndex = new ReverseIndex({\n      config,\n      deserialize: CosmeticFilter.deserialize,\n      filters: [],\n      optimize: noopOptimizeCosmetic,\n    });\n\n    this.hrefsIndex = new ReverseIndex({\n      config,\n      deserialize: CosmeticFilter.deserialize,\n      filters: [],\n      optimize: noopOptimizeCosmetic,\n    });\n\n    this.htmlIndex = new ReverseIndex({\n      config,\n      deserialize: CosmeticFilter.deserialize,\n      filters: [],\n      optimize: noopOptimizeCosmetic,\n    });\n\n    this.idsIndex = new ReverseIndex({\n      config,\n      deserialize: CosmeticFilter.deserialize,\n      filters: [],\n      optimize: noopOptimizeCosmetic,\n    });\n\n    this.unhideIndex = new ReverseIndex({\n      config,\n      deserialize: CosmeticFilter.deserialize,\n      filters: [],\n      optimize: noopOptimizeCosmetic,\n    });\n\n    // In-memory cache, lazily initialized\n    this.baseStylesheet = null;\n    this.extraGenericRules = null;\n\n    if (filters.length !== 0) {\n      this.update(filters, undefined, config);\n    }\n  }\n\n  public getFilters(): CosmeticFilter[] {\n    const filters: CosmeticFilter[] = [];\n    return filters.concat(\n      this.genericRules.getFilters(),\n      this.classesIndex.getFilters(),\n      this.hostnameIndex.getFilters(),\n      this.hrefsIndex.getFilters(),\n      this.htmlIndex.getFilters(),\n      this.idsIndex.getFilters(),\n      this.unhideIndex.getFilters(),\n    );\n  }\n\n  public update(\n    newFilters: CosmeticFilter[],\n    removedFilters: Set<number> | undefined,\n    config: Config,\n  ): void {\n    const classSelectors: CosmeticFilter[] = [];\n    const genericHideRules: CosmeticFilter[] = [];\n    const hostnameSpecificRules: CosmeticFilter[] = [];\n    const hrefSelectors: CosmeticFilter[] = [];\n    const htmlRules: CosmeticFilter[] = [];\n    const idSelectors: CosmeticFilter[] = [];\n    const unHideRules: CosmeticFilter[] = [];\n\n    for (const rule of newFilters) {\n      if (rule.isUnhide()) {\n        unHideRules.push(rule);\n      } else if (rule.isHtmlFiltering()) {\n        htmlRules.push(rule);\n      } else if (rule.isGenericHide()) {\n        if (rule.isClassSelector()) {\n          classSelectors.push(rule);\n        } else if (rule.isIdSelector()) {\n          idSelectors.push(rule);\n        } else if (rule.isHrefSelector()) {\n          hrefSelectors.push(rule);\n        } else {\n          genericHideRules.push(rule);\n        }\n      } else if (rule.isExtended() === false || config.loadExtendedSelectors === true) {\n        hostnameSpecificRules.push(rule);\n      }\n    }\n\n    this.genericRules.update(genericHideRules, removedFilters);\n    this.classesIndex.update(classSelectors, removedFilters);\n    this.hostnameIndex.update(hostnameSpecificRules, removedFilters);\n    this.hrefsIndex.update(hrefSelectors, removedFilters);\n    this.htmlIndex.update(htmlRules, removedFilters);\n    this.idsIndex.update(idSelectors, removedFilters);\n    this.unhideIndex.update(unHideRules, removedFilters);\n  }\n\n  public getSerializedSize(): number {\n    return (\n      this.genericRules.getSerializedSize() +\n      this.classesIndex.getSerializedSize() +\n      this.hostnameIndex.getSerializedSize() +\n      this.hrefsIndex.getSerializedSize() +\n      this.htmlIndex.getSerializedSize() +\n      this.idsIndex.getSerializedSize() +\n      this.unhideIndex.getSerializedSize()\n    );\n  }\n\n  public serialize(buffer: StaticDataView): void {\n    this.genericRules.serialize(buffer);\n    this.classesIndex.serialize(buffer);\n    this.hostnameIndex.serialize(buffer);\n    this.hrefsIndex.serialize(buffer);\n    this.htmlIndex.serialize(buffer);\n    this.idsIndex.serialize(buffer);\n    this.unhideIndex.serialize(buffer);\n  }\n\n  public getHtmlRules({\n    domain,\n    hostname,\n  }: {\n    domain: string;\n    hostname: string;\n  }): CosmeticFilter[] {\n    // Tokens from `hostname` and `domain` which will be used to lookup filters\n    // from the reverse index. The same tokens are re-used for multiple indices.\n    const hostnameTokens = createLookupTokens(hostname, domain);\n    const rules: CosmeticFilter[] = [];\n    this.htmlIndex.iterMatchingFilters(hostnameTokens, (rule: CosmeticFilter) => {\n      if (rule.match(hostname, domain)) {\n        rules.push(rule);\n      }\n      return true;\n    });\n\n    // If we found at least one candidate, check if we have unhidden rules.\n    const disabledRules: Set<string> = new Set();\n    if (rules.length !== 0) {\n      this.unhideIndex.iterMatchingFilters(hostnameTokens, (rule: CosmeticFilter) => {\n        if (rule.match(hostname, domain)) {\n          disabledRules.add(rule.getSelector());\n        }\n\n        return true;\n      });\n    }\n\n    return rules.filter(\n      (rule) => disabledRules.size === 0 || disabledRules.has(rule.getSelector()) === false,\n    );\n  }\n\n  /**\n   * Request cosmetics and scripts to inject in a page.\n   */\n  public getCosmeticsFilters({\n    domain,\n    hostname,\n\n    classes = [],\n    hrefs = [],\n    ids = [],\n\n    allowGenericHides = true,\n    allowSpecificHides = true,\n\n    // Allows to specify which rules to return\n    getBaseRules = true,\n    getInjectionRules = true,\n    getExtendedRules = true,\n    getRulesFromDOM = true,\n    getRulesFromHostname = true,\n  }: {\n    domain: string;\n    hostname: string;\n\n    classes: string[] | undefined;\n    hrefs: string[] | undefined;\n    ids: string[] | undefined;\n\n    allowGenericHides: boolean;\n    allowSpecificHides: boolean;\n\n    getBaseRules?: boolean;\n    getInjectionRules?: boolean;\n    getExtendedRules?: boolean;\n    getRulesFromDOM?: boolean;\n    getRulesFromHostname?: boolean;\n  }): {\n    injections: CosmeticFilter[];\n    extended: IMessageFromBackground['extended'];\n    stylesheet: string;\n  } {\n    // Tokens from `hostname` and `domain` which will be used to lookup filters\n    // from the reverse index. The same tokens are re-used for multiple indices.\n    const hostnameTokens = createLookupTokens(hostname, domain);\n    const rules: CosmeticFilter[] = [];\n\n    // =======================================================================\n    // Rules: hostname-specific\n    // =======================================================================\n    // Collect matching rules which specify a hostname constraint.\n    if (getRulesFromHostname === true) {\n      this.hostnameIndex.iterMatchingFilters(hostnameTokens, (rule: CosmeticFilter) => {\n        // A hostname-specific filter is considered if it's a scriptlet (not\n        // impacted by disabling of specific filters) or specific hides are\n        // allowed.\n        if (\n          (allowSpecificHides === true || rule.isScriptInject() === true) &&\n          rule.match(hostname, domain)\n        ) {\n          rules.push(rule);\n        }\n        return true;\n      });\n    }\n\n    // =======================================================================\n    // Rules: generic hide\n    // =======================================================================\n    // Optionally, collect genericHide rules. We need to make sure the `rule`\n    // matches the hostname and domain since some generic rules can specify\n    // negated hostnames and entities (e.g.: ~foo.*##generic).\n    if (allowGenericHides === true && getRulesFromHostname === true) {\n      const genericRules = this.getGenericRules();\n      for (const rule of genericRules) {\n        if (rule.match(hostname, domain) === true) {\n          rules.push(rule);\n        }\n      }\n    }\n\n    // =======================================================================\n    // Class selector based\n    // =======================================================================\n    if (allowGenericHides === true && getRulesFromDOM === true && classes.length !== 0) {\n      this.classesIndex.iterMatchingFilters(hashStrings(classes), (rule: CosmeticFilter) => {\n        if (rule.match(hostname, domain)) {\n          rules.push(rule);\n        }\n        return true;\n      });\n    }\n\n    // =======================================================================\n    // Id selector based\n    // =======================================================================\n    if (allowGenericHides === true && getRulesFromDOM === true && ids.length !== 0) {\n      this.idsIndex.iterMatchingFilters(hashStrings(ids), (rule: CosmeticFilter) => {\n        if (rule.match(hostname, domain)) {\n          rules.push(rule);\n        }\n        return true;\n      });\n    }\n\n    // =======================================================================\n    // Href selector based\n    // =======================================================================\n    if (allowGenericHides === true && getRulesFromDOM === true && hrefs.length !== 0) {\n      this.hrefsIndex.iterMatchingFilters(\n        compactTokens(concatTypedArrays(hrefs.map((href) => tokenizeNoSkip(href)))),\n        (rule: CosmeticFilter) => {\n          if (rule.match(hostname, domain)) {\n            rules.push(rule);\n          }\n          return true;\n        },\n      );\n    }\n\n    const extended: CosmeticFilter[] = [];\n    const injections: CosmeticFilter[] = [];\n    const styles: CosmeticFilter[] = [];\n\n    // If we found at least one candidate, check if we have unhidden rules,\n    // apply them and dispatch rules into `injections` (i.e.: '+js(...)'),\n    // `extended` (i.e. :not(...)), and `styles` (i.e.: '##rule').\n    if (rules.length !== 0) {\n      // =======================================================================\n      // Rules: unhide\n      // =======================================================================\n      // Collect unhidden selectors. They will be used to filter-out canceled\n      // rules from other indices.\n      let injectionsDisabled = false;\n      const disabledRules: Set<string> = new Set();\n      this.unhideIndex.iterMatchingFilters(hostnameTokens, (rule: CosmeticFilter) => {\n        if (rule.match(hostname, domain)) {\n          disabledRules.add(rule.getSelector());\n\n          // Detect special +js() rules to disable scriptlet injections\n          if (\n            rule.isScriptInject() === true &&\n            rule.isUnhide() === true &&\n            rule.getSelector().length === 0\n          ) {\n            injectionsDisabled = true;\n          }\n        }\n\n        return true;\n      });\n\n      // Apply unhide rules + dispatch\n      for (const rule of rules) {\n        // Make sure `rule` is not un-hidden by a #@# filter\n        if (disabledRules.size !== 0 && disabledRules.has(rule.getSelector())) {\n          continue;\n        }\n\n        // Dispatch rules in `injections` or `styles` depending on type\n        if (rule.isScriptInject() === true) {\n          if (getInjectionRules === true && injectionsDisabled === false) {\n            injections.push(rule);\n          }\n        } else if (rule.isExtended()) {\n          if (getExtendedRules === true) {\n            extended.push(rule);\n          }\n        } else {\n          styles.push(rule);\n        }\n      }\n    }\n\n    // Create final stylesheet\n    let stylesheet: string =\n      getBaseRules === false || allowGenericHides === false ? '' : this.getBaseStylesheet();\n\n    if (styles.length !== 0) {\n      if (stylesheet.length !== 0) {\n        stylesheet += '\\n\\n';\n      }\n\n      stylesheet += createStylesheetFromRules(styles);\n    }\n\n    const extendedProcessed: IMessageFromBackground['extended'] = [];\n    if (extended.length !== 0) {\n      const extendedStyles: Map<string, string> = new Map();\n      for (const rule of extended) {\n        const ast = rule.getSelectorAST();\n        if (ast !== undefined) {\n          const attribute = rule.isRemove() ? undefined : rule.getStyleAttributeHash();\n\n          if (attribute !== undefined) {\n            extendedStyles.set(rule.getStyle(), attribute);\n          }\n\n          extendedProcessed.push({\n            ast,\n            remove: rule.isRemove(),\n            attribute,\n          });\n        }\n      }\n\n      if (extendedStyles.size !== 0) {\n        if (stylesheet.length !== 0) {\n          stylesheet += '\\n\\n';\n        }\n\n        stylesheet += [...extendedStyles.entries()]\n          .map(([style, attribute]) => `[${attribute}] { ${style} }`)\n          .join('\\n\\n');\n      }\n    }\n\n    return {\n      extended: extendedProcessed,\n      injections,\n      stylesheet,\n    };\n  }\n\n  /**\n   * Return the list of filters which can potentially be un-hidden by another\n   * rule currently contained in the cosmetic bucket.\n   */\n  private getGenericRules(): CosmeticFilter[] {\n    if (this.extraGenericRules === null) {\n      return this.lazyPopulateGenericRulesCache().genericRules;\n    }\n    return this.extraGenericRules;\n  }\n\n  /**\n   * The base stylesheet is made of generic filters (not specific to any\n   * hostname) which cannot be hidden (i.e.: there is currently no rule which\n   * might hide their selector). This means that it will never change and is\n   * the same for all sites. We generate it once and re-use it any-time we want\n   * to inject it.\n   */\n  private getBaseStylesheet(): string {\n    if (this.baseStylesheet === null) {\n      return this.lazyPopulateGenericRulesCache().baseStylesheet;\n    }\n    return this.baseStylesheet;\n  }\n\n  /**\n   * This is used to lazily generate both the list of generic rules which can\n   * *potentially be un-hidden* (i.e.: there exists at least one unhide rule\n   * for the selector) and a stylesheet containing all selectors which cannot\n   * be un-hidden. Since this list will not change between updates we can\n   * generate once and use many times.\n   */\n  private lazyPopulateGenericRulesCache(): {\n    baseStylesheet: string;\n    genericRules: CosmeticFilter[];\n  } {\n    if (this.baseStylesheet === null || this.extraGenericRules === null) {\n      // Collect all selectors which can be subjected to an unhide rule\n      const unHideRules = this.unhideIndex.getFilters();\n      const canBeHiddenSelectors: Set<string> = new Set();\n      for (const rule of unHideRules) {\n        canBeHiddenSelectors.add(rule.getSelector());\n      }\n\n      // Split generic rules into two groups:\n      // 1. Rules which cannot be hidden\n      // 2. Rules which can be hidden on some domains\n      //\n      // This allows to create a base stylesheet which we know will never\n      // change then keep a minority of rules in-memory which can potentially\n      // be hidden.\n      const genericRules = this.genericRules.getFilters();\n      const cannotBeHiddenRules: CosmeticFilter[] = [];\n      const canBeHiddenRules: CosmeticFilter[] = [];\n      for (const rule of genericRules) {\n        if (\n          rule.hasCustomStyle() ||\n          rule.isScriptInject() ||\n          rule.hasHostnameConstraint() ||\n          canBeHiddenSelectors.has(rule.getSelector())\n        ) {\n          canBeHiddenRules.push(rule);\n        } else {\n          cannotBeHiddenRules.push(rule);\n        }\n      }\n\n      this.baseStylesheet = createStylesheetFromRules(cannotBeHiddenRules);\n      this.extraGenericRules = canBeHiddenRules;\n    }\n\n    return {\n      baseStylesheet: this.baseStylesheet,\n      genericRules: this.extraGenericRules,\n    };\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport Config from '../../config';\nimport { StaticDataView } from '../../data-view';\nimport NetworkFilter from '../../filters/network';\nimport Request from '../../request';\nimport { noopOptimizeNetwork, optimizeNetwork } from '../optimizer';\nimport ReverseIndex from '../reverse-index';\nimport FiltersContainer from './filters';\n\n/**\n * Accelerating data structure for network filters matching.\n */\nexport default class NetworkFilterBucket {\n  public static deserialize(buffer: StaticDataView, config: Config): NetworkFilterBucket {\n    const bucket = new NetworkFilterBucket({ config });\n\n    bucket.index = ReverseIndex.deserialize(\n      buffer,\n      NetworkFilter.deserialize,\n      config.enableOptimizations ? optimizeNetwork : noopOptimizeNetwork,\n      config,\n    );\n\n    bucket.badFilters = FiltersContainer.deserialize(buffer, NetworkFilter.deserialize, config);\n\n    return bucket;\n  }\n\n  public index: ReverseIndex<NetworkFilter>;\n\n  // `badFilters` are filters specifying a $badfilter option. They can be used\n  // to disable completely another filter (usually to fix breakage). They are\n  // stored separately so that we can quickly check if matching filters (from\n  // `match` and `matchAll` methods) should be ignored or not.\n  public badFilters: FiltersContainer<NetworkFilter>;\n\n  // Lazy attribute containing IDs of $badfilter to quickly check which filters\n  // should be disabled (only one lookup is needed).\n  private badFiltersIds: Set<number> | null;\n\n  constructor({ filters = [], config }: { filters?: NetworkFilter[]; config: Config }) {\n    this.index = new ReverseIndex({\n      config,\n      deserialize: NetworkFilter.deserialize,\n      filters: [],\n      optimize: config.enableOptimizations ? optimizeNetwork : noopOptimizeNetwork,\n    });\n\n    this.badFiltersIds = null;\n    this.badFilters = new FiltersContainer({\n      config,\n      deserialize: NetworkFilter.deserialize,\n      filters: [],\n    });\n\n    if (filters.length !== 0) {\n      this.update(filters, undefined);\n    }\n  }\n\n  public getFilters(): NetworkFilter[] {\n    const filters: NetworkFilter[] = [];\n    return filters.concat(this.badFilters.getFilters(), this.index.getFilters());\n  }\n\n  public update(newFilters: NetworkFilter[], removedFilters: Set<number> | undefined): void {\n    const badFilters: NetworkFilter[] = [];\n    const remaining: NetworkFilter[] = [];\n    for (const filter of newFilters) {\n      if (filter.isBadFilter()) {\n        badFilters.push(filter);\n      } else {\n        remaining.push(filter);\n      }\n    }\n\n    this.badFilters.update(badFilters, removedFilters);\n    this.index.update(remaining, removedFilters);\n    this.badFiltersIds = null;\n  }\n\n  public getSerializedSize(): number {\n    return this.badFilters.getSerializedSize() + this.index.getSerializedSize();\n  }\n\n  public serialize(buffer: StaticDataView): void {\n    this.index.serialize(buffer);\n    this.badFilters.serialize(buffer);\n  }\n\n  public matchAll(request: Request): NetworkFilter[] {\n    const filters: NetworkFilter[] = [];\n\n    this.index.iterMatchingFilters(request.getTokens(), (filter: NetworkFilter) => {\n      if (filter.match(request) && this.isFilterDisabled(filter) === false) {\n        filters.push(filter);\n      }\n      return true;\n    });\n\n    return filters;\n  }\n\n  public match(request: Request): NetworkFilter | undefined {\n    let match: NetworkFilter | undefined;\n\n    this.index.iterMatchingFilters(request.getTokens(), (filter: NetworkFilter) => {\n      if (filter.match(request) && this.isFilterDisabled(filter) === false) {\n        match = filter;\n        return false;\n      }\n      return true;\n    });\n\n    return match;\n  }\n\n  /**\n   * Given a matching filter, check if it is disabled by a $badfilter\n   */\n  private isFilterDisabled(filter: NetworkFilter): boolean {\n    // Lazily load information about bad filters in memory. The only thing we\n    // keep in memory is the list of IDs from $badfilter (ignoring the\n    // $badfilter option from mask). This allows to check if a matching filter\n    // should be ignored just by doing a lookup in a set of IDs.\n    if (this.badFiltersIds === null) {\n      const badFilters = this.badFilters.getFilters();\n\n      // Shortcut if there is no badfilter in this bucket\n      if (badFilters.length === 0) {\n        return false;\n      }\n\n      // Create in-memory list of disabled filter IDs\n      const badFiltersIds: Set<number> = new Set();\n      for (const badFilter of badFilters) {\n        badFiltersIds.add(badFilter.getIdWithoutBadFilter());\n      }\n      this.badFiltersIds = badFiltersIds;\n    }\n\n    return this.badFiltersIds.has(filter.getId());\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport type { IMessageFromBackground } from '@cliqz/adblocker-content';\n\nimport Config from '../config';\nimport { StaticDataView, sizeOfASCII, sizeOfByte } from '../data-view';\nimport { EventEmitter } from '../events';\nimport {\n  adsAndTrackingLists,\n  adsLists,\n  Fetch,\n  fetchLists,\n  fetchResources,\n  fullLists,\n} from '../fetch';\nimport { HTMLSelector } from '../html-filtering';\nimport CosmeticFilter from '../filters/cosmetic';\nimport NetworkFilter from '../filters/network';\nimport { block } from '../filters/dsl';\nimport { IListDiff, IRawDiff, parseFilters } from '../lists';\nimport Request from '../request';\nimport Resources from '../resources';\nimport CosmeticFilterBucket from './bucket/cosmetic';\nimport NetworkFilterBucket from './bucket/network';\n\nexport const ENGINE_VERSION = 526;\n\nfunction shouldApplyHideException(filters: NetworkFilter[]): boolean {\n  if (filters.length === 0) {\n    return false;\n  }\n\n  // Get $Xhide filter with highest priority:\n  // $Xhide,important > $Xhide > @@$Xhide\n  let genericHideFilter: NetworkFilter | undefined;\n  let currentScore = 0;\n  for (const filter of filters) {\n    // To encode priority between filters, we create a bitmask with the following:\n    // $important,Xhide = 100 (takes precedence)\n    // $Xhide           = 010 (exception to @@$Xhide)\n    // @@$Xhide         = 001 (forbids Xhide filters)\n    const score: number = (filter.isImportant() ? 4 : 0) | (filter.isException() ? 1 : 2);\n\n    // Highest `score` has precedence\n    if (score >= currentScore) {\n      currentScore = score;\n      genericHideFilter = filter;\n    }\n  }\n\n  if (genericHideFilter === undefined) {\n    return false;\n  }\n\n  // Check that there is at least one $generichide match and no exception\n  return genericHideFilter.isException();\n}\n\nexport interface BlockingResponse {\n  match: boolean;\n  redirect:\n    | undefined\n    | {\n        body: string;\n        contentType: string;\n        dataUrl: string;\n      };\n  exception: NetworkFilter | undefined;\n  filter: NetworkFilter | undefined;\n}\n\nexport interface Caching {\n  path: string;\n  read: (path: string) => Promise<Uint8Array>;\n  write: (path: string, buffer: Uint8Array) => Promise<void>;\n}\n\nexport default class FilterEngine extends EventEmitter<\n  | 'csp-injected'\n  | 'html-filtered'\n  | 'request-allowed'\n  | 'request-blocked'\n  | 'request-redirected'\n  | 'request-whitelisted'\n  | 'script-injected'\n  | 'style-injected'\n> {\n  private static fromCached<T extends typeof FilterEngine>(\n    this: T,\n    init: () => Promise<InstanceType<T>>,\n    caching?: Caching,\n  ): Promise<InstanceType<T>> {\n    if (caching === undefined) {\n      return init();\n    }\n\n    const { path, read, write } = caching;\n    return read(path)\n      .then((buffer) => this.deserialize(buffer) as InstanceType<T>)\n      .catch(() => init().then((engine) => write(path, engine.serialize()).then(() => engine)));\n  }\n\n  public static empty<T extends FilterEngine>(\n    this: new (...args: any[]) => T,\n    config: Partial<Config> = {},\n  ): T {\n    return new this({ config });\n  }\n\n  /**\n   * Create an instance of `FiltersEngine` (or subclass like `ElectronBlocker`,\n   * etc.), from the list of subscriptions provided as argument (e.g.:\n   * EasyList).\n   *\n   * Lists are fetched using the instance of `fetch` provided as a first\n   * argument. Optionally resources.txt and config can be provided.\n   */\n  public static fromLists<T extends typeof FilterEngine>(\n    this: T,\n    fetch: Fetch,\n    urls: string[],\n    config: Partial<Config> = {},\n    caching?: Caching,\n  ): Promise<InstanceType<T>> {\n    return this.fromCached(() => {\n      const listsPromises = fetchLists(fetch, urls);\n      const resourcesPromise = fetchResources(fetch);\n\n      return Promise.all([listsPromises, resourcesPromise]).then(([lists, resources]) => {\n        const engine = this.parse(lists.join('\\n'), config);\n        if (resources !== undefined) {\n          engine.updateResources(resources, '' + resources.length);\n        }\n\n        return engine as InstanceType<T>;\n      });\n    }, caching);\n  }\n\n  /**\n   * Initialize blocker of *ads only*.\n   *\n   * Attempt to initialize a blocking engine using a pre-built version served\n   * from Cliqz's CDN. If this fails (e.g.: if no pre-built engine is available\n   * for this version of the library), then falls-back to using `fromLists(...)`\n   * method with the same subscriptions.\n   */\n  public static fromPrebuiltAdsOnly<T extends typeof FilterEngine>(\n    this: T,\n    fetchImpl: Fetch = fetch,\n    caching?: Caching,\n  ): Promise<InstanceType<T>> {\n    return this.fromLists(fetchImpl, adsLists, {}, caching);\n  }\n\n  /**\n   * Same as `fromPrebuiltAdsOnly(...)` but also contains rules to block\n   * tracking (i.e.: using extra lists such as EasyPrivacy and more).\n   */\n  public static fromPrebuiltAdsAndTracking<T extends typeof FilterEngine>(\n    this: T,\n    fetchImpl: Fetch = fetch,\n    caching?: Caching,\n  ): Promise<InstanceType<T>> {\n    return this.fromLists(fetchImpl, adsAndTrackingLists, {}, caching);\n  }\n\n  /**\n   * Same as `fromPrebuiltAdsAndTracking(...)` but also contains annoyances\n   * rules to block things like cookie notices.\n   */\n  public static fromPrebuiltFull<T extends typeof FilterEngine>(\n    this: T,\n    fetchImpl: Fetch = fetch,\n    caching?: Caching,\n  ): Promise<InstanceType<T>> {\n    return this.fromLists(fetchImpl, fullLists, {}, caching);\n  }\n\n  public static parse<T extends FilterEngine>(\n    this: new (...args: any[]) => T,\n    filters: string,\n    options: Partial<Config> = {},\n  ): T {\n    const config = new Config(options);\n    return new this({\n      ...parseFilters(filters, config),\n      config,\n    });\n  }\n\n  public static deserialize<T extends FilterEngine>(\n    this: new (...args: any[]) => T,\n    serialized: Uint8Array,\n  ): T {\n    const buffer = StaticDataView.fromUint8Array(serialized, {\n      enableCompression: false,\n    });\n\n    // Before starting deserialization, we make sure that the version of the\n    // serialized engine is the same as the current source code. If not, we\n    // start fresh and create a new engine from the lists.\n    const serializedEngineVersion = buffer.getUint16();\n    if (ENGINE_VERSION !== serializedEngineVersion) {\n      throw new Error(\n        `serialized engine version mismatch, expected ${ENGINE_VERSION} but got ${serializedEngineVersion}`,\n      );\n    }\n\n    // Create a new engine with same options\n    const config = Config.deserialize(buffer);\n\n    // Optionally turn compression ON\n    if (config.enableCompression) {\n      buffer.enableCompression();\n    }\n\n    // Also make sure that the built-in checksum is correct. This allows to\n    // detect data corruption and start fresh if the serialized version was\n    // altered.\n    if (config.integrityCheck) {\n      const currentPos = buffer.pos;\n      buffer.pos = serialized.length - 4;\n      const checksum = buffer.checksum();\n      const expected = buffer.getUint32();\n      if (checksum !== expected) {\n        throw new Error(\n          `serialized engine checksum mismatch, expected ${expected} but got ${checksum}`,\n        );\n      }\n      buffer.pos = currentPos;\n    }\n\n    const engine = new this({ config });\n\n    // Deserialize resources\n    engine.resources = Resources.deserialize(buffer);\n\n    // Deserialize lists\n    const lists = new Map();\n    const numberOfLists = buffer.getUint16();\n    for (let i = 0; i < numberOfLists; i += 1) {\n      lists.set(buffer.getASCII(), buffer.getASCII());\n    }\n    engine.lists = lists;\n\n    // Deserialize buckets\n    engine.importants = NetworkFilterBucket.deserialize(buffer, config);\n    engine.redirects = NetworkFilterBucket.deserialize(buffer, config);\n    engine.filters = NetworkFilterBucket.deserialize(buffer, config);\n    engine.exceptions = NetworkFilterBucket.deserialize(buffer, config);\n\n    engine.csp = NetworkFilterBucket.deserialize(buffer, config);\n    engine.cosmetics = CosmeticFilterBucket.deserialize(buffer, config);\n    engine.hideExceptions = NetworkFilterBucket.deserialize(buffer, config);\n\n    return engine;\n  }\n\n  public lists: Map<string, string>;\n\n  public csp: NetworkFilterBucket;\n  public hideExceptions: NetworkFilterBucket;\n  public exceptions: NetworkFilterBucket;\n  public importants: NetworkFilterBucket;\n  public redirects: NetworkFilterBucket;\n  public filters: NetworkFilterBucket;\n  public cosmetics: CosmeticFilterBucket;\n\n  public resources: Resources;\n  public readonly config: Config;\n\n  constructor({\n    // Optionally initialize the engine with filters\n    cosmeticFilters = [],\n    networkFilters = [],\n\n    config = new Config(),\n    lists = new Map(),\n  }: {\n    cosmeticFilters?: CosmeticFilter[];\n    networkFilters?: NetworkFilter[];\n    lists?: Map<string, string>;\n    config?: Partial<Config>;\n  } = {}) {\n    super(); // init super-class EventEmitter\n\n    this.config = new Config(config);\n\n    // Subscription management: disabled by default\n    this.lists = lists;\n\n    // $csp=\n    this.csp = new NetworkFilterBucket({ config: this.config });\n    // $elemhide\n    // $generichide\n    // $specifichide\n    this.hideExceptions = new NetworkFilterBucket({ config: this.config });\n    // @@filter\n    this.exceptions = new NetworkFilterBucket({ config: this.config });\n    // $important\n    this.importants = new NetworkFilterBucket({ config: this.config });\n    // $redirect\n    this.redirects = new NetworkFilterBucket({ config: this.config });\n    // All other filters\n    this.filters = new NetworkFilterBucket({ config: this.config });\n    // Cosmetic filters\n    this.cosmetics = new CosmeticFilterBucket({ config: this.config });\n\n    // Injections\n    this.resources = new Resources();\n\n    if (networkFilters.length !== 0 || cosmeticFilters.length !== 0) {\n      this.update({\n        newCosmeticFilters: cosmeticFilters,\n        newNetworkFilters: networkFilters,\n      });\n    }\n  }\n\n  /**\n   * Estimate the number of bytes needed to serialize this instance of\n   * `FiltersEngine` using the `serialize(...)` method. It is used internally\n   * by `serialize(...)` to allocate a buffer of the right size and you should\n   * not have to call it yourself most of the time.\n   *\n   * There are cases where we cannot estimate statically the exact size of the\n   * resulting buffer (due to alignement which need to be performed); this\n   * method will return a safe estimate which will always be at least equal to\n   * the real number of bytes needed, or bigger (usually of a few bytes only:\n   * ~20 bytes is to be expected).\n   */\n  public getSerializedSize(): number {\n    let estimatedSize: number =\n      sizeOfByte() + // engine version\n      this.config.getSerializedSize() +\n      this.resources.getSerializedSize() +\n      this.filters.getSerializedSize() +\n      this.exceptions.getSerializedSize() +\n      this.importants.getSerializedSize() +\n      this.redirects.getSerializedSize() +\n      this.csp.getSerializedSize() +\n      this.cosmetics.getSerializedSize() +\n      this.hideExceptions.getSerializedSize() +\n      4; // checksum\n\n    // Estimate size of `this.lists` which stores information of checksum for each list.\n    for (const [name, checksum] of this.lists) {\n      estimatedSize += sizeOfASCII(name) + sizeOfASCII(checksum);\n    }\n\n    return estimatedSize;\n  }\n\n  /**\n   * Creates a binary representation of the full engine. It can be stored\n   * on-disk for faster loading of the adblocker. The `deserialize` static\n   * method of Engine can be used to restore the engine.\n   */\n  public serialize(array?: Uint8Array): Uint8Array {\n    const buffer = StaticDataView.fromUint8Array(\n      array || new Uint8Array(this.getSerializedSize()),\n      this.config,\n    );\n\n    buffer.pushUint16(ENGINE_VERSION);\n\n    // Config\n    this.config.serialize(buffer);\n\n    // Resources (js, resources)\n    this.resources.serialize(buffer);\n\n    // Serialize the state of lists (names and checksums)\n    buffer.pushUint16(this.lists.size);\n    for (const [name, value] of Array.from(this.lists.entries()).sort()) {\n      buffer.pushASCII(name);\n      buffer.pushASCII(value);\n    }\n\n    // Filters buckets\n    this.importants.serialize(buffer);\n    this.redirects.serialize(buffer);\n    this.filters.serialize(buffer);\n    this.exceptions.serialize(buffer);\n\n    this.csp.serialize(buffer);\n    this.cosmetics.serialize(buffer);\n    this.hideExceptions.serialize(buffer);\n\n    // Optionally append a checksum at the end\n    if (this.config.integrityCheck) {\n      buffer.pushUint32(buffer.checksum());\n    }\n\n    return buffer.subarray();\n  }\n\n  /**\n   * Update engine with new filters or resources.\n   */\n  public loadedLists(): string[] {\n    return Array.from(this.lists.keys());\n  }\n\n  public hasList(name: string, checksum: string): boolean {\n    return this.lists.has(name) && this.lists.get(name) === checksum;\n  }\n\n  /**\n   * Update engine with `resources.txt` content.\n   */\n  public updateResources(data: string, checksum: string): boolean {\n    if (this.resources.checksum === checksum) {\n      return false;\n    }\n\n    this.resources = Resources.parse(data, { checksum });\n    return true;\n  }\n\n  public getFilters(): { networkFilters: NetworkFilter[]; cosmeticFilters: CosmeticFilter[] } {\n    const cosmeticFilters: CosmeticFilter[] = [];\n    const networkFilters: NetworkFilter[] = [];\n\n    return {\n      cosmeticFilters: cosmeticFilters.concat(this.cosmetics.getFilters()),\n      networkFilters: networkFilters.concat(\n        this.filters.getFilters(),\n        this.exceptions.getFilters(),\n        this.importants.getFilters(),\n        this.redirects.getFilters(),\n        this.csp.getFilters(),\n        this.hideExceptions.getFilters(),\n      ),\n    };\n  }\n\n  /**\n   * Update engine with new filters as well as optionally removed filters.\n   */\n  public update({\n    newNetworkFilters = [],\n    newCosmeticFilters = [],\n    removedCosmeticFilters = [],\n    removedNetworkFilters = [],\n  }: Partial<IListDiff>): boolean {\n    let updated: boolean = false;\n\n    // Update cosmetic filters\n    if (\n      this.config.loadCosmeticFilters &&\n      (newCosmeticFilters.length !== 0 || removedCosmeticFilters.length !== 0)\n    ) {\n      updated = true;\n      this.cosmetics.update(\n        newCosmeticFilters,\n        removedCosmeticFilters.length === 0 ? undefined : new Set(removedCosmeticFilters),\n        this.config,\n      );\n    }\n\n    // Update network filters\n    if (\n      this.config.loadNetworkFilters &&\n      (newNetworkFilters.length !== 0 || removedNetworkFilters.length !== 0)\n    ) {\n      updated = true;\n      const filters: NetworkFilter[] = [];\n      const csp: NetworkFilter[] = [];\n      const exceptions: NetworkFilter[] = [];\n      const importants: NetworkFilter[] = [];\n      const redirects: NetworkFilter[] = [];\n      const hideExceptions: NetworkFilter[] = [];\n\n      for (const filter of newNetworkFilters) {\n        // NOTE: it's important to check for $generichide, $elemhide,\n        // $specifichide and $csp before exceptions and important as we store\n        // all of them in the same filter bucket. The check for exceptions is\n        // done at match-time directly.\n        if (filter.isCSP()) {\n          csp.push(filter);\n        } else if (filter.isGenericHide() || filter.isSpecificHide()) {\n          hideExceptions.push(filter);\n        } else if (filter.isException()) {\n          exceptions.push(filter);\n        } else if (filter.isImportant()) {\n          importants.push(filter);\n        } else if (filter.isRedirect()) {\n          redirects.push(filter);\n        } else {\n          filters.push(filter);\n        }\n      }\n\n      const removedNetworkFiltersSet: Set<number> | undefined =\n        removedNetworkFilters.length === 0 ? undefined : new Set(removedNetworkFilters);\n\n      // Update buckets in-place\n      this.importants.update(importants, removedNetworkFiltersSet);\n      this.redirects.update(redirects, removedNetworkFiltersSet);\n      this.filters.update(filters, removedNetworkFiltersSet);\n\n      if (this.config.loadExceptionFilters === true) {\n        this.exceptions.update(exceptions, removedNetworkFiltersSet);\n      }\n\n      if (this.config.loadCSPFilters === true) {\n        this.csp.update(csp, removedNetworkFiltersSet);\n      }\n\n      this.hideExceptions.update(hideExceptions, removedNetworkFiltersSet);\n    }\n\n    return updated;\n  }\n\n  public updateFromDiff({ added, removed }: Partial<IRawDiff>): boolean {\n    const newCosmeticFilters: CosmeticFilter[] = [];\n    const newNetworkFilters: NetworkFilter[] = [];\n    const removedCosmeticFilters: CosmeticFilter[] = [];\n    const removedNetworkFilters: NetworkFilter[] = [];\n\n    if (removed !== undefined && removed.length !== 0) {\n      const { networkFilters, cosmeticFilters } = parseFilters(removed.join('\\n'), this.config);\n      Array.prototype.push.apply(removedCosmeticFilters, cosmeticFilters);\n      Array.prototype.push.apply(removedNetworkFilters, networkFilters);\n    }\n\n    if (added !== undefined && added.length !== 0) {\n      const { networkFilters, cosmeticFilters } = parseFilters(added.join('\\n'), this.config);\n      Array.prototype.push.apply(newCosmeticFilters, cosmeticFilters);\n      Array.prototype.push.apply(newNetworkFilters, networkFilters);\n    }\n\n    return this.update({\n      newCosmeticFilters,\n      newNetworkFilters,\n      removedCosmeticFilters: removedCosmeticFilters.map((f) => f.getId()),\n      removedNetworkFilters: removedNetworkFilters.map((f) => f.getId()),\n    });\n  }\n\n  /**\n   * Return a list of HTML filtering rules.\n   */\n  public getHtmlFilters({\n    // Page information\n    url,\n    hostname,\n    domain,\n  }: {\n    url: string;\n    hostname: string;\n    domain: string | null | undefined;\n  }): HTMLSelector[] {\n    const htmlSelectors: HTMLSelector[] = [];\n\n    if (this.config.enableHtmlFiltering === false || this.config.loadCosmeticFilters === false) {\n      return htmlSelectors;\n    }\n\n    const rules = this.cosmetics.getHtmlRules({\n      domain: domain || '',\n      hostname,\n    });\n\n    for (const rule of rules) {\n      const extended = rule.getExtendedSelector();\n      if (extended !== undefined) {\n        htmlSelectors.push(extended);\n      }\n    }\n\n    if (htmlSelectors.length !== 0) {\n      this.emit('html-filtered', htmlSelectors, url);\n    }\n\n    return htmlSelectors;\n  }\n\n  /**\n   * Given `hostname` and `domain` of a page (or frame), return the list of\n   * styles and scripts to inject in the page.\n   */\n  public getCosmeticsFilters({\n    // Page information\n    url,\n    hostname,\n    domain,\n\n    // DOM information\n    classes,\n    hrefs,\n    ids,\n\n    // Allows to specify which rules to return\n    getBaseRules = true,\n    getInjectionRules = true,\n    getExtendedRules = true,\n    getRulesFromDOM = true,\n    getRulesFromHostname = true,\n  }: {\n    url: string;\n    hostname: string;\n    domain: string | null | undefined;\n\n    classes?: string[] | undefined;\n    hrefs?: string[] | undefined;\n    ids?: string[] | undefined;\n\n    getBaseRules?: boolean;\n    getInjectionRules?: boolean;\n    getExtendedRules?: boolean;\n    getRulesFromDOM?: boolean;\n    getRulesFromHostname?: boolean;\n  }): IMessageFromBackground {\n    if (this.config.loadCosmeticFilters === false) {\n      return {\n        active: false,\n        extended: [],\n        scripts: [],\n        styles: '',\n      };\n    }\n\n    let allowGenericHides = true;\n    let allowSpecificHides = true;\n\n    const exceptions = this.hideExceptions.matchAll(\n      Request.fromRawDetails({\n        domain: domain || '',\n        hostname,\n        url,\n\n        sourceDomain: '',\n        sourceHostname: '',\n        sourceUrl: '',\n      }),\n    );\n\n    const genericHides: NetworkFilter[] = [];\n    const specificHides: NetworkFilter[] = [];\n    for (const filter of exceptions) {\n      if (filter.isElemHide()) {\n        allowGenericHides = false;\n        allowSpecificHides = false;\n        break;\n      }\n\n      if (filter.isSpecificHide()) {\n        specificHides.push(filter);\n      } else if (filter.isGenericHide()) {\n        genericHides.push(filter);\n      }\n    }\n\n    if (allowGenericHides === true) {\n      allowGenericHides = shouldApplyHideException(genericHides) === false;\n    }\n\n    if (allowSpecificHides === true) {\n      allowSpecificHides = shouldApplyHideException(specificHides) === false;\n    }\n\n    // Lookup injections as well as stylesheets\n    const { injections, stylesheet, extended } = this.cosmetics.getCosmeticsFilters({\n      domain: domain || '',\n      hostname,\n\n      classes,\n      hrefs,\n      ids,\n\n      allowGenericHides,\n      allowSpecificHides,\n\n      getBaseRules,\n      getInjectionRules,\n      getExtendedRules,\n      getRulesFromDOM,\n      getRulesFromHostname,\n    });\n\n    // Perform interpolation for injected scripts\n    const scripts: string[] = [];\n    for (const injection of injections) {\n      const script = injection.getScript(this.resources.js);\n      if (script !== undefined) {\n        this.emit('script-injected', script, url);\n        scripts.push(script);\n      }\n    }\n\n    // Emit events\n    if (stylesheet.length !== 0) {\n      this.emit('style-injected', stylesheet, url);\n    }\n\n    return {\n      active: true,\n      extended,\n      scripts,\n      styles: stylesheet,\n    };\n  }\n\n  /**\n   * Given a `request`, return all matching network filters found in the engine.\n   */\n  public matchAll(request: Request): Set<NetworkFilter> {\n    const filters: NetworkFilter[] = [];\n    if (request.isSupported) {\n      Array.prototype.push.apply(filters, this.importants.matchAll(request));\n      Array.prototype.push.apply(filters, this.filters.matchAll(request));\n      Array.prototype.push.apply(filters, this.exceptions.matchAll(request));\n      Array.prototype.push.apply(filters, this.csp.matchAll(request));\n      Array.prototype.push.apply(filters, this.hideExceptions.matchAll(request));\n      Array.prototype.push.apply(filters, this.redirects.matchAll(request));\n    }\n\n    return new Set(filters);\n  }\n\n  /**\n   * Given a \"main_frame\" request, check if some content security policies\n   * should be injected in the page.\n   */\n  public getCSPDirectives(request: Request): string | undefined {\n    if (!this.config.loadNetworkFilters) {\n      return undefined;\n    }\n\n    if (request.isSupported !== true || request.isMainFrame() === false) {\n      return undefined;\n    }\n\n    const matches = this.csp.matchAll(request);\n\n    // No $csp filter found\n    if (matches.length === 0) {\n      return undefined;\n    }\n\n    // Collect all CSP directives and keep track of exceptions\n    const disabledCsp = new Set();\n    const enabledCsp = new Set();\n    for (const filter of matches) {\n      if (filter.isException()) {\n        if (filter.csp === undefined) {\n          // All CSP directives are disabled for this site\n          return undefined;\n        }\n        disabledCsp.add(filter.csp);\n      } else {\n        enabledCsp.add(filter.csp);\n      }\n    }\n\n    // Combine all CSPs (except the black-listed ones)\n    const csps: string | undefined =\n      Array.from(enabledCsp)\n        .filter((csp) => !disabledCsp.has(csp))\n        .join('; ') || undefined;\n\n    // Emit event\n    if (csps !== undefined) {\n      this.emit('csp-injected', csps, request);\n    }\n\n    return csps;\n  }\n\n  /**\n   * Decide if a network request (usually from WebRequest API) should be\n   * blocked, redirected or allowed.\n   */\n  public match(request: Request): BlockingResponse {\n    const result: BlockingResponse = {\n      exception: undefined,\n      filter: undefined,\n      match: false,\n      redirect: undefined,\n    };\n\n    if (!this.config.loadNetworkFilters) {\n      return result;\n    }\n\n    if (request.isSupported) {\n      // Check the filters in the following order:\n      // 1. $important (not subject to exceptions)\n      // 2. redirection ($redirect=resource)\n      // 3. normal filters\n      // 4. exceptions\n      result.filter = this.importants.match(request);\n\n      let redirectNone: NetworkFilter | undefined;\n      let redirectRule: NetworkFilter | undefined;\n\n      // If `result.filter` is `undefined`, it means there was no $important\n      // filter found so far. We look for a $redirect filter.  There is some\n      // extra logic to handle special cases like redirect-rule and\n      // redirect=none.\n      //\n      // * If redirect=none is found, then cancel all redirects.\n      // * Else if redirect-rule is found, only redirect if request would be blocked.\n      // * Else if redirect is found, redirect.\n      if (result.filter === undefined) {\n        const redirects = this.redirects.matchAll(request);\n        if (redirects.length !== 0) {\n          for (const filter of redirects) {\n            if (filter.getRedirect() === 'none') {\n              redirectNone = filter;\n            } else if (filter.isRedirectRule()) {\n              redirectRule = filter;\n            } else {\n              result.filter = filter;\n            }\n          }\n        }\n\n        // If `result.filter` is still `undefined`, it means that there was no\n        // redirection rule triggered for the request. We look for a normal\n        // match.\n        if (result.filter === undefined) {\n          result.filter = this.filters.match(request);\n\n          // If we found a match, and a `$redirect-rule` as found previously,\n          // then we transform the match into a redirect, following the\n          // semantics of redirect-rule.\n          if (redirectRule !== undefined && result.filter !== undefined) {\n            result.filter = redirectRule;\n          }\n        }\n\n        // If we found either a redirection rule or a normal match, then check\n        // for exceptions which could apply on the request and un-block it.\n        if (result.filter !== undefined) {\n          result.exception = this.exceptions.match(request);\n        }\n      }\n\n      // If there was a redirect match and no exception was found, then we\n      // proceed and process the redirect rule. This means two things:\n      //\n      // 1. Check if a redirect=none rule was found, which acts as exception.\n      // 2. If no exception was found, prepare `result.redirect` response.\n      if (\n        result.filter !== undefined &&\n        result.exception === undefined &&\n        result.filter.isRedirect()\n      ) {\n        if (redirectNone !== undefined) {\n          result.exception = redirectNone;\n        } else {\n          result.redirect = this.resources.getResource(result.filter.getRedirect());\n        }\n      }\n    }\n\n    result.match = result.exception === undefined && result.filter !== undefined;\n\n    // Emit events if we found a match\n    if (result.exception !== undefined) {\n      this.emit('request-whitelisted', request, result);\n    } else if (result.redirect !== undefined) {\n      this.emit('request-redirected', request, result);\n    } else if (result.filter !== undefined) {\n      this.emit('request-blocked', request, result);\n    } else {\n      this.emit('request-allowed', request, result);\n    }\n\n    return result;\n  }\n\n  public blockScripts() {\n    this.updateFromDiff({\n      added: [block().scripts().redirectTo('javascript').toString()],\n    });\n    return this;\n  }\n\n  public blockImages() {\n    this.updateFromDiff({\n      added: [block().images().redirectTo('png').toString()],\n    });\n    return this;\n  }\n\n  public blockMedias() {\n    this.updateFromDiff({\n      added: [block().medias().redirectTo('mp4').toString()],\n    });\n    return this;\n  }\n\n  public blockFrames() {\n    this.updateFromDiff({\n      added: [block().frames().redirectTo('html').toString()],\n    });\n    return this;\n  }\n\n  public blockFonts() {\n    this.updateFromDiff({\n      added: [block().fonts().toString()],\n    });\n    return this;\n  }\n\n  public blockStyles() {\n    this.updateFromDiff({\n      added: [block().styles().toString()],\n    });\n    return this;\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\n/*!\n * Copyright (c) 2008-2009 Bjoern Hoehrmann <bjoern@hoehrmann.de>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\n// From http://bjoern.hoehrmann.de/utf-8/decoder/dfa/\nconst utf8d = new Uint8Array([\n  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, // 00..1f\n  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, // 20..3f\n  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, // 40..5f\n  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, // 60..7f\n  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9, // 80..9f\n  7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7, // a0..bf\n  8,8,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2, // c0..df\n  0xa,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x4,0x3,0x3, // e0..ef\n  0xb,0x6,0x6,0x6,0x5,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8, // f0..ff\n  0x0,0x1,0x2,0x3,0x5,0x8,0x7,0x1,0x1,0x1,0x4,0x6,0x1,0x1,0x1,0x1, // s0..s0\n  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,0,1,1,1,1,1,1, // s1..s2\n  1,2,1,1,1,1,1,2,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1, // s3..s4\n  1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,3,1,1,1,1,1,1, // s5..s6\n  1,3,1,1,1,1,1,3,1,3,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1, // s7..s8\n]);\n\nfunction isAscii(bytes: Uint8Array): boolean {\n  if (bytes.length === 0) {\n    return true;\n  }\n\n  for (let i = 0; i < bytes.length; i += 1) {\n    if (bytes[i] > 127) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function isUTF8(bytes: Uint8Array): boolean {\n  if (bytes.length === 0) {\n    return true;\n  }\n\n  if (isAscii(bytes) === true) {\n    return true;\n  }\n\n  let state: number = 0;\n  for (let i = 0; i < bytes.length; i += 1) {\n    const type = utf8d[bytes[i]];\n    state = utf8d[256 + state * 16 + type];\n    if (state === 1 || state === undefined) {\n      return false;\n    }\n  }\n\n  return true;\n}\n"],"names":["newNode","chars","Map","code","undefined","EMPTY_UINT8_ARRAY","Uint8Array","SmazCompress","constructor","codebook","maxSize","this","trie","strings","node","i","length","tok","root","j","c","charCodeAt","next","get","set","create","buffer","verbatim","getCompressedSize","str","bufferIndex","verbatimIndex","inputIndex","indexAfterMatch","compress","len","flushVerbatim","slice","k","SmazDecompress","decompress","arr","byteLength","output","String","fromCharCode","stop","Smaz","compressor","decompressor","cosmeticSelectorCodebook","networkCSPCodebook","networkFilterCodebook","networkHostnameCodebook","networkRedirectCodebook","networkRawCodebook","cosmeticRawCodebook","Compression","cosmeticSelector","networkCSP","networkRedirect","networkHostname","networkFilter","networkRaw","cosmeticRaw","T","table","Int32Array","n","maxInt","base","regexNonASCII","regexSeparators","errors","overflow","error","type","RangeError","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","Math","floor","decode","input","inputLength","bias","basic","lastIndexOf","push","index","oldi","w","codePoint","t","baseMinusT","out","splice","fromCodePoint","apply","encode","counter","value","extra","ucs2decode","currentValue","basicLength","handledCPCount","m","handledCPCountPlusOne","q","qMinusT","join","toASCII","labels","replace","split","encoded","test","EMPTY_UINT32_ARRAY","Uint32Array","LITTLE_ENDIAN","Int8Array","Int16Array","promise","getCompressionSingleton","COMPRESSION","sizeOfLength","sizeOfBytes","array","align","sizeOfBytesWithLength","sizeOfASCII","sizeOfUTF8","encodedLength","sizeOfUint32Array","StaticDataView","enableCompression","Error","pos","static","options","fromUint8Array","capacity","compression","checksum","buf","start","end","C","L","crc32","dataAvailable","setPos","getPos","seekZero","checkSize","subarray","align4","pushBool","bool","pushByte","Number","getBool","Boolean","getByte","setByte","byte","octet","pushUint8","getUint8","pushBytes","bytes","pushLength","getBytes","numberOfBytes","getLength","getUint32ArrayView","desiredSize","view","byteOffset","uint8","pushUint16","uint16","getUint16","pushUint32","uint32","getUint32","pushUint32Array","getUint32Array","pushUTF8","raw","getUTF8","pushASCII","getASCII","pushNetworkRedirect","getNetworkRedirect","pushNetworkHostname","getNetworkHostname","pushNetworkCSP","getNetworkCSP","pushNetworkFilter","getNetworkFilter","pushCosmeticSelector","getCosmeticSelector","pushRawCosmetic","getRawCosmetic","pushRawNetwork","getRawNetwork","lengthShort","Config","debug","enableHtmlFiltering","enableInMemoryCache","enableMutationObserver","enableOptimizations","guessRequestTypeFromUrl","integrityCheck","loadCSPFilters","loadCosmeticFilters","loadExceptionFilters","loadExtendedSelectors","loadGenericCosmeticsFilters","loadNetworkFilters","getSerializedSize","serialize","queueMicrotask","window","cb","Promise","resolve","then","catch","err","setTimeout","registerCallback","event","callback","listeners","listenersForEvent","unregisterCallback","indexOfCallback","indexOf","triggerCallback","args","size","listener","fetchWithRetry","fetch","url","retry","fetchWrapper","ex","reject","fetchResource","response","text","PREFIX","adsLists","adsAndTrackingLists","fullLists","fetchLists","urls","all","map","fetchResources","NetworkBuilder","Set","prefix","infix","suffix","redirect","blockRequestsWithType","has","add","images","scripts","frames","fonts","medias","styles","redirectTo","urlContains","urlStartsWith","urlEndsWith","withHostname","hostname","toString","parts","option","block","RECURSIVE_PSEUDO_CLASSES","TOKENS","attribute","id","class","comma","combinator","TOKENS_WITH_PARENS","TOKENS_WITH_STRINGS","TRIM_TOKENS","TOKENS_FOR_RESTORE","Object","assign","splitOnMatch","pattern","lastIndex","match","exec","from","content","before","after","groups","RegExp","source","GRAMMAR","name","operator","namespace","caseSensitive","argument","subtree","restoreNested","tokens","regex","types","token","isEscaped","backslashes","gobbleQuotes","quote","gobbleParens","stack","char","selector","replacement","opening","gobble","offset","repeat","tokenize","trim","doubleQuotes","selectorWithoutDoubleQuotes","singleQuotes","selectorWithoutQuotes","parens","selectorWithoutParens","strarr","tokenizer","filter","a","every","tokenizeBy","nestTokens","list","some","selectors","temp","sub","left","right","isAST","compound","walk","o","parent","parse","recursive","ast","EXTENDED_PSEUDO_CLASSES","PSEUDO_CLASSES","PSEUDO_ELEMENTS","SelectorType","classifySelector","Normal","foundSupportedExtendedSelector","Invalid","argumentType","Extended","EXTENSIONS","extractHostname","urlIsValidHostname","hasUpper","startsWith","indexOfProtocol","protocolSize","c0","c1","c2","c3","c4","lowerCaseCode","indexOfIdentifier","indexOfClosingBracket","indexOfPort","toLowerCase","isValidHostname","lastDotIndex","lastCharCode","isValidAscii","DEFAULT_OPTIONS","allowIcannDomains","allowPrivateDomains","detectIp","mixedInputs","validHosts","validateHostname","setDefaultsImpl","parseImpl","step","suffixLookup","partialOptions","result","setDefaults","isIp","hasColon","isProbablyIpv6","numberOfDots","isProbablyIpv4","publicSuffix","domain","vhost","endsWith","shareSameDomainSuffix","publicSuffixIndex","lastDotBeforeSuffixIndex","extractDomainWithSuffix","getDomain","subdomain","getSubdomain","domainWithoutSuffix","packed","binSearch","elt","low","high","mid","midVal","BUFFER","last","isIcann","isPrivate","fastPathLookup","matchIndex","matchKind","matchLabels","numberOfHashes","maximumNumberOfLabels","hash","hashHostnameLabelsBackward","label","labelStart","TOKENS_BUFFER","reset","empty","full","remaining","HASH_SEED","bitCount","getBit","mask","setBit","clearBit","fastHashBetween","begin","fastHash","hashStrings","fastStartsWith","haystack","needle","ceil","fastStartsWithFrom","isDigit","ch","isAlpha","isAllowedCode","isAlphaExtended","isCyrillic","tokenizeInPlace","skipFirstToken","skipLastToken","min","inside","tokenizeNoSkipInPlace","tokenizeNoSkip","binLookup","hasUnicodeRe","hasUnicode","TLDTS_OPTIONS","NORMALIZED_TYPE_TOKEN","beacon","cspReport","csp_report","cspviolationreport","document","eventsource","font","image","imageset","mainFrame","main_frame","manifest","media","object","object_subrequest","other","ping","preflight","script","signedexchange","speculative","stylesheet","subFrame","sub_frame","texttrack","webSocket","web_manifest","websocket","xhr","xml_dtd","xmlhttprequest","xslt","hashHostnameBackward","getHashesFromLabelsBackward","startOfDomain","getEntityHashesFromLabelsBackward","hostnameWithoutPublicSuffix","indexOfDot","getHostnameWithoutPublicSuffix","getHostnameHashesFromLabelsBackward","Request","requestId","tabId","sourceDomain","sourceHostname","_originalRequestDetails","hostnameHashes","entityHashes","sourceHostnameHashes","sourceEntityHashes","isThirdParty","isFirstParty","isSupported","isHttp","isHttps","indexOfComa","sourceUrl","parsed","getHostnameHashes","getEntityHashes","getTokens","isMainFrame","isSubFrame","guessTypeOfRequest","currentType","ext","endOfPath","indexOfFragment","indexOfQuery","startOfExt","extname","IMAGE_EXTENSIONS","MEDIA_EXTENSIONS","STYLE_EXTENSIONS","SCRIPT_EXTENSIONS","DOCUMENT_EXTENSIONS","FONT_EXTENSIONS","guessUrlType","Domains","entities","hostnames","notEntities","notHostnames","negation","entity","sort","optionalParts","updateId","notHostname","notEntity","estimate","extractHTMLSelectorFromRule","rule","currentParsingDepth","startOfSelectorIndex","prev","tagShouldBeRemoved","tag","plainPatterns","regexpPatterns","EMPTY_TOKENS","DEFAULT_HIDDING_STYLE","isSimpleSelector","nextCode","isSimpleHrefSelector","isValidCss","div","createElement","matches","validSelectorRe","CosmeticFilter","domains","rawLine","style","line","sharpIndex","afterSharpIndex","suffixStartIndex","indexOfStyle","selectorType","isUnicode","deserialize","isCosmeticFilter","isNetworkFilter","sizeOfCosmeticSelector","sizeOfRawCosmetic","isUnhide","isScriptInject","hasHostnameConstraint","isIdSelector","isClassSelector","endOfSelector","isHrefSelector","getSelector","hrefIndex","hrefEnd","getScript","js","scriptName","scriptArguments","firstPart","s","getId","computeFilterId","hasCustomStyle","getStyle","getStyleAttributeHash","getSelectorAST","parseCssSelector","getExtendedSelector","isExtended","isRemove","isCSS","isHtmlFiltering","isGenericHide","_a","_b","HTTP_HASH","HTTPS_HASH","FROM_ANY","REQUEST_TYPE_TO_MASK","getListOfRequestTypes","fromDocument","fromImage","fromMedia","fromObject","fromOther","fromPing","fromScript","fromStylesheet","fromSubdocument","fromWebsocket","fromXmlHttpRequest","fromFont","csp","denyallow","compileRegex","isLeftAnchor","isRightAnchor","isFullRegex","MATCH_ALL","NetworkFilter","cptMaskPositive","cptMaskNegative","filterIndexStart","filterIndexEnd","optionsIndex","rawOption","optionValue","indexOfEqual","optionMask","firstSeparator","separatorCode","setNetworkMask","indexOfSeparator","indexOfWildcard","checkIsRegex","request","isCptAllowed","fromHttps","fromHttp","firstParty","thirdParty","checkOptions","getFilter","isHostnameAnchor","filterHostname","getHostname","isFollowedByWildcard","isAnchoredByHostname","isRegex","getRegex","requestHostname","hasFilter","checkPattern","sizeOfNetworkCSP","sizeOfNetworkFilter","sizeOfNetworkHostname","sizeOfRawNetwork","sizeOfNetworkRedirect","isException","hasHostname","fromAny","numberOfCptOptions","getCptMask","getListOfRequestTypesNegated","isImportant","isRedirectRule","getRedirect","isRedirect","isCSP","isElemHide","isSpecificHide","isBadFilter","getIdWithoutBadFilter","hasDomains","getMask","precedingCh","tokenizeWithWildcardsInPlace","tokenizeRegexInPlace","cpt","isPlain","detectFilterType","firstCharCode","secondCharCode","dollarIndex","afterDollarIndex","afterDollarCharCode","afterSharpCharCode","parseFilter","filterType","parseFilters","config","networkFilters","cosmeticFilters","lines","nextLine","getFilters","concat","CONTENT_TYPE","flv","contentType","aliases","body","gif","html","ico","jpg","json","mp3","mp4","pdf","png","svg","txt","wav","webm","webp","wmv","MIME_TO_RESOURCE","resources","fake","alias","getResourceForMime","mime","Resources","numberOfResources","forEach","data","typeToResource","chunks","chunk","resource","firstNewLine","key","entries","resourcesByName","getResource","dataUrl","btoa","Buffer","estimatedSize","escape","setWithDefault","bucket","groupBy","filters","criteria","grouped","Array","values","splitBy","condition","positive","negative","OPTIMIZATIONS","description","fusion","groupByCriteria","select","patterns","f","noopOptimizeNetwork","noopOptimizeCosmetic","optimizeNetwork","fused","toFuse","group","nextPow2","v","UID","EMPTY_BUCKET","MAX_SAFE_INTEGER","ReverseIndex","optimize","bucketsIndex","filtersIndexStart","numberOfFilters","tokensLookupIndex","cache","deserializeFilter","update","tokensLookupIndexSize","bucketsIndexSize","updateInternals","iterMatchingFilters","getNextId","iterBucket","newFilters","removedFilters","clear","totalNumberOfTokens","totalNumberOfIndexedFilters","filtersTokens","estimatedBufferSize","f1","f2","histogram","max","multiTokens","suffixes","allocate","filterIndex","bestToken","minCount","tokenCount","indexInBucketsIndex","filtersForMask","startOfBucket","endOfBucket","filtersIndices","lastRequestSeen","EMPTY_FILTERS","FiltersContainer","container","bufferSizeEstimation","selected","currentFilters","storedFiltersRemoved","numberOfExistingFilters","storedFiltersAdded","createStylesheet","rules","maximumNumberOfSelectors","styleStr","createStylesheetFromRulesWithCustomStyles","selectorsPerStyle","stylesheets","selectorsPerStyleArray","createStylesheetFromRules","createLookupTokens","hostnamesHashes","entitiesHashes","CosmeticFilterBucket","genericRules","classesIndex","hostnameIndex","hrefsIndex","htmlIndex","idsIndex","unhideIndex","baseStylesheet","extraGenericRules","classSelectors","genericHideRules","hostnameSpecificRules","hrefSelectors","htmlRules","idSelectors","unHideRules","getHtmlRules","hostnameTokens","disabledRules","getCosmeticsFilters","classes","hrefs","ids","allowGenericHides","allowSpecificHides","getBaseRules","getInjectionRules","getExtendedRules","getRulesFromDOM","getRulesFromHostname","getGenericRules","sorted","compactTokens","arrays","totalSize","concatTypedArrays","href","extended","injections","injectionsDisabled","getBaseStylesheet","extendedProcessed","extendedStyles","remove","lazyPopulateGenericRulesCache","canBeHiddenSelectors","cannotBeHiddenRules","canBeHiddenRules","NetworkFilterBucket","badFiltersIds","badFilters","matchAll","isFilterDisabled","badFilter","ENGINE_VERSION","shouldApplyHideException","genericHideFilter","currentScore","score","utf8d","onceListeners","onListeners","on","once","unsubscribe","emit","delete","lists","super","hideExceptions","exceptions","importants","redirects","cosmetics","newCosmeticFilters","newNetworkFilters","init","caching","path","read","write","engine","fromCached","listsPromises","resourcesPromise","updateResources","fetchImpl","fromLists","serialized","serializedEngineVersion","currentPos","expected","numberOfLists","loadedLists","keys","hasList","removedCosmeticFilters","removedNetworkFilters","updated","removedNetworkFiltersSet","updateFromDiff","added","removed","prototype","getHtmlFilters","htmlSelectors","active","fromRawDetails","genericHides","specificHides","injection","getCSPDirectives","disabledCsp","enabledCsp","csps","exception","redirectNone","redirectRule","blockScripts","blockImages","blockMedias","blockFrames","blockFonts","blockStyles","_","extractSelectorsFromRules","flush","tags","rest","endOfLastTag","endOfTagIndex","indexOfClosingTag","lastClosingTagIndex","indexOfNextTag","extractTagsFromHtml","toRemove","filteredHtml","reverse","removeTagsFromHtml","selectTagsToRemove","prevRevision","newRevision","debugConfig","prevRevisionFilters","prevRevisionIds","newRevisionFilters","newRevisionIds","isAscii","state","details","diffs","addedCumul","removedCumul"],"mappings":"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C5BA,GAAK,EAGT,OAAO4B,SCvBEI,EAIXvC,YAAqBC,EAA6BC,EAAU,KAAvCC,KAAQF,SAARA,EACnBE,KAAKqC,WAAa,IAAIzC,EAAaE,EAAUC,GAC7CC,KAAKsC,aAAe,IAAIV,EAAe9B,GAGlCyB,SAASL,GACd,OAAOlB,KAAKqC,WAAWd,SAASL,GAG3BD,kBAAkBC,GACvB,OAAOlB,KAAKqC,WAAWpB,kBAAkBC,GAGpCW,WAAWd,GAChB,OAAOf,KAAKsC,aAAaT,WAAWd,ICbzB,IAAAwB,EAAA,CACb,4IACA,qDACA,4CACA,yCACA,uCACA,0CACA,qCACA,qCACA,oCACA,kCACA,kCACA,kCACA,iCACA,gCACA,+BACA,8BACA,4BACA,2BACA,yBACA,wBACA,sBACA,qBACA,qBACA,oBACA,mBACA,mBACA,kBACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,cACA,aACA,aACA,aACA,aACA,aACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KC9PaC,EAAA,CACb,qJACA,wDACA,+CACA,8CACA,wCACA,qCACA,qCACA,mCACA,kCACA,+BACA,8BACA,2BACA,0BACA,0BACA,uBACA,sBACA,qBACA,qBACA,qBACA,oBACA,oBACA,oBACA,kBACA,iBACA,gBACA,eACA,cACA,cACA,aACA,aACA,aACA,YACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KCrHaC,EAAA,CACb,yLACA,mJACA,0DACA,kDACA,oCACA,4BACA,+BACA,2BACA,wBACA,wBACA,uBACA,sBACA,sBACA,mBACA,kBACA,mBACA,iBACA,kBACA,eACA,gBACA,cACA,aACA,YACA,YACA,YACA,YACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KC9PaC,EAAA,CACb,iCACA,qBACA,oBACA,oBACA,mBACA,kBACA,gBACA,aACA,YACA,YACA,YACA,WACA,UACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KC9PaC,EAAA,CACb,oCACA,mCACA,8BACA,2BACA,0BACA,uBACA,mBACA,kBACA,gBACA,gBACA,gBACA,eACA,eACA,cACA,aACA,aACA,YACA,YACA,WACA,WACA,UACA,UACA,UACA,SACA,SACA,SACA,QACA,QACA,OACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KC5EaC,EAAA,CACb,iCACA,gCACA,gCACA,gCACA,yBACA,wBACA,uBACA,oBACA,mBACA,kBACA,kBACA,iBACA,iBACA,iBACA,gBACA,kBACA,gBACA,cACA,cACA,cACA,cACA,aACA,aACA,YACA,YACA,WACA,WACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KC9PaC,EAAA,CACb,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,8BACA,4BACA,uBACA,uBACA,oBACA,mBACA,mBACA,kBACA,kBACA,iBACA,eACA,eACA,eACA,cACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,YACA,YACA,YACA,YACA,YACA,YACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KCpPY,MAAOC,EAArBjD,cACkBG,KAAA+C,iBAAyB,IAAIX,EAAKG,GAClCvC,KAAAgD,WAAmB,IAAIZ,EAAKI,GAC5BxC,KAAAiD,gBAAwB,IAAIb,EAAKO,GACjC3C,KAAAkD,gBAAwB,IAAId,EAAKM,GACjC1C,KAAAmD,cAAsB,IAAIf,EAAKK,GAC/BzC,KAAAoD,WAAmB,IAAIhB,EAAKQ,GAC5B5C,KAAAqD,YAAoB,IAAIjB,EAAKS,ICtB/C,MAAMS,EAAgB,MACpB,IAAI7C,EAAY,EAChB,MAAM8C,EAAoB,IAAIC,WAAW,KAEzC,IAAK,IAAIC,EAAY,EAAS,MAANA,EAAWA,GAAK,EACtChD,EAAIgD,EACJhD,EAAQ,EAAJA,GAAS,UAAaA,IAAM,EAAKA,IAAM,EAC3CA,EAAQ,EAAJA,GAAS,UAAaA,IAAM,EAAKA,IAAM,EAC3CA,EAAQ,EAAJA,GAAS,UAAaA,IAAM,EAAKA,IAAM,EAC3CA,EAAQ,EAAJA,GAAS,UAAaA,IAAM,EAAKA,IAAM,EAC3CA,EAAQ,EAAJA,G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"}